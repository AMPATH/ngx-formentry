{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","null","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/index.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts"],"names":["DebugModeService","prototype","debugEnabled","Injectable","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","this","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","_.each","schema","name","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","label","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","section","getQuestionByIdInSchema","questionId","Array","isArray","question","i","length","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","questions","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","Object","keys","_.includes","id","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","push","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","_this","getReferencedObject","console","error","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","array","indexOfObject","indexOf","splice","excludeQuestions","excludedQuestionId","questionsArray","referenceData","form","formSchemasLookupArray","referencedForms","alias","formName","moment","moment_","HistoricalEncounterDataService","registerEncounters","encounters","encStore","data","getValue","key","index","pathArray","split","getFirstValue","getAllObjects","getSingleObject","_.isArray","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","dataSources","getObject","path","answers","getAllValues","value","valueDate","encounterDatetime","format","_.isNil","newpath","childObject","slice","prevEncounter","location","uuid","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","concept","existing","toAdd","_.has","temp","apply","FormErrorsService","Subject","announceErrorFieldSource","asObservable","announceErrorField","next","extendStatics","setPrototypeOf","__proto__","d","b","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","call","done","ControlRelation","control","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","valueChanges","subscribe","ControlRelations","relationFor","_relationFor","_relations","addRelatedControls","_otherRelations","AbstractControl","relations","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","parentPath","_questionModel","_form","_path","removeAt","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","createRelationsToArrayControls","rChild","parentNodePath","substring","lastIndexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","paramList","argList","funcDeclarationCode","funcCallCode","warn","eval","e","relation","relatedAsControl","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","obj","AfeFormControl","formState","validator","asyncValidator","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","hiderHelper","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","disablerHelper","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","QuestionBase","options","defaultValue","originalValue","extras","renderingType","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","map","item","formatDate","offset","Error","arrayContainsAny","Validations","JsExpressionValidator","JSExpressionValidatorsEnabled","helperFunctions","js_expression","ValidationFactory","getValidators","list","_.forEach","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","replace","minlength","requiredLength","maxlength","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","tab","valueProcessingInfo","lastFormTab","announceErrorField$","scrollToControl","isCollapsed","isExpanded","parentComponent","addChildComponent","childComponents","dataSourceOptions","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","elSelector","tabComponent","setTimeout","getElementById","focus","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","styles","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","valueConverted_1","option","HistoricalValueDirective","historicalFieldHelper","EventEmitter","target","_node","compareString","stopPropagation","_nodeChange","emit","a","_.isUndefined","text","_date","Directive","Output","HostListener","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_options","highlight","equalValues","v0","v1","sort","every","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","t","_highlightedOption","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_a","tslib_1.__values","_b","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","_","placeholderView","placeholder","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","filterEnabled","onWindowClick","selectContainerClicked","closeDropdown","clearClicked","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onTouched","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","typed","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","isOpen","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","_value","TypeError","firstTime","updatePosition","filterInput","nativeElement","opened","clearFilterInput","closed","deselected","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","KEYS","altKey","preventDefault","hasFocus","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","filterInputWidth","providers","encapsulation","ViewEncapsulation","None","ViewChild","SelectDropdownComponent","optionsReset","singleFilterClick","singleFilterInput","singleFilterKeydown","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","optionClicked","getOptionStyle","background-color","highlightColor","color","highlightTextColor","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","BehaviorSubject","_result","ngOnDestroy","_subscription","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","previousUrl","_internalSubscription","sanitized","bypassSecurityTrustUrl","_obj","_latestValue","_latestReturnedValue","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","RemoteFileUploadComponent","renderer","_dataSource","uploading","fileUpload","innerValue","image","propagateChange","clearValue","Renderer2","RemoteFileUploadModule","FileUploaderModule","ModalComponent","closeModal","onOverlayClick","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","DatePickerComponent","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearsIndex","displayYearRange","generateCalendar","prev","onDisplayYears","subtract","showMonthSelection","onDisplayMonths","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","onSelectDate","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","onDatePickerCancel","generateYears","years","_.chunk","locale","currentMonth","dayNames","weekdaysShort","initDate","returnObject","viewFormat","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","use12Hour","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","onSelectTime","cancelTimePicker","selectNow","clearTime","onTimePickerCancel","Moment","DateTimePickerComponent","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","showDatePicker","toggleTimePicker","showTimePicker","modelValue","onDateChange","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","loadInitial","setFormValues","selectedTime","onDateSelect","setDateTime","onTimeSelect","setCurrentTime","currentTime","weekSelect","nextWeekDate","nextWeekTime","setCurrentDate","currentDay","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","AmazingTimePickerModule","MatSelectModule","AfeNgSelectComponent","getChangingText","getData","question_options","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","selectOptions","sampleData","returnErrorOnNext","of","fetchFile","HistoricalHelperService","evaluate","expr","HD","deps","QuestionFactory","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","showTime","showWeeksAdder","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","showDate","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalHelperService","historicalPrepopulate","calculate","x","s","Math","random","floor","String","fromCharCode","Form","questionFactory","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","_showErrors","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","_.filter","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","repeatingModel","_d","_e","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","existingOrders","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","items","notFoundMsg","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","loading","removed","RemoteSelectModule","AppointmentsOverviewComponent","resetProperties","showAppointments","loadingAppointments","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","urlParams","encodeURI","programType","getMonthlySchedule","limit","locationUuids","programVisitEncounter","appointmentsLoaded","appointment","scheduled","appointments","errorLoadingAppointments","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterContainerComponent","encAdapter","$form","$enc","QuestionControlComponent","isUuid","arrayElement","arr_1","el","str","_.isNumber","noop","FilePreviewComponent","encounterService","onChangeCallback","onTouchedCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","DateTimePickerModule","MatIconModule","MatTabsModule","MatCardModule","NgxDateTimePickerModule","FormBuilder","Pair"],"mappings":"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ACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IA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","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues,\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","export class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services';\nimport { QuestionGroup } from '../question-models/group-question';\n\n@Component({\n  selector: 'form-renderer',\n  template: `<!--CONTAINERS-->\n<div *ngIf=\"node.question.renderingType === 'form'\">\n  <div class=\"dropdown dropdown-tabs forms-dropdown\">\n    <a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">\n      <i class=\"fa fa-angle-double-down\"></i>\n    </a>\n    <ul class=\"dropdown-menu dropdown-menu-right forms-dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\n      <li *ngFor=\"let question of node.question.questions; let i = index;\" (click)=\"clickTab(i)\">\n        {{question.label}}\n      </li>\n    </ul>\n  </div>\n  <mat-tab-group (selectChange)='tabSelected($event)' [selectedIndex]='activeTab'>\n    <mat-tab [label]='question.label' *ngFor=\"let question of node.question.questions; let i = index;\">\n        <div (swipeLeft)='loadNextTab()' (swipeRight)='loadPreviousTab()'>\n          <form-renderer [node]=\"node.children[question.key]\" [parentComponent]=\"this\" [parentGroup]=\"node.control\"></form-renderer>\n        </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div style=\"text-align: center;\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadPreviousTab()\" [ngClass]=\"{disabled: isCurrentTabFirst()}\">&lt;&lt;</button>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadNextTab()\" [ngClass]=\"{disabled: isCurrentTabLast()}\">\n      &gt;&gt;</button>\n  </div>\n</div>\n<div *ngIf=\"node.question.renderingType === 'page'\">\n  <!--<h2>{{node.question.label}}</h2>-->\n  <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n    [parentGroup]=\"parentGroup\"></form-renderer>\n</div>\n<div *ngIf=\"node.question.renderingType === 'section'\">\n  <div class=\"panel  panel-primary\">\n    <div class=\"panel-heading\">\n      <button type=\"button\" class=\"btn btn-primary pull-right\" (click)=\"isCollapsed = !isCollapsed\">\n        {{isCollapsed ? 'Show' : 'Hide'}}\n      </button> {{node.question.label}}\n    </div>\n    <div class=\"panel-body\" [collapse]=\"isCollapsed\">\n      <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n        [parentGroup]=\"parentGroup\"></form-renderer>\n    </div>\n  </div>\n</div>\n\n<!-- MESSAGES -->\n<div *ngIf=\"node.control && node.control.alert && node.control.alert !== ''\" class=\"alert alert-warning\">\n  <a href=\"#\" class=\"close\" data-dismiss=\"alert\">&times;</a> {{node.control.alert}}\n</div>\n\n<!--CONTROLS-->\n\n<div *ngIf=\"node.question.controlType === 0\" class=\"form-group\" [formGroup]=\"parentGroup\" [hidden]=\"node.control.hidden\"\n  [ngClass]=\"{disabled: node.control.disabled}\">\n  <!--LEAF CONTROL-->\n  <div class=\"question-area\">\n    <a class=\"form-tooltip pull-right\" (click)=\"toggleInformation(node.question.extras.id)\" data-placement=\"right\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      <i class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></i>\n    </a>\n\n    <label *ngIf=\"node.question.label\" [style.color]=\"hasErrors()? 'red' :''\" class=\"control-label\" [attr.for]=\"node.question.key\">\n      {{node.question.required === true ? '*':''}} {{node.question.label}}\n    </label>\n    <div [ngSwitch]=\"node.question.renderingType\">\n      <select class=\"form-control\" *ngSwitchCase=\"'select'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n        <option *ngFor=\"let o of node.question.options\" [ngValue]=\"o.value\">{{o.label}}\n        </option>\n      </select>\n      <remote-file-upload *ngSwitchCase=\"'file'\" [dataSource]=\"dataSource\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\n        (fileChanged)=\"upload($event)\">\n      </remote-file-upload>\n      <textarea [placeholder]=\"node.question.placeholder\" [rows]=\"node.question.rows\" class=\"form-control\" *ngSwitchCase=\"'textarea'\"\n        [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n      </textarea>\n      <remote-select *ngSwitchCase=\"'remote-select'\" [placeholder]=\"node.question.placeholder\" tabindex=\"0\" [dataSource]=\"dataSource\"\n        [componentID]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"></remote-select>\n        \n    <!--\n      <date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" tabindex=\"0\" [weeks]='node.question.extras.questionOptions.weeksList'\n        (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\"></date-time-picker>\n    -->\n    \n      <ngx-date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\"\n            (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" ></ngx-date-time-picker>\n\n      <ng-select *ngSwitchCase=\"'multi-select'\" [noFilter]=\"50\" [style.height]='auto' tabindex=\"0\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\" [options]=\"node.question.options\" [multiple]=\"true\">\n      </ng-select>\n      <input class=\"form-control\" *ngSwitchCase=\"'number'\" [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"'number'\" [id]=\"node.question.key + 'id' \" [step]=\"'any'\" [min]=\"node.question.extras.questionOptions.min\"\n        [max]=\"node.question.extras.questionOptions.max\">\n      <input class=\"form-control\" *ngSwitchDefault [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"node.question.renderingType\" [id]=\"node.question.key + 'id' \">\n\n      <div *ngSwitchCase=\"'radio'\">\n        <div *ngFor=\"let o of node.question.options\">\n          <label class=\"form-control no-border\">\n            <input type=\"radio\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\" [value]=\"o.value\"> {{ o.label }}\n          </label>\n        </div>\n      </div>\n\n      <div *ngSwitchCase=\"'checkbox'\">\n        <checkbox [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [options]=\"node.question.options\"></checkbox>\n      </div>\n\n      <div *ngIf=\"node.question.enableHistoricalValue && node.question.historicalDisplay\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-xs-9\">\n              <span class=\"text-warning\">Previous Value: </span>\n              <strong>{{node.question.historicalDisplay?.text}}</strong>\n              <span *ngIf=\"node.question.showHistoricalValueDate\">\n                <span> | </span>\n                <strong class=\"text-primary\">{{node.question.historicalDisplay?._date}}</strong>\n              </span>\n\n            </div>\n            <button type=\"button\" [node]=\"node\" [name]=\"'historyValue'\" class=\"btn btn-primary btn-small col-xs-3\">Use Value\n            </button>\n          </div>\n        </div>\n      </div>\n      <appointments-overview [node]=\"node\"></appointments-overview>\n      <div *ngIf=\"hasErrors() \">\n        <p *ngFor=\"let e of errors() \">\n          <span class=\"text-danger \">{{e}}</span>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"question-info col-md-12 col-lg-12 col-sm-12\" id=\"{{node.question.extras.id}}\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      {{node.question.extras.questionInfo}}\n    </div>\n\n  </div>\n</div>\n<div *ngIf=\"node.question.controlType === 1\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n\n  <!--ARRAY CONTROL-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div class='well' style=\"padding: 2px; \" *ngSwitchCase=\" 'repeating' \">\n      <h4 style=\"margin: 2px; font-weight: bold;\">{{node.question.label}}</h4>\n      <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:2px;\" />\n      <div [ngSwitch]=\"node.question.extras.type\">\n        <div *ngSwitchCase=\"'testOrder'\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <div>{{child.orderNumber}}</div>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n\n        <div *ngSwitchCase=\"'obsGroup'\" style=\"margin-bottom:20px;\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n      </div>\n      <button type=\"button \" class='btn btn-primary' (click)=\"node.createChildNode() \">Add</button>\n    </div>\n  </div>\n\n</div>\n<div *ngIf=\"node.question.controlType === 2\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n  <!--GROUP-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div *ngSwitchCase=\" 'group' \">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n    <div *ngSwitchCase=\" 'field-set' \" style=\"border: 1px solid #eeeeee; padding: 2px; margin: 2px;\">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n  </div>\n\n</div>\n`,\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  constructor(\n  private validationFactory: ValidationFactory,\n  private dataSources: DataSources,\n  private formErrorsService: FormErrorsService,\n  @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n  }\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n    this.node.question.renderingType === 'remote-select') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      console.log('Key', this.node.question);\n      console.log('Data source', this.dataSource);\n    }\n\n  }\n\n\n public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public  isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public  isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public  loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public  tabSelected($event) {\n    this.activeTab = $event.index;\n    this.setPreviousTab();\n  }\n  public  setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n public   hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public  errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          element.focus();\n        }, 200);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    console.log('Event', event);\n    console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n        e.style.display = 'none';\n     } else {\n        e.style.display = 'block';\n     }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n   private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services';\n\n@Component({\n    selector: 'error-renderer',\n    template: `<div *ngIf=\"showErrors()\" class=\"container\">\n<ul class=\"list-group\">\n  <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let errorNode of errorNodes\" (click)=announceErrorField(errorNode)>\n    <div class=\"error\" *ngIf=\"errorNode.control.valid == false\">\n      <h4>{{errorNode.question.label}}</h4>\n      <span class=\"text-danger\"> {{getControlError(errorNode)}}</span>\n    </div>\n  </li>\n</ul>\n</div>\n`,\n    styles: [`ul{list-style:none}.list-group-item{padding:2px 15px;cursor:pointer}ul li:hover{background-color:#fff}h4{margin-top:7px;margin-bottom:7px}`]\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    template: `<div\n    #selection\n    [attr.tabindex]=\"disabled ? null : 0\"\n    [ngClass]=\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\"\n    (click)=\"onSelectContainerClick($event)\"\n    (focus)=\"onSelectContainerFocus()\"\n    (keydown)=\"onSelectContainerKeydown($event)\"\n    (window:click)=\"onWindowClick()\"\n    (window:resize)=\"onWindowResize()\">\n\n    <div class=\"single\"\n        *ngIf=\"!multiple\">\n        <div class=\"value\"\n            *ngIf=\"optionList.hasSelected()\">\n            {{optionList.selection[0].label}}\n        </div>\n        <div class=\"placeholder\"\n            *ngIf=\"!optionList.hasSelected()\">\n            {{placeholderView}}\n        </div>\n        <div class=\"clear\"\n            *ngIf=\"allowClear\"\n            (click)=\"onClearSelectionClick($event)\">\n            &#x2715;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"isOpen\">\n            &#x25B2;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"!isOpen\">\n            &#x25BC;\n        </div>\n    </div>\n\n    <div class=\"multiple\"\n        *ngIf=\"multiple\">\n        <div class=\"option\"\n            *ngFor=\"let option of optionList.selection\">\n            <span class=\"deselect-option\"\n                (click)=onDeselectOptionClick(option)>\n                &#x2715;\n            </span>\n            {{option.label}}\n        </div>\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            tabindex=\"-1\"\n            [placeholder]=\"placeholderView\"\n            [ngStyle]=\"{'width.px': filterInputWidth}\"\n            (input)=\"onMultipleFilterInput($event)\"\n            (keydown)=\"onMultipleFilterKeydown($event)\"/>\n    </div>\n\n</div>\n<select-dropdown\n    *ngIf=\"isOpen\"\n    #dropdown\n    [multiple]=\"multiple\"\n    [optionList]=\"optionList\"\n    [notFoundMsg]=\"notFoundMsg\"\n    [highlightColor]=\"highlightColor\"\n    [highlightTextColor]=\"highlightTextColor\"\n    [filterEnabled]=\"filterEnabled\"\n    [width]=\"width\"\n    [top]=\"top\"\n    [left]=\"left\"\n    (close)=\"onDropdownClose($event)\"\n    (optionClicked)=\"onDropdownOptionClicked($event)\"\n    (singleFilterClick)=\"onSingleFilterClick()\"\n    (singleFilterInput)=\"onSingleFilterInput($event)\"\n    (singleFilterKeydown)=\"onSingleFilterKeydown($event)\">\n</select-dropdown>\n`,\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    template: `<div\n    [ngStyle]=\"{'top.px': top, 'left.px': left, 'width.px': width}\">\n\n    <div class=\"filter\"\n        *ngIf=\"!multiple\">\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            (click)=\"onSingleFilterClick($event)\"\n            (input)=\"onSingleFilterInput($event)\"\n            (keydown)=\"onSingleFilterKeydown($event)\">\n    </div>\n\n    <div class=\"options\"\n        #optionsList>\n        <ul\n            (wheel)=\"onOptionsWheel($event)\">\n            <li *ngFor=\"let option of optionList.filtered\"\n                [ngClass]=\"{'highlighted': option.highlighted, 'selected': option.selected, 'disabled': option.disabled}\"\n                [ngStyle]=\"getOptionStyle(option)\"\n                (click)=\"onOptionClick(option)\"\n                (mouseover)=\"onOptionMouseover(option)\">\n                {{option.label}}\n            </li>\n            <li\n                *ngIf=\"!optionList.hasShown()\"\n                class=\"message\">\n                {{notFoundMsg}}\n            </li>\n        </ul>\n    </div>\n</div>\n`,\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    template: `<div>\n    <file-uploader [(ngModel)]=\"innerValue\" (onClear)=\"clearValue()\" (fileChanged)=\"upload($event)\">\n    </file-uploader>\n    <img *ngIf=\"innerValue\" class=\"img-responsive\" [src]=\"innerValue | secure:this.dataSource.fetchFile\" alt=\"\" />\n</div>`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { FileUploaderModule } from 'ngx-file-uploader';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, FileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    template: `<section class=\"x-modal\">\n    <section class=\"modal-overlay\" (click)=\"closeModal()\"></section>\n    <section class=\"modal-main\" id=\"section-modal-main\">\n        <ng-content></ng-content>\n    </section>\n</section>\n`,\n    styles: [`:host{z-index:9999999999}*,::after,::before{box-sizing:border-box}.modal-main{position:absolute;left:19.6%;right:auto;top:auto;z-index:111;background-color:#fff;border:1px solid #d7dad7;border-radius:6px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);box-shadow:0 5px 15px rgba(0,0,0,.3)}`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  template: `<picker-modal (onOverlayClick)=\"cancelDatePicker()\">\n  <div class=\"picker-wrap\">\n    <div class=\"picker-box\">\n      <div class=\"picker-header\">\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-prev\" (click)=\"prev()\"></span>\n        </div>\n        <div class=\"picker-header-content\">\n          <div class=\"content\">\n            <span (click)=\"showMonthSelection()\" class=\"month\">{{calendarDate | moment: \"MMMM\"}}</span>\n            <span class=\"seperator\">|</span>\n            <span (click)=\"showYearSelection()\" class=\"year\">{{calendarDate | moment: \"YYYY\"}}</span>\n          </div>\n        </div>\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-next\" (click)=\"next()\"></span>\n        </div>\n      </div>\n      <div class=\"picker-calendar\">\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n          <span class=\"picker-weekday\" *ngFor=\"let day of dayNames\">{{ day }}</span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n                    <span class=\"picker-day\" (click)=\"selectDay(day)\" [ngClass]=\"{\n                       'out-focus': day.month() != calendarDate.month(),\n                       'today': day.isSame(today),\n                       'selected': day.isSame(selectedDate)\n                      }\" *ngFor=\"let day of calendarDays\">\n                    {{ day | moment: 'D'}}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayMonths\">\n                    <span class=\"picker-month\" *ngFor=\"let month of monthsShort\"\n                          (click)=\"selectMonth(month)\"\n                          [ngClass]=\"{\n                       'selected': month === currentMonth\n                      }\">\n                    {{ month }}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayYears\">\n                    <span class=\"picker-year\" *ngFor=\"let year of displayYearRange\"\n                          (click)=\"selectYear(year)\"\n                          [ngClass]=\"{\n                       'selected': year === currentYear\n                      }\">\n                    {{ year }}\n                </span>\n        </div>\n      </div>\n      <div class=\"picker-footer\">\n        <div class=\"picker-action action-today\" (click)=\"selectToday()\"><span class=\"text\">Today</span></div>\n        <div class=\"picker-action action-clear\" (click)=\"clearPickDate()\"><span class=\"text\">Clear</span></div>\n        <div class=\"picker-action action-close\" (click)=\"cancelDatePicker()\"><span class=\"text\">Close</span></div>\n      </div>\n    </div>\n  </div>\n</picker-modal>\n`,\n  styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:666px}.picker-box{font-family:'Open Sans';min-width:400px!important;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;display:flex;height:2.5rem;width:100%}.picker-header-nav{position:relative;cursor:pointer;width:calc(100% / 8)}.picker-header-nav>*{position:absolute;top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker-header-nav .nav-next::before,.picker-header-nav .nav-prev::before{content:\" \";border-top:.5em solid transparent;border-bottom:.5em solid transparent;border-right:.75em solid #000;width:0;height:0;display:block;margin:0 auto}.picker-header-nav .nav-next::before{border-right:0;border-left:.75em solid #000}.picker-header-content{width:calc(100% * 6 / 8);text-align:center}.picker-header-content .month{font-size:1.778rem;line-height:2.5rem;margin-right:.5rem;font-weight:700}.picker-header-content .year{font-style:italic;color:#999}.picker-calendar{width:100%}.picker-calendar .picker-calendar-row{display:flex;flex-wrap:wrap;width:100%;margin-bottom:.625rem}.picker-calendar .picker-weekday{font-weight:700;text-align:left;color:#999;width:calc(100% / 7)}.picker-calendar .picker-day,.picker-calendar .picker-month,.picker-calendar .picker-year{font-size:1.333rem;line-height:2.5rem;position:relative;height:2.5rem;text-align:center;cursor:pointer;width:calc(100% / 7)}.picker-calendar .picker-day:hover,.picker-calendar .picker-month:hover,.picker-calendar .picker-year:hover{background:#b1dcfb}.picker-calendar .out-focus{color:#ddd}.picker-calendar .out-focus:hover{color:#000}.picker-calendar .selected{background:#0089ec;color:#fff}.picker-calendar .selected:hover{background:#0089ec}.picker-calendar .today::before{content:\" \";position:absolute;top:2px;right:2px;width:0;height:0;border-top:.5em solid #0059bc;border-left:.5em solid transparent}.picker-footer{cursor:pointer}.picker-footer .picker-action{text-align:center;width:calc(100% / 3)}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-today::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-today::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    template: `<picker-modal (onOverlayClick)=\"cancelTimePicker()\">\n    <div class=\"picker-wrap\">\n        <div class=\"picker-box\">\n            <div class=\"picker-header\">Time Picker</div>\n            <div class=\"picker-table\">\n                <ul class=\"picker-table-time\">\n                    <li class=\"picker-table-number hour\">\n                        <span class=\"arrow up\" (click)=\"increaseHour()\"></span>\n                        {{time | moment: hourFormat}}\n                        <span class=\"arrow down\" (click)=\"decreaseHour()\"></span>\n                    </li>\n                    <li class=\"picker-table-separator\">:</li>\n                    <li class=\"picker-table-number minute\">\n                        <span class=\"arrow up\" (click)=\"increaseMinute()\"></span>\n                        {{time | moment: 'mm'}}\n                        <span class=\"arrow down\" (click)=\"decreaseMinute()\"></span>\n                    </li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-separator\">:</li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-number second\">\n                        <span class=\"arrow up\" (click)=\"increaseSecond()\"></span>\n                        {{time | moment: 'ss'}}\n                        <span class=\"arrow down\" (click)=\"decreaseSecond()\"></span>\n                    </li>\n                    <li *ngIf=\"use12Hour\" class=\"picker-table-meridiem meridiem\">\n                        {{time | moment: 'A'}}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"picker-footer\">\n                <div class=\"picker-action action-now\" (click)=\"selectNow()\"><span class=\"text\">Now</span></div>\n                <div class=\"picker-action action-confirm\" (click)=\"selectTime()\"><span class=\"text\">Confirm</span></div>\n                <div class=\"picker-action action-clear\" (click)=\"clearTime()\"><span class=\"text\">Clear</span></div>\n                <div class=\"picker-action action-close\" (click)=\"cancelTimePicker()\"><span class=\"text\">Close</span></div>\n            </div>\n        </div>\n    </div>\n</picker-modal>\n`,\n    styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:40rem;font-family:'Open Sans'}.picker-box{width:100%;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;height:2.5rem;width:100%}.picker-header{text-align:center}.picker-table{width:100%;margin:2.5rem 0}.picker-table-time{font-size:2.37rem;line-height:2.5rem;list-style:none;margin:0;padding:0;display:flex;justify-content:center;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-table-meridiem,.picker-table-number,.picker-table-separator{text-align:center}.picker-table-meridiem,.picker-table-number{position:relative;width:20%}.arrow{position:absolute;left:50%;border:solid #777;border-width:0 .2rem .2rem 0;display:inline-block;padding:.25rem;cursor:pointer}.arrow.up{top:-1rem;-webkit-transform:translateX(-50%) rotate(-135deg);transform:translateX(-50%) rotate(-135deg)}.arrow.down{bottom:-1rem;-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg)}.arrow:hover{border-color:#1975d2}.picker-table-separator{width:calc(20% / 3)}.picker-footer{display:flex;justify-content:center;width:100%;cursor:pointer}.picker-footer .picker-action{width:25%;text-align:center}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-confirm::before,.picker-footer .action-now::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-now::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-confirm::before{width:1rem;height:1rem;border-radius:100%;background-color:#00b5ad}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    template: `<div class='row'>\n    <div *ngIf=\"!showTime\" class='col-xs-12 col-md-12'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n    Model Value {{modelValue}}\n    <div *ngIf=\"showTime\" class='col-xs-8 col-md-8'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-4 col-md-4'>\n        <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\n        />\n    </div>\n</div>\n<date-picker *ngIf=\"showDatePicker\" [initDate]=\"value\" (onSelectDate)=\"setDate($event)\" (onDatePickerCancel)=\"toggleDatePicker($event)\"></date-picker>\n\n<time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"setTime($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>`,\n    styles: [`input[readonly]{background-color:#fff}.up{bottom:100%!important;top:auto!important}.glyphicon{top:1px}`],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR , FormControl } from '@angular/forms';\nimport { DateAdapter , MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter} from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n      dateInput: 'LL',\n    },\n    display: {\n      dateInput: 'LL',\n      monthYearLabel: 'MMM YYYY',\n      dateA11yLabel: 'LL',\n      monthYearA11yLabel: 'MMMM YYYY',\n    },\n  };\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    template: `<div class=\"row\">\n  <div class=\"col-sm-8 col-md-8 col-lg-8 col-xs-12\">\n    <div class=\"row\">\n        <div class=\"col-sm-10 col-md-10 col-lg-10 col-xs-12\">\n            <div class=\"input-group\">\n                    <input matInput [matDatepicker]=\"picker\" class=\"form-control\" [(ngModel)]=\"selectedDate\" placeholder=\"Choose a date\" \n                    (ngModelChange)=\"onDateSelect($event)\">\n                    <div class=\"input-group-btn\">\n                      <button class=\"btn btn-default\" (click)=\"picker.open()\">\n                        <i class=\"fa fa-calendar\"></i>\n                      </button>\n                        <mat-datepicker #picker touchUi=\"true\"></mat-datepicker>\n                        <button class=\"btn btn-default\" (click)=\"setCurrentDate()\">\n                          Set Current Date\n                        </button>\n                    </div>\n            </div>\n          </div>\n          <div class=\"col-sm-2 col-md-2 col-lg-2 col-xs-12\" *ngIf=\"showWeeks\">\n          \n              <div class=\"form-group\">\n                  <mat-select placeholder=\"Select Weeks\" class=\"form-control\" name=\"weeks\" (ngModelChange)=\"weekSelect($event)\">\n                    <mat-option *ngFor=\"let count of weeks\" [value]=\"count\">\n                      {{count}} Weeks\n                    </mat-option>\n                  </mat-select>\n              </div>\n          </div>\n    </div>\n    \n  </div>\n  <div class=\"col-sm-4 col-md-4 col-lg-4 col-xs-12\" id=\"time-section\">\n   \n        <div class=\"input-group\">\n            <input type=\"time\" class=\"form-control\" atp-time-picker [(ngModel)] = \"selectedTime\" (ngModelChange)=\"onTimeSelect($event)\" id=\"ngx-atp-time-picker\"/>\n            <div class=\"input-group-btn\">\n              <button mat-raised-button class=\"btn btn-default\" (click)=\"setCurrentTime()\">\n                  Set Current Time\n              </button>\n            </div>\n         </div>\n    \n      \n  </div>\n\n</div>`,\n    styles: [`#time-section{display:inline-block}#ngx-atp-time-picker,#ngx-mat-form-field{width:100%}.up{bottom:100%!important;top:auto!important}.time-btn{margin-top:-20px}`],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format('HH:mm');\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    @Input() weeks: number[] = [0 , 2 , 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n    public get value() {\n        return this.modelValue;\n    }\n\n    public set value(val) {\n        setTimeout(() => {\n            this.onDateChange.emit(val);\n        }, 100);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    public writeValue(value) {\n        if (!this.loadInitial) {\n            this.setFormValues(value);\n        }\n    }\n\n    public setFormValues(val) {\n\n        this.loadInitial = true;\n\n        this.selectedDate = moment(val).format();\n        this.selectedTime = moment(val).format('HH:mm');\n        if (val instanceof Date) {\n            this.value = moment(val).format();\n        } else {\n            this.value = val;\n        }\n        this.modelValue = this.value;\n\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    public onDateSelect($event) {\n        const setDate = moment($event);\n        const setTime = this.selectedTime;\n        this.setDateTime(setDate, setTime);\n\n    }\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public setCurrentTime() {\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        const nextWeekDate = moment(this.selectedDate).add($event , 'weeks');\n        const nextWeekTime = this.selectedTime;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public setCurrentDate() {\n        const currentDay = moment();\n        const currentTime = moment().format('HH:mm');\n        this.setDateTime(currentDay, currentTime);\n\n\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        const newTime = setTime;\n        const newDateTime = moment(newDate + '' + newTime , 'DD-MM-YYYY HH:mm');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = newTime;\n        this.modelValue = dateTimeString;\n        this.value = dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `<ng-select\n                   (searchInputText)=\"getChangingText($event)\"\n                    (ngModelChange)=\"onValueChange($event)\"\n                    [options]=\"question_options\"\n                    [multiple]=\"multiple\" >\n            </ng-select>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n        case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n    schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources);\n      question.historicalDataValue = origValue;\n      if (schemaQuestion.historicalPrepopulate) {\n        question.defaultValue = origValue;\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        }\n        const val = datetime.substring(0, 19).replace('T', ' ');\n        return this.isEmpty(val) ? undefined : val;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from '.';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            node.control.setValue(firstProvider.uuid);\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    template: `<div>\n    <ng-select [id]=\"componentID\" [noFilter]=\"0\" (selected)=\"selected($event)\" (deselected)=\"removed($event)\" [options]=\"items\" [allowClear]=\"true\"\n        [placeholder]=\"placeholder\" [notFoundMsg]=\"notFoundMsg\" (typed)=\"typed($event)\" tabindex=\"0\">\n    </ng-select>\n    <div *ngIf=\"loading\">\n        resolving....\n    </div>\n</div>\n`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  template: `<div *ngIf=\"showAppointments\" class=\"appointments\">\n  <p *ngIf=\"loadingAppointments\">\n    <span *ngIf=\"!appointmentsLoaded && errorLoadingAppointments\">Error checking appointments</span>\n    <span *ngIf=\"loadingAppointments\"><span\n      class=\"fa fa-spinner fa-spin\"></span>Checking appointments...</span>\n  </p>\n  <div *ngIf=\"appointmentsLoaded && !errorLoadingAppointments\">\n    <table *ngIf=\"appointments.length>0\" class=\"table table-stripped table-bordered\">\n      <thead>\n      <tr>\n        <th *ngFor=\"let appointment of appointments\" [ngClass]=\"{'active': appointment.date === today}\">\n          <span>{{appointment.date}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <td *ngFor=\"let appointment of appointments\"\n            [ngClass]=\"{'active': appointment.date === today}\">\n          <span><strong><em>{{appointment.count}}</em></strong></span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n`,\n  styles: [`.appointments{margin-top:12px;font-size:12px;color:#999}.appointments p{padding-top:12px}.appointments th{border-bottom:0!important;color:#333}.appointments td span,.appointments th span{display:block}.appointments td.active,.appointments th.active{background-color:#3c8dbc;color:#fff!important;padding:0}.appointments td.active span,.appointments th.active span{padding:4px}.appointments span.fa{display:inline-block;margin-right:7px}`]\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const params = {\n              'programType': ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838']\n            };\n            const urlParams = encodeURI(JSON.stringify(params));\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programVisitEncounter: urlParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\n@Component({\n    selector: 'encounter-viewer',\n    template: `<div class=\"viewer\">\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n    <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n      <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\n        <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n          <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n          <div class=\"panel-body\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n    <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\n      [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n  </div>\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\n    class=\"section\">\n    <div class=\"panel panel-primary\">\n      <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n    </div>\n    <div *ngFor=\"let question of rootNode.question.questions\">\n      <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n    </div>\n  </div>\n\n  <!--Leaf Controls-->\n  <div style=\"margin-left:10px;\">\n  <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\n    <div *ngIf=\"rootNode.control.value\">\n    <div class=\"question-answer\">\n      <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\n          {{ rootNode.question.label }}\n      </label>\n      <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n      <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\n          <div *ngSwitchCase=\" 'file' \">\n            <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\n          </div>\n          <div *ngSwitchCase=\"'remote-select'\">\n            <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\n          </div>\n          <div *ngSwitchDefault style=\"display:inline-block\">\n              <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\n            </div>\n      </div>\n     \n    </div>\n    </div>\n  </form>\n</div>\n\n  <!--Array Controls-->\n  <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\n    <div [ngSwitch]=\"rootNode.question.renderingType\">\n      <div *ngSwitchCase=\" 'repeating' \">\n        <div [ngSwitch]=\"rootNode.question.extras.type\">\n          <div *ngSwitchCase=\"'testOrder'\">\n            <label>{{rootNode.question.label}}:</label>\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n          \n          <div *ngSwitchCase=\"'obsGroup'\">\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.controlType === 2\">\n\n    <!--GROUP-->\n    <div [ngSwitch]=\"rootNode.question.renderingType \">\n      <div *ngSwitchCase=\" 'group' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n      <div *ngSwitchCase=\" 'field-set' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n    </div>\n  </div>\n\n\n\n  </div>\n`,\n    styles: [`.page-label{font-size:20px;font-weight:700}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none!important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px!important}.line-breaker{white-space:pre-line}hr{margin:10px}`],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         console.log(this.rootNode);\n    }\n\n    constructor(private encounterViewerService: EncounterViewerService,\n               private dataSources: DataSources) {\n    }\n\n    public ngOnInit() {\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n@Component({\n    selector: 'encounter-renderer',\n    template: `<encounter-viewer class=\"card\" [form]=\"$form\" [encounter]=\"$enc\"></encounter-viewer>\n\n\n`,\n    styles: [`.card{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}`]\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(private encAdapter: EncounterAdapter) { }\n\n    ngOnInit() {\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styles: [`input{border:none;box-shadow:none;color:#000;background:#fff!important;padding-top:23px;display:block;position:relative}`],\n    template: `<div>\n    {{innerValue}}\n</div>`,\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  template: `<div *ngFor=\"let option of options; let i = index;\">\n    <label class=\"form-control no-border\">\n        <input type=\"checkbox\" id=\"i + 'id'\" (change)=\"selectOpt(option, $event)\" value=\"option.value\">\n        {{ option.label }}\n    </label>\n</div>`,\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services';\nimport { HammerConfig } from './helpers/hammer-config';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\nimport { SelectModule } from '../components/select';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport {\n    EncounterAdapter, PersonAttribuAdapter, OrderValueAdapter,\n    ObsValueAdapter, ObsAdapterHelper\n} from './value-adapters';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { DataSources } from './data-sources/data-sources';\nimport {\n    AppointmentsOverviewComponent\n} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        SelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService,\n        DataSources\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n"]}