{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","node_modules/tslib/tslib.es6.js","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-control-type.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/rendering-type.ts"],"names":["DebugModeService","this","cookieKey","prototype","debugEnabled","Injectable","FormErrorsService","announceErrorFieldSource","Subject","announceErrorField$","asObservable","announceErrorField","error","next","control","tab","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","_this","valueChanges","subscribe","ControlRelations","relationFor","_otherRelations","_relationFor","_relations","addRelatedControls","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","hiderHelper","disablerHelper","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","None","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","calcBMIForAgeZscore","bmiForAgeRef","bmi","formattedSDValue","refSectionObject","_.first","refObjectValues","map","x","refObjectKeys","minimumValue","minReferencePoint_1","_.forEach","lastReferenceValue_1","_.last","_.findIndex","replace","includes","calcWeightForHeightZscore","weightForHeightRef","refSection","_.filter","refObject","minReferencePoint_2","lastReferenceValue_2","calcHeightForAgeZscore","heightForAgeRef","minReferencePoint_3","lastReferenceValue_3","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JSExpressionValidatorsEnabled","JsExpressionValidator","helperFunctions","js_expression","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","MAX_LENGTH_MSG","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","ValidationFactory","getValidators","list","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","minlength","requiredLength","maxlength","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","childComponents","isCollapsed","itemsLoading","itemsInput$","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","valueProcessingInfo","lastFormTab","scrollToControl","isExpanded","parentComponent","addChildComponent","selectQuestion","defaltValues","of","resolveSelectedValue","pipe","catchError","items$","debounceTime","distinctUntilChanged","tap","switchMap","term","searchOptions","dataSourceOptions","checkSection","groupChildrenHidden_1","every","k","innerNode","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","scrollIntoView","behavior","block","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","_nodeChange","EventEmitter","target","name","_node","compareString","stopPropagation","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","SecurePipe","_ref","sanitizer","_latestValue","_latestReturnedValue","_subscription","_obj","_result","BehaviorSubject","_internalSubscription","ngOnDestroy","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","_this_1","previousUrl","sanitized","bypassSecurityTrustUrl","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","NgModule","declarations","imports","CommonModule","exports","providers","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_highlightedOption","_options","highlight","equalValues","v0","v1","slice","sort","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","trim","resetFilter","l","toUpperCase","t","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_b","tslib_1.__values","_c","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","KEYS","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","allowClear","highlightColor","highlightTextColor","noFilter","notFoundMsg","placeholder","opened","closed","deselected","typed","_value","filterEnabled","filterInputWidth","hasFocus","isBelow","isDisabled","isOpen","placeholderView","clearClicked","selectContainerClicked","onChange","_","onTouched","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","onWindowClick","closeDropdown","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","TypeError","firstTime","updatePosition","filterInput","nativeElement","clearFilterInput","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","altKey","preventDefault","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","encapsulation","ViewEncapsulation","ViewChild","SelectDropdownComponent","optionClicked","singleFilterClick","singleFilterInput","singleFilterKeydown","disabledColor","disabledTextColor","optionsReset","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","getOptionStyle","background-color","color","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","FormsModule","RemoteFileUploadComponent","renderer","uploading","innerValue","propagateChange","_dataSource","data","fileUpload","image","clearValue","Renderer2","RemoteFileUploadModule","NgxFileUploaderModule","DatePickerComponent","locale","viewFormat","returnObject","onDatePickerCancel","onSelectDate","onDisplayMonths","onDisplayYears","displayYearsIndex","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearRange","generateCalendar","prev","subtract","showMonthSelection","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","generateYears","years","_.chunk","currentMonth","dayNames","weekdaysShort","initDate","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","showSecond","use12Hour","onSelectTime","onTimePickerCancel","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","cancelTimePicker","selectNow","clearTime","ModalComponent","onOverlayClick","closeModal","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","Moment","DateTimePickerComponent","showDate","showTime","showWeeks","weeks","onDateChange","showDatePicker","showTimePicker","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","toggleTimePicker","modelValue","DateTimePickerModule","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","selectedTime","loadInitial","onTimeSelect","setDateTime","onDateSelect","dateString","setCurrentTime","currentTime","weekSelect","dateToUse","nextWeekDate","nextWeekTime","selectionChange","getWeekPickerCssClass","getDatePickerCssClass","getTimePickerCssClass","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","NgxDateTimePickerModule","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","MatSelectModule","Option$1","AfeNgSelectComponent","question_options","getChangingText","getData","resolveSelectedOption","selected_question_option","searchText","subject","mappedOptions","onValueChange","subjectOption","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","showWeeksAdder","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","returnErrorOnNext","selectOptions","sampleData","concept","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","additionalScopevalues","HD","deps","evaluatePrecondition","additionalScope","histValue","QuestionFactory","historicalHelperService","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalPrepopulateCondition","historicalPrepopulate","valDate","differenceInDays","Number","isInteger","allowedHistoricalValueAgeInDays","calculate","s","Math","random","floor","String","fromCharCode","Form","questionFactory","existingOrders","_showErrors","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","hd","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","_d","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","_e","_f","repeatingModel","_g","_h","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider_1","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","items","loading","characters","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","removed","RemoteSelectModule","AppointmentsOverviewComponent","showAppointments","loadingAppointments","errorLoadingAppointments","appointmentsLoaded","appointments","resetProperties","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","programTypeParams","getMonthlySchedule","limit","locationUuids","programType","appointment","scheduled","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterContainerComponent","encAdapter","$form","$enc","QuestionControlComponent","isUuid","arrayElement","arr_1","el","str","_.isNumber","noop","FilePreviewComponent","encounterService","onTouchedCallback","onChangeCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","NgSelectModule","NoopAnimationsModule","MatIconModule","MatTabsModule","MatCardModule","TimeAgoPipe","FormBuilder","Pair","Page","Section","Select","DropDown"],"mappings":"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","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","export enum AfeControlType {\n    AfeFormControl,\n    AfeFormArray,\n    AfeFormGroup,\n    None\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nimport * as _ from 'lodash';\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  calcBMIForAgeZscore(bmiForAgeRef, height, weight) {\n   let bmi;\n   const maxAgeInDays = 1856;\n    if (height && weight) {\n      bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    const refSectionObject = _.first(bmiForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (bmi < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= bmi) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M' || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  bmi && refSectionObject ?  formattedSDValue : null;\n  }\n  calcWeightForHeightZscore(weightForHeightRef, height, weight) {\n    let refSection ;\n    let formattedSDValue;\n    if (height && weight) {\n      height = parseFloat(height).toFixed(1);\n    }\n    const standardHeightMin = 45;\n    const standardMaxHeight = 110;\n    if ( height < standardHeightMin || height > standardMaxHeight) {\n      formattedSDValue = -4;\n    } else {\n        refSection = _.filter(weightForHeightRef, (refObject) => {\n        return parseFloat(refObject['Length']).toFixed(1) === height;\n      });\n    }\n\n    const refSectionObject = _.first(refSection);\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (weight < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= weight) {\n          minReferencePoint.push(value);\n          }\n          });\n\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight  ?  formattedSDValue : null;\n  }\n\n  calcHeightForAgeZscore(heightForAgeRef, height, weight) {\n\n    const refSectionObject = _.first(heightForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (height < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= height) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight && refSectionObject ?  formattedSDValue : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      calcBMIForAgeZscore: helper.calcBMIForAgeZscore,\n      calcWeightForHeightZscore: helper.calcWeightForHeightZscore,\n      calcHeightForAgeZscore: helper.calcHeightForAgeZscore,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject, OnChanges, SimpleChanges\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode, GroupNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { concat, of, Observable, Subject, BehaviorSubject } from 'rxjs';\nimport * as _ from 'lodash';\n\nimport { debounceTime, distinctUntilChanged, tap, switchMap, catchError, map } from 'rxjs/operators';\nimport { QuestionBase } from '../question-models';\n\n@Component({\n  selector: 'form-renderer',\n  templateUrl: 'form-renderer.component.html',\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  items$: Observable<any[]>;\n  itemsLoading = false;\n  itemsInput$ = new Subject<string>();\n\n  constructor(\n    private validationFactory: ValidationFactory,\n    private dataSources: DataSources,\n    private formErrorsService: FormErrorsService,\n    @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n  }\n\n\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n      this.node.question.renderingType === 'remote-select') {\n      let selectQuestion = this.node.form.searchNodeByQuestionId(this.node.question.key)[0];\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      let defaltValues = of([]);\n      if (this.dataSource.resolveSelectedValue(selectQuestion.control.value)) {\n        defaltValues = this.dataSource.resolveSelectedValue(selectQuestion.control.value).pipe(\n          catchError(() => of([])), // empty list on error\n        );\n      }\n\n      this.items$ = concat(\n        defaltValues,\n        this.itemsInput$.pipe(\n          debounceTime(200),\n          distinctUntilChanged(),\n          tap(() => this.itemsLoading = true),\n          switchMap(term => this.dataSource.searchOptions(term).pipe(\n            catchError(() => of([])), // empty list on error\n            tap(() => {\n              this.itemsLoading = false\n            })\n          ))\n        )\n      );\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      // console.log('Key', this.node.question);\n      // console.log('Data source', this.dataSource);\n    }\n\n  }\n\n  checkSection(node: NodeBase) {\n    if (node.question.renderingType === 'section') {\n      let groupChildrenHidden = false;\n      let allSectionControlsHidden = Object.keys(node.children).every((k) => {\n        let innerNode = node.children[k];\n        if (innerNode instanceof GroupNode) {\n          groupChildrenHidden = Object.keys(innerNode.children).every((i) => innerNode.children[i].control.hidden)\n        }\n        return node.children[k].control.hidden || groupChildrenHidden;\n      });\n      return !allSectionControlsHidden;\n    }\n    return true;\n  }\n\n  public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public tabSelected($event) {\n    this.activeTab = $event.index;\n    this.setPreviousTab();\n  }\n  public setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n  public hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          if (element !== null && element.focus) {\n            element.focus();\n            element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          }\n        }, 100);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    // console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    // console.log('Event', event);\n    // console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n      e.style.display = 'none';\n    } else {\n      e.style.display = 'block';\n    }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n  private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    templateUrl: 'error-renderer.component.html',\n    styleUrls: ['./error-renderer.component.css']\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select'\n          || this._node.question.renderingType === 'single-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    templateUrl: './select.component.html',\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    templateUrl: 'select-dropdown.component.html',\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    templateUrl: 'file-upload.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                // console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgxFileUploaderModule } from 'ngx-file-uploader-ampath';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, NgxFileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.css'],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    templateUrl: './time-picker.component.html',\n    styleUrls: ['./time-picker.component.css'],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    templateUrl: './date-time-picker.component.html',\n    styleUrls: ['./date-time-picker.component.css'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","import { Moment } from 'moment/moment';\n\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    templateUrl: './ngx-date-time-picker.component.html',\n    styleUrls: ['./ngx-date-time-picker.component.css'],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format();\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    public value;\n    public showTimePicker = false;\n    @Input() weeks: number[] = [0, 2, 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n\n    public writeValue(value) {\n        this.value = value;\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n\n    }\n\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public onDateSelect($event) {\n\n        const setDate = moment($event.value);\n        const setTime = this.selectedTime;\n        const dateString = this.setDateTime(setDate, setTime);\n\n        const selectedDate = $event.value;\n        this.value = dateString;\n\n    }\n\n    public toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n\n\n    public setCurrentTime() {\n\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm:ss');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        let dateToUse;\n        if (this.value === '' || typeof this.value === 'undefined') {\n            dateToUse = moment().format();\n        } else {\n            dateToUse = moment(this.value).format();\n        }\n        const nextWeekDate = moment(dateToUse).add($event.value, 'weeks');\n        const nextWeekTime = dateToUse;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public selectionChange($event) {\n        console.log('Week selected', $event);\n    }\n\n\n    public getWeekPickerCssClass() {\n        if (this.showTime) {\n            return 'col-sm-2 form-group';\n        }\n        return 'col-sm-3 form-group';\n    }\n\n    public getDatePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n\n        if (this.showTime === true) {\n            return 'col-sm-8 form-group';\n        }\n        return 'col-sm-12 form-group';\n    }\n\n    public getTimePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n        return 'col-sm-4 form-group';\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        let newTime;\n        if (this.showTime) {\n            newTime = moment(setTime).format('HH:mm:ss');\n        } else {\n            newTime = '00:00:00';\n        }\n        const newDateTime = moment(newDate + '' + newTime, 'DD-MM-YYYY HH:mm:ss');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = dateTimeString;\n        this.value = dateTimeString;\n        this.onChange(this.value);\n\n        return dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\n// import { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        DateTimePickerModule,\n        // AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        // console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        // console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select'  || 'single-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any, additionalScopevalues: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    if (additionalScopevalues) {\n      for (const o in additionalScopevalues) {\n        if (additionalScopevalues[o]) {\n          deps[o] = additionalScopevalues[o];\n        }\n      }\n    }\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n  public evaluatePrecondition(expr: string, dataSources: any, historicalValue: any): any {\n    const additionalScope = {\n      histValue: historicalValue\n    };\n\n    return this.evaluate(expr, dataSources, additionalScope);\n  }\n\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'single-select':\n        return this.toSelectQuestion(schema);\n      case 'multi-select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'file':\n        return this.toFileUploadQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n      schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources, undefined);\n      question.historicalDataValue = origValue;\n      // console.info('historical value', origValue);\n      // console.info('historical data question :::', question);\n      // console.info('schema data question :::', schemaQuestion);\n\n      if (schemaQuestion.historicalPrepopulateCondition) {\n        const toPopulate = this.historicalHelperService.evaluatePrecondition(schemaQuestion.historicalPrepopulateCondition,\n          this.dataSources, origValue);\n\n        if (toPopulate) {\n          question.defaultValue = origValue.value;\n        }\n        return; // don't try to evaluate the other option\n      }\n\n      if (schemaQuestion.historicalPrepopulate) {\n        // sample schema options for this branch\n        // \"historicalPrepopulate\":true,\n        // \"allowedHistoricalValueAgeInDays\": 40000,\n        const valDate = moment(origValue.valueDate);\n        const differenceInDays = moment().diff(valDate, 'days');\n        if (Number.isInteger(schemaQuestion.allowedHistoricalValueAgeInDays)) {\n          if (differenceInDays <= schemaQuestion.allowedHistoricalValueAgeInDays) {\n            question.defaultValue = origValue.value;\n          }\n        } else {\n          question.defaultValue = origValue.value;\n        }\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox' ||\n                node.question.extras.questionOptions.rendering === 'multi-select') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n        console.log('valuePayload', valuePayload);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        } else {\n            // transform value to memoent value to avoid error\n            const formattedVal = moment(datetime).format();\n            const val = formattedVal.substring(0, 19).replace('T', ' ');\n            return this.isEmpty(val) ? undefined : val;\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox' ||\n            node.question.extras.questionOptions.rendering !== 'multi-select') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox' ||\n            obs.question.extras.questionOptions.rendering === 'multi-select') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        // console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            // console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        // console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            //Very weird work around for an issue with setting the value\n                            node.control.setValue(firstProvider.uuid);\n                            setTimeout(()=>{\n                                node.control.setValue(firstProvider.uuid);\n                            });\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    templateUrl: 'remote-select.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  templateUrl: './appointments-overview.component.html',\n  styleUrls: ['./appointments-overview.component.css']\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        // console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const programTypes = ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838'];\n            const programTypeParams = programTypes.join();\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programType: programTypeParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\n@Component({\n    selector: 'encounter-viewer',\n    templateUrl: './encounter-viewer.component.html',\n    styleUrls: ['./encounter-viewer.component.css'],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         console.log(this.getQuestionNodes(this.traverse(this.rootNode)));\n    }\n\n    constructor(private encounterViewerService: EncounterViewerService,\n               private dataSources: DataSources) {\n    }\n\n    \n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            arrays.push(page.page);\n        }\n        return merged.concat.apply([], arrays);\n    }\n    public ngOnInit() {\n        if(this.rootNode){\n            \n        }\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }else{\n                console.log('Console.log',o);\n            }\n\n        }\n        return questions;\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n@Component({\n    selector: 'encounter-renderer',\n    templateUrl: './encounter-container.component.html',\n    styleUrls: ['./encounter-container.component.css']\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(private encAdapter: EncounterAdapter) { }\n\n    ngOnInit() {\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styleUrls: ['./question-control.component.css'],\n    templateUrl: './question-control.component.html',\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\n// import { SelectModule } from '../components/select/select.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\nimport { SharedModule } from '../shared.module';\nimport { TimeAgoPipe } from 'time-ago-pipe';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        NgSelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        NoopAnimationsModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule,\n        SharedModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent,\n        TimeAgoPipe\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","export enum RenderingType {\n    Form,\n    Page,\n    Section,\n    Select,\n    DropDown\n}\n"]}