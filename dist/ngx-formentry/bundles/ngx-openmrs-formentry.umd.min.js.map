{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","null","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts"],"names":["DebugModeService","prototype","debugEnabled","Injectable","FormErrorsService","Subject","this","announceErrorFieldSource","asObservable","announceErrorField","error","next","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","control","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","valueChanges","subscribe","_this","ControlRelations","relationFor","_relationFor","_relations","addRelatedControls","_otherRelations","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","hiderHelper","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","disablerHelper","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","map","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JsExpressionValidator","JSExpressionValidatorsEnabled","helperFunctions","js_expression","ValidationFactory","getValidators","list","_.forEach","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","replace","minlength","requiredLength","maxlength","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","tab","valueProcessingInfo","lastFormTab","announceErrorField$","scrollToControl","isCollapsed","isExpanded","parentComponent","addChildComponent","childComponents","dataSourceOptions","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","styles","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","EventEmitter","target","name","_node","compareString","stopPropagation","_nodeChange","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_options","highlight","equalValues","v0","v1","slice","sort","every","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","t","_highlightedOption","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_a","tslib_1.__values","_b","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","_","placeholderView","placeholder","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","filterEnabled","onWindowClick","selectContainerClicked","closeDropdown","clearClicked","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onTouched","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","typed","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","isOpen","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","_value","TypeError","firstTime","updatePosition","filterInput","nativeElement","opened","clearFilterInput","closed","deselected","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","KEYS","altKey","preventDefault","hasFocus","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","filterInputWidth","providers","encapsulation","ViewEncapsulation","None","ViewChild","SelectDropdownComponent","optionsReset","singleFilterClick","singleFilterInput","singleFilterKeydown","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","optionClicked","getOptionStyle","background-color","highlightColor","color","highlightTextColor","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","BehaviorSubject","_result","ngOnDestroy","_subscription","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","previousUrl","_internalSubscription","sanitized","bypassSecurityTrustUrl","_obj","_latestValue","_latestReturnedValue","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","RemoteFileUploadComponent","renderer","_dataSource","data","uploading","fileUpload","innerValue","image","propagateChange","clearValue","Renderer2","RemoteFileUploadModule","FileUploaderModule","DatePickerComponent","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearsIndex","displayYearRange","generateCalendar","prev","onDisplayYears","subtract","showMonthSelection","onDisplayMonths","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","onSelectDate","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","onDatePickerCancel","generateYears","years","_.chunk","locale","currentMonth","dayNames","weekdaysShort","initDate","returnObject","viewFormat","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","use12Hour","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","onSelectTime","cancelTimePicker","selectNow","clearTime","onTimePickerCancel","ModalComponent","closeModal","onOverlayClick","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","Moment","DateTimePickerComponent","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","showDatePicker","toggleTimePicker","showTimePicker","modelValue","onDateChange","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","loadInitial","setFormValues","selectedTime","onDateSelect","setDateTime","onTimeSelect","setCurrentTime","currentTime","weekSelect","nextWeekDate","nextWeekTime","setCurrentDate","currentDay","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","AmazingTimePickerModule","MatSelectModule","AfeNgSelectComponent","getChangingText","getData","question_options","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","selectOptions","sampleData","concept","returnErrorOnNext","of","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","HD","deps","QuestionFactory","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","showTime","showWeeksAdder","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","showDate","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalHelperService","historicalPrepopulate","calculate","x","s","Math","random","floor","String","fromCharCode","Form","questionFactory","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","_showErrors","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","_.filter","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","repeatingModel","_d","_e","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","existingOrders","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","items","notFoundMsg","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","loading","removed","RemoteSelectModule","AppointmentsOverviewComponent","resetProperties","showAppointments","loadingAppointments","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","urlParams","encodeURI","programType","getMonthlySchedule","limit","locationUuids","programVisitEncounter","appointmentsLoaded","appointment","scheduled","appointments","errorLoadingAppointments","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterContainerComponent","encAdapter","$form","$enc","QuestionControlComponent","isUuid","arrayElement","arr_1","el","str","_.isNumber","noop","FilePreviewComponent","encounterService","onChangeCallback","onTouchedCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","DateTimePickerModule","MatIconModule","MatTabsModule","MatCardModule","NgxDateTimePickerModule","FormBuilder","Pair"],"mappings":"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","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues,\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\n\n@Component({\n  selector: 'form-renderer',\n  template: `<!--CONTAINERS-->\n<div *ngIf=\"node.question.renderingType === 'form'\">\n  <div class=\"dropdown dropdown-tabs forms-dropdown\">\n    <a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" >\n      <i class=\"fa fa-angle-double-down\"></i>\n    </a>\n    <ul class=\"dropdown-menu dropdown-menu-right forms-dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\n      <li *ngFor=\"let question of node.question.questions; let i = index;\" (click)=\"clickTab(i)\">\n        {{question.label}}\n      </li>\n    </ul>\n  </div>\n  <mat-tab-group (selectChange)='tabSelected($event)' [selectedIndex]='activeTab'>\n    <mat-tab [label]='question.label' *ngFor=\"let question of node.question.questions; let i = index;\">\n        <div (swipeLeft)='loadNextTab()' (swipeRight)='loadPreviousTab()'>\n          <form-renderer [node]=\"node.children[question.key]\" [parentComponent]=\"this\" [parentGroup]=\"node.control\"></form-renderer>\n        </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div style=\"text-align: center;\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadPreviousTab()\" [ngClass]=\"{disabled: isCurrentTabFirst()}\">&lt;&lt;</button>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadNextTab()\" [ngClass]=\"{disabled: isCurrentTabLast()}\">\n      &gt;&gt;</button>\n  </div>\n</div>\n<div *ngIf=\"node.question.renderingType === 'page'\">\n  <!--<h2>{{node.question.label}}</h2>-->\n  <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n    [parentGroup]=\"parentGroup\"></form-renderer>\n</div>\n<div *ngIf=\"node.question.renderingType === 'section'\">\n  <div class=\"panel  panel-primary\">\n    <div class=\"panel-heading\">\n      <button type=\"button\" class=\"btn btn-primary pull-right\" (click)=\"isCollapsed = !isCollapsed\">\n        {{isCollapsed ? 'Show' : 'Hide'}}\n      </button> {{node.question.label}}\n    </div>\n    <div class=\"panel-body\" [collapse]=\"isCollapsed\">\n      <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n        [parentGroup]=\"parentGroup\"></form-renderer>\n    </div>\n  </div>\n</div>\n\n<!-- MESSAGES -->\n<div *ngIf=\"node.control && node.control.alert && node.control.alert !== ''\" class=\"alert alert-warning\">\n  <a class=\"close\" data-dismiss=\"alert\">&times;</a> {{node.control.alert}}\n</div>\n\n<!--CONTROLS-->\n\n<div *ngIf=\"node.question.controlType === 0\" class=\"form-group\" [formGroup]=\"parentGroup\" [hidden]=\"node.control.hidden\"\n  [ngClass]=\"{disabled: node.control.disabled}\">\n  <!--LEAF CONTROL-->\n  <div class=\"question-area\">\n    <a class=\"form-tooltip pull-right\" (click)=\"toggleInformation(node.question.extras.id)\" data-placement=\"right\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      <i class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></i>\n    </a>\n\n    <label *ngIf=\"node.question.label\" [style.color]=\"hasErrors()? 'red' :''\" class=\"control-label\" [attr.for]=\"node.question.key\">\n      {{node.question.required === true ? '*':''}} {{node.question.label}}\n    </label>\n    <div [ngSwitch]=\"node.question.renderingType\">\n      <select class=\"form-control\" *ngSwitchCase=\"'select'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n        <option *ngFor=\"let o of node.question.options\" [ngValue]=\"o.value\">{{o.label}}\n        </option>\n      </select>\n      <remote-file-upload *ngSwitchCase=\"'file'\" [dataSource]=\"dataSource\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\n        (fileChanged)=\"upload($event)\">\n      </remote-file-upload>\n      <textarea [placeholder]=\"node.question.placeholder\" [rows]=\"node.question.rows\" class=\"form-control\" *ngSwitchCase=\"'textarea'\"\n        [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n      </textarea>\n      <remote-select *ngSwitchCase=\"'remote-select'\" [placeholder]=\"node.question.placeholder\" tabindex=\"0\" [dataSource]=\"dataSource\"\n        [componentID]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"></remote-select>\n        \n    <!--\n      <date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" tabindex=\"0\" [weeks]='node.question.extras.questionOptions.weeksList'\n        (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\"></date-time-picker>\n    -->\n    \n      <ngx-date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\"\n            (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" ></ngx-date-time-picker>\n\n      <ng-select *ngSwitchCase=\"'multi-select'\" [noFilter]=\"50\" [style.height]='auto' tabindex=\"0\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\" [options]=\"node.question.options\" [multiple]=\"true\">\n      </ng-select>\n      <input class=\"form-control\" *ngSwitchCase=\"'number'\" [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"'number'\" [id]=\"node.question.key + 'id' \" [step]=\"'any'\" [min]=\"node.question.extras.questionOptions.min\"\n        [max]=\"node.question.extras.questionOptions.max\">\n      <input class=\"form-control\" *ngSwitchDefault [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"node.question.renderingType\" [id]=\"node.question.key + 'id' \">\n\n      <div *ngSwitchCase=\"'radio'\">\n        <div *ngFor=\"let o of node.question.options\">\n          <label class=\"form-control no-border\">\n            <input type=\"radio\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\" [value]=\"o.value\"> {{ o.label }}\n          </label>\n        </div>\n      </div>\n\n      <div *ngSwitchCase=\"'checkbox'\">\n        <checkbox [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [options]=\"node.question.options\"></checkbox>\n      </div>\n\n      <div *ngIf=\"node.question.enableHistoricalValue && node.question.historicalDisplay\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-xs-9\">\n              <span class=\"text-warning\">Previous Value: </span>\n              <strong>{{node.question.historicalDisplay?.text}}</strong>\n              <span *ngIf=\"node.question.showHistoricalValueDate\">\n                <span> | </span>\n                <strong class=\"text-primary\">{{node.question.historicalDisplay?._date}}</strong>\n              </span>\n\n            </div>\n            <button type=\"button\" [node]=\"node\" [name]=\"'historyValue'\" class=\"btn btn-primary btn-small col-xs-3\">Use Value\n            </button>\n          </div>\n        </div>\n      </div>\n      <appointments-overview [node]=\"node\"></appointments-overview>\n      <div *ngIf=\"hasErrors() \">\n        <p *ngFor=\"let e of errors() \">\n          <span class=\"text-danger \">{{e}}</span>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"question-info col-md-12 col-lg-12 col-sm-12\" id=\"{{node.question.extras.id}}\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      {{node.question.extras.questionInfo}}\n    </div>\n\n  </div>\n</div>\n<div *ngIf=\"node.question.controlType === 1\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n\n  <!--ARRAY CONTROL-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div class='well' style=\"padding: 2px; \" *ngSwitchCase=\" 'repeating' \">\n      <h4 style=\"margin: 2px; font-weight: bold;\">{{node.question.label}}</h4>\n      <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:2px;\" />\n      <div [ngSwitch]=\"node.question.extras.type\">\n        <div *ngSwitchCase=\"'testOrder'\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <div>{{child.orderNumber}}</div>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n\n        <div *ngSwitchCase=\"'obsGroup'\" style=\"margin-bottom:20px;\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n      </div>\n      <button type=\"button \" class='btn btn-primary' (click)=\"node.createChildNode() \">Add</button>\n    </div>\n  </div>\n\n</div>\n<div *ngIf=\"node.question.controlType === 2\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n  <!--GROUP-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div *ngSwitchCase=\" 'group' \">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n    <div *ngSwitchCase=\" 'field-set' \" style=\"border: 1px solid #eeeeee; padding: 2px; margin: 2px;\">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n  </div>\n\n</div>\n`,\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  constructor(\n  private validationFactory: ValidationFactory,\n  private dataSources: DataSources,\n  private formErrorsService: FormErrorsService,\n  @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n  }\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n    this.node.question.renderingType === 'remote-select') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      console.log('Key', this.node.question);\n      console.log('Data source', this.dataSource);\n    }\n\n  }\n\n\n public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public  isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public  isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public  loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public  tabSelected($event) {\n    this.activeTab = $event.index;\n    this.setPreviousTab();\n  }\n  public  setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n public   hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public  errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          element.focus();\n        }, 200);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    console.log('Event', event);\n    console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n        e.style.display = 'none';\n     } else {\n        e.style.display = 'block';\n     }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n   private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    template: `<div *ngIf=\"showErrors()\" class=\"container\">\n<ul class=\"list-group\">\n  <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let errorNode of errorNodes\" (click)=announceErrorField(errorNode)>\n    <div class=\"error\" *ngIf=\"errorNode.control.valid == false\">\n      <h4>{{errorNode.question.label}}</h4>\n      <span class=\"text-danger\"> {{getControlError(errorNode)}}</span>\n    </div>\n  </li>\n</ul>\n</div>\n`,\n    styles: [`ul{list-style:none}.list-group-item{padding:2px 15px;cursor:pointer}ul li:hover{background-color:#fff}h4{margin-top:7px;margin-bottom:7px}`]\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    template: `<div\n    #selection\n    [attr.tabindex]=\"disabled ? null : 0\"\n    [ngClass]=\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\"\n    (click)=\"onSelectContainerClick($event)\"\n    (focus)=\"onSelectContainerFocus()\"\n    (keydown)=\"onSelectContainerKeydown($event)\"\n    (window:click)=\"onWindowClick()\"\n    (window:resize)=\"onWindowResize()\">\n\n    <div class=\"single\"\n        *ngIf=\"!multiple\">\n        <div class=\"value\"\n            *ngIf=\"optionList.hasSelected()\">\n            {{optionList.selection[0].label}}\n        </div>\n        <div class=\"placeholder\"\n            *ngIf=\"!optionList.hasSelected()\">\n            {{placeholderView}}\n        </div>\n        <div class=\"clear\"\n            *ngIf=\"allowClear\"\n            (click)=\"onClearSelectionClick($event)\">\n            &#x2715;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"isOpen\">\n            &#x25B2;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"!isOpen\">\n            &#x25BC;\n        </div>\n    </div>\n\n    <div class=\"multiple\"\n        *ngIf=\"multiple\">\n        <div class=\"option\"\n            *ngFor=\"let option of optionList.selection\">\n            <span class=\"deselect-option\"\n                (click)=onDeselectOptionClick(option)>\n                &#x2715;\n            </span>\n            {{option.label}}\n        </div>\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            tabindex=\"-1\"\n            [placeholder]=\"placeholderView\"\n            [ngStyle]=\"{'width.px': filterInputWidth}\"\n            (input)=\"onMultipleFilterInput($event)\"\n            (keydown)=\"onMultipleFilterKeydown($event)\"/>\n    </div>\n\n</div>\n<select-dropdown\n    *ngIf=\"isOpen\"\n    #dropdown\n    [multiple]=\"multiple\"\n    [optionList]=\"optionList\"\n    [notFoundMsg]=\"notFoundMsg\"\n    [highlightColor]=\"highlightColor\"\n    [highlightTextColor]=\"highlightTextColor\"\n    [filterEnabled]=\"filterEnabled\"\n    [width]=\"width\"\n    [top]=\"top\"\n    [left]=\"left\"\n    (close)=\"onDropdownClose($event)\"\n    (optionClicked)=\"onDropdownOptionClicked($event)\"\n    (singleFilterClick)=\"onSingleFilterClick()\"\n    (singleFilterInput)=\"onSingleFilterInput($event)\"\n    (singleFilterKeydown)=\"onSingleFilterKeydown($event)\">\n</select-dropdown>\n`,\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    template: `<div\n    [ngStyle]=\"{'top.px': top, 'left.px': left, 'width.px': width}\">\n\n    <div class=\"filter\"\n        *ngIf=\"!multiple\">\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            (click)=\"onSingleFilterClick($event)\"\n            (input)=\"onSingleFilterInput($event)\"\n            (keydown)=\"onSingleFilterKeydown($event)\">\n    </div>\n\n    <div class=\"options\"\n        #optionsList>\n        <ul\n            (wheel)=\"onOptionsWheel($event)\">\n            <li *ngFor=\"let option of optionList.filtered\"\n                [ngClass]=\"{'highlighted': option.highlighted, 'selected': option.selected, 'disabled': option.disabled}\"\n                [ngStyle]=\"getOptionStyle(option)\"\n                (click)=\"onOptionClick(option)\"\n                (mouseover)=\"onOptionMouseover(option)\">\n                {{option.label}}\n            </li>\n            <li\n                *ngIf=\"!optionList.hasShown()\"\n                class=\"message\">\n                {{notFoundMsg}}\n            </li>\n        </ul>\n    </div>\n</div>\n`,\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    template: `<div>\n    <file-uploader [(ngModel)]=\"innerValue\" (onClear)=\"clearValue()\" (fileChanged)=\"upload($event)\">\n    </file-uploader>\n    <img *ngIf=\"innerValue\" class=\"img-responsive\" [src]=\"innerValue | secure:this.dataSource.fetchFile\" alt=\"\" />\n</div>`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { FileUploaderModule } from 'ngx-file-uploader';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, FileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  template: `<picker-modal (onOverlayClick)=\"cancelDatePicker()\">\n  <div class=\"picker-wrap\">\n    <div class=\"picker-box\">\n      <div class=\"picker-header\">\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-prev\" (click)=\"prev()\"></span>\n        </div>\n        <div class=\"picker-header-content\">\n          <div class=\"content\">\n            <span (click)=\"showMonthSelection()\" class=\"month\">{{calendarDate | moment: \"MMMM\"}}</span>\n            <span class=\"seperator\">|</span>\n            <span (click)=\"showYearSelection()\" class=\"year\">{{calendarDate | moment: \"YYYY\"}}</span>\n          </div>\n        </div>\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-next\" (click)=\"next()\"></span>\n        </div>\n      </div>\n      <div class=\"picker-calendar\">\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n          <span class=\"picker-weekday\" *ngFor=\"let day of dayNames\">{{ day }}</span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n                    <span class=\"picker-day\" (click)=\"selectDay(day)\" [ngClass]=\"{\n                       'out-focus': day.month() != calendarDate.month(),\n                       'today': day.isSame(today),\n                       'selected': day.isSame(selectedDate)\n                      }\" *ngFor=\"let day of calendarDays\">\n                    {{ day | moment: 'D'}}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayMonths\">\n                    <span class=\"picker-month\" *ngFor=\"let month of monthsShort\"\n                          (click)=\"selectMonth(month)\"\n                          [ngClass]=\"{\n                       'selected': month === currentMonth\n                      }\">\n                    {{ month }}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayYears\">\n                    <span class=\"picker-year\" *ngFor=\"let year of displayYearRange\"\n                          (click)=\"selectYear(year)\"\n                          [ngClass]=\"{\n                       'selected': year === currentYear\n                      }\">\n                    {{ year }}\n                </span>\n        </div>\n      </div>\n      <div class=\"picker-footer\">\n        <div class=\"picker-action action-today\" (click)=\"selectToday()\"><span class=\"text\">Today</span></div>\n        <div class=\"picker-action action-clear\" (click)=\"clearPickDate()\"><span class=\"text\">Clear</span></div>\n        <div class=\"picker-action action-close\" (click)=\"cancelDatePicker()\"><span class=\"text\">Close</span></div>\n      </div>\n    </div>\n  </div>\n</picker-modal>\n`,\n  styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:666px}.picker-box{font-family:'Open Sans';min-width:400px!important;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;display:flex;height:2.5rem;width:100%}.picker-header-nav{position:relative;cursor:pointer;width:calc(100% / 8)}.picker-header-nav>*{position:absolute;top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker-header-nav .nav-next::before,.picker-header-nav .nav-prev::before{content:\" \";border-top:.5em solid transparent;border-bottom:.5em solid transparent;border-right:.75em solid #000;width:0;height:0;display:block;margin:0 auto}.picker-header-nav .nav-next::before{border-right:0;border-left:.75em solid #000}.picker-header-content{width:calc(100% * 6 / 8);text-align:center}.picker-header-content .month{font-size:1.778rem;line-height:2.5rem;margin-right:.5rem;font-weight:700}.picker-header-content .year{font-style:italic;color:#999}.picker-calendar{width:100%}.picker-calendar .picker-calendar-row{display:flex;flex-wrap:wrap;width:100%;margin-bottom:.625rem}.picker-calendar .picker-weekday{font-weight:700;text-align:left;color:#999;width:calc(100% / 7)}.picker-calendar .picker-day,.picker-calendar .picker-month,.picker-calendar .picker-year{font-size:1.333rem;line-height:2.5rem;position:relative;height:2.5rem;text-align:center;cursor:pointer;width:calc(100% / 7)}.picker-calendar .picker-day:hover,.picker-calendar .picker-month:hover,.picker-calendar .picker-year:hover{background:#b1dcfb}.picker-calendar .out-focus{color:#ddd}.picker-calendar .out-focus:hover{color:#000}.picker-calendar .selected{background:#0089ec;color:#fff}.picker-calendar .selected:hover{background:#0089ec}.picker-calendar .today::before{content:\" \";position:absolute;top:2px;right:2px;width:0;height:0;border-top:.5em solid #0059bc;border-left:.5em solid transparent}.picker-footer{cursor:pointer}.picker-footer .picker-action{text-align:center;width:calc(100% / 3)}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-today::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-today::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    template: `<picker-modal (onOverlayClick)=\"cancelTimePicker()\">\n    <div class=\"picker-wrap\">\n        <div class=\"picker-box\">\n            <div class=\"picker-header\">Time Picker</div>\n            <div class=\"picker-table\">\n                <ul class=\"picker-table-time\">\n                    <li class=\"picker-table-number hour\">\n                        <span class=\"arrow up\" (click)=\"increaseHour()\"></span>\n                        {{time | moment: hourFormat}}\n                        <span class=\"arrow down\" (click)=\"decreaseHour()\"></span>\n                    </li>\n                    <li class=\"picker-table-separator\">:</li>\n                    <li class=\"picker-table-number minute\">\n                        <span class=\"arrow up\" (click)=\"increaseMinute()\"></span>\n                        {{time | moment: 'mm'}}\n                        <span class=\"arrow down\" (click)=\"decreaseMinute()\"></span>\n                    </li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-separator\">:</li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-number second\">\n                        <span class=\"arrow up\" (click)=\"increaseSecond()\"></span>\n                        {{time | moment: 'ss'}}\n                        <span class=\"arrow down\" (click)=\"decreaseSecond()\"></span>\n                    </li>\n                    <li *ngIf=\"use12Hour\" class=\"picker-table-meridiem meridiem\">\n                        {{time | moment: 'A'}}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"picker-footer\">\n                <div class=\"picker-action action-now\" (click)=\"selectNow()\"><span class=\"text\">Now</span></div>\n                <div class=\"picker-action action-confirm\" (click)=\"selectTime()\"><span class=\"text\">Confirm</span></div>\n                <div class=\"picker-action action-clear\" (click)=\"clearTime()\"><span class=\"text\">Clear</span></div>\n                <div class=\"picker-action action-close\" (click)=\"cancelTimePicker()\"><span class=\"text\">Close</span></div>\n            </div>\n        </div>\n    </div>\n</picker-modal>\n`,\n    styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:40rem;font-family:'Open Sans'}.picker-box{width:100%;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;height:2.5rem;width:100%}.picker-header{text-align:center}.picker-table{width:100%;margin:2.5rem 0}.picker-table-time{font-size:2.37rem;line-height:2.5rem;list-style:none;margin:0;padding:0;display:flex;justify-content:center;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-table-meridiem,.picker-table-number,.picker-table-separator{text-align:center}.picker-table-meridiem,.picker-table-number{position:relative;width:20%}.arrow{position:absolute;left:50%;border:solid #777;border-width:0 .2rem .2rem 0;display:inline-block;padding:.25rem;cursor:pointer}.arrow.up{top:-1rem;-webkit-transform:translateX(-50%) rotate(-135deg);transform:translateX(-50%) rotate(-135deg)}.arrow.down{bottom:-1rem;-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg)}.arrow:hover{border-color:#1975d2}.picker-table-separator{width:calc(20% / 3)}.picker-footer{display:flex;justify-content:center;width:100%;cursor:pointer}.picker-footer .picker-action{width:25%;text-align:center}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-confirm::before,.picker-footer .action-now::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-now::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-confirm::before{width:1rem;height:1rem;border-radius:100%;background-color:#00b5ad}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    template: `<section class=\"x-modal\">\n    <section class=\"modal-overlay\" (click)=\"closeModal()\"></section>\n    <section class=\"modal-main\" id=\"section-modal-main\">\n        <ng-content></ng-content>\n    </section>\n</section>\n`,\n    styles: [`:host{z-index:9999999999}*,::after,::before{box-sizing:border-box}.modal-main{position:absolute;left:19.6%;right:auto;top:auto;z-index:111;background-color:#fff;border:1px solid #d7dad7;border-radius:6px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);box-shadow:0 5px 15px rgba(0,0,0,.3)}`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    template: `<div class='row'>\n    <div *ngIf=\"!showTime\" class='col-xs-12 col-md-12'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-8 col-md-8'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-4 col-md-4'>\n        <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\n        />\n    </div>\n</div>\n<date-picker *ngIf=\"showDatePicker\" [initDate]=\"value\" (onSelectDate)=\"setDate($event)\" (onDatePickerCancel)=\"toggleDatePicker($event)\"></date-picker>\n\n<time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"setTime($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>\n`,\n    styles: [`input[readonly]{background-color:#fff}.up{bottom:100%!important;top:auto!important}.glyphicon{top:1px}`],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR , FormControl } from '@angular/forms';\nimport { DateAdapter , MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter} from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n      dateInput: 'LL',\n    },\n    display: {\n      dateInput: 'LL',\n      monthYearLabel: 'MMM YYYY',\n      dateA11yLabel: 'LL',\n      monthYearA11yLabel: 'MMMM YYYY',\n    },\n  };\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    template: `<div class=\"row\">\n  <div class=\"col-sm-8 col-md-8 col-lg-8 col-xs-12\">\n    <div class=\"row\">\n        <div class=\"col-sm-9 col-md-9 col-lg-9 col-xs-12\">\n            <div class=\"input-group\">\n                   \n                    <input matInput [matDatepicker]=\"picker\" class=\"form-control\" [(ngModel)]=\"selectedDate\" placeholder=\"Choose a date\" \n                    (ngModelChange)=\"onDateSelect($event)\">\n                    <mat-datepicker #picker touchUi=\"true\" disabled=\"false\"></mat-datepicker>\n                    <div class=\"input-group-btn\">\n                        <button class=\"btn btn-default\" (click)=\"picker.open()\">\n                            <i class=\"glyphicon glyphicon-calendar\"></i>\n                          </button>\n                        <button class=\"btn btn-default\" (click)=\"setCurrentDate()\">\n                          Set Current Date\n                        </button>\n                    </div>\n            </div>\n          </div>\n          <div class=\"col-sm-3 col-md-3 col-lg-3 col-xs-12\" *ngIf=\"showWeeks\">\n          \n              <div class=\"form-group\">\n                  <mat-select placeholder=\"Select Weeks\" class=\"form-control\" name=\"weeks\" (ngModelChange)=\"weekSelect($event)\">\n                    <mat-option *ngFor=\"let count of weeks\" [value]=\"count\">\n                      {{count}} Weeks\n                    </mat-option>\n                  </mat-select>\n              </div>\n          </div>\n    </div>\n    \n  </div>\n  <div class=\"col-sm-4 col-md-4 col-lg-4 col-xs-12\" id=\"time-section\">\n   \n        <div class=\"input-group\">\n            <input type=\"time\" class=\"form-control\" atp-time-picker [(ngModel)] = \"selectedTime\" (ngModelChange)=\"onTimeSelect($event)\" id=\"ngx-atp-time-picker\"/>\n            <div class=\"input-group-btn\">\n              <button mat-raised-button class=\"btn btn-default\" (click)=\"setCurrentTime()\">\n                  Set Current Time\n              </button>\n            </div>\n         </div>\n    \n      \n  </div>\n\n</div>`,\n    styles: [`#time-section{display:inline-block}#ngx-atp-time-picker,#ngx-mat-form-field{width:100%}.up{bottom:100%!important;top:auto!important}.time-btn{margin-top:-20px}`],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format('HH:mm');\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    @Input() weeks: number[] = [0 , 2 , 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n    public get value() {\n        return this.modelValue;\n    }\n\n    public set value(val) {\n        setTimeout(() => {\n            this.onDateChange.emit(val);\n        }, 100);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    public writeValue(value) {\n        if (!this.loadInitial) {\n            this.setFormValues(value);\n        }\n    }\n\n    public setFormValues(val) {\n\n        this.loadInitial = true;\n\n        this.selectedDate = moment(val).format();\n        this.selectedTime = moment(val).format('HH:mm');\n        if (val instanceof Date) {\n            this.value = moment(val).format();\n        } else {\n            this.value = val;\n        }\n        this.modelValue = this.value;\n\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    public onDateSelect($event) {\n        const setDate = moment($event);\n        const setTime = this.selectedTime;\n        this.setDateTime(setDate, setTime);\n\n    }\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public setCurrentTime() {\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        const nextWeekDate = moment(this.selectedDate).add($event , 'weeks');\n        const nextWeekTime = this.selectedTime;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public setCurrentDate() {\n        const currentDay = moment();\n        const currentTime = moment().format('HH:mm');\n        this.setDateTime(currentDay, currentTime);\n\n\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        const newTime = setTime;\n        const newDateTime = moment(newDate + '' + newTime , 'DD-MM-YYYY HH:mm');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = newTime;\n        this.modelValue = dateTimeString;\n        this.value = dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `<ng-select\n                   (searchInputText)=\"getChangingText($event)\"\n                    (ngModelChange)=\"onValueChange($event)\"\n                    [options]=\"question_options\"\n                    [multiple]=\"multiple\" >\n            </ng-select>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n        case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n    schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources);\n      question.historicalDataValue = origValue;\n      if (schemaQuestion.historicalPrepopulate) {\n        question.defaultValue = origValue;\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        }\n        const val = datetime.substring(0, 19).replace('T', ' ');\n        return this.isEmpty(val) ? undefined : val;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            node.control.setValue(firstProvider.uuid);\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    template: `<div>\n    <ng-select [id]=\"componentID\" [noFilter]=\"0\" (selected)=\"selected($event)\" (deselected)=\"removed($event)\" [options]=\"items\" [allowClear]=\"true\"\n        [placeholder]=\"placeholder\" [notFoundMsg]=\"notFoundMsg\" (typed)=\"typed($event)\" tabindex=\"0\">\n    </ng-select>\n    <div *ngIf=\"loading\">\n        resolving....\n    </div>\n</div>\n`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  template: `<div *ngIf=\"showAppointments\" class=\"appointments\">\n  <p *ngIf=\"loadingAppointments\">\n    <span *ngIf=\"!appointmentsLoaded && errorLoadingAppointments\">Error checking appointments</span>\n    <span *ngIf=\"loadingAppointments\"><span\n      class=\"fa fa-spinner fa-spin\"></span>Checking appointments...</span>\n  </p>\n  <div *ngIf=\"appointmentsLoaded && !errorLoadingAppointments\">\n    <table *ngIf=\"appointments.length>0\" class=\"table table-stripped table-bordered\">\n      <thead>\n      <tr>\n        <th *ngFor=\"let appointment of appointments\" [ngClass]=\"{'active': appointment.date === today}\">\n          <span>{{appointment.date}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <td *ngFor=\"let appointment of appointments\"\n            [ngClass]=\"{'active': appointment.date === today}\">\n          <span><strong><em>{{appointment.count}}</em></strong></span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n`,\n  styles: [`.appointments{margin-top:12px;font-size:12px;color:#999}.appointments p{padding-top:12px}.appointments th{border-bottom:0!important;color:#333}.appointments td span,.appointments th span{display:block}.appointments td.active,.appointments th.active{background-color:#3c8dbc;color:#fff!important;padding:0}.appointments td.active span,.appointments th.active span{padding:4px}.appointments span.fa{display:inline-block;margin-right:7px}`]\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const params = {\n              'programType': ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838']\n            };\n            const urlParams = encodeURI(JSON.stringify(params));\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programVisitEncounter: urlParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\n@Component({\n    selector: 'encounter-viewer',\n    template: `<div class=\"viewer\">\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n    <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n      <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\n        <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n          <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n          <div class=\"panel-body\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n    <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\n      [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n  </div>\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\n    class=\"section\">\n    <div class=\"panel panel-primary\">\n      <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n    </div>\n    <div *ngFor=\"let question of rootNode.question.questions\">\n      <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n    </div>\n  </div>\n\n  <!--Leaf Controls-->\n  <div style=\"margin-left:10px;\">\n  <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\n    <div *ngIf=\"rootNode.control.value\">\n    <div class=\"question-answer\">\n      <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\n          {{ rootNode.question.label }}\n      </label>\n      <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n      <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\n          <div *ngSwitchCase=\" 'file' \">\n            <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\n          </div>\n          <div *ngSwitchCase=\"'remote-select'\">\n            <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\n          </div>\n          <div *ngSwitchDefault style=\"display:inline-block\">\n              <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\n            </div>\n      </div>\n     \n    </div>\n    </div>\n  </form>\n</div>\n\n  <!--Array Controls-->\n  <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\n    <div [ngSwitch]=\"rootNode.question.renderingType\">\n      <div *ngSwitchCase=\" 'repeating' \">\n        <div [ngSwitch]=\"rootNode.question.extras.type\">\n          <div *ngSwitchCase=\"'testOrder'\">\n            <label>{{rootNode.question.label}}:</label>\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n          \n          <div *ngSwitchCase=\"'obsGroup'\">\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.controlType === 2\">\n\n    <!--GROUP-->\n    <div [ngSwitch]=\"rootNode.question.renderingType \">\n      <div *ngSwitchCase=\" 'group' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n      <div *ngSwitchCase=\" 'field-set' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n    </div>\n  </div>\n\n\n\n  </div>\n`,\n    styles: [`.page-label{font-size:20px;font-weight:700}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none!important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px!important}.line-breaker{white-space:pre-line}hr{margin:10px}`],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         console.log(this.rootNode);\n    }\n\n    constructor(private encounterViewerService: EncounterViewerService,\n               private dataSources: DataSources) {\n    }\n\n    public ngOnInit() {\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n@Component({\n    selector: 'encounter-renderer',\n    template: `<encounter-viewer class=\"card\" [form]=\"$form\" [encounter]=\"$enc\"></encounter-viewer>\n\n\n`,\n    styles: [`.card{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}`]\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(private encAdapter: EncounterAdapter) { }\n\n    ngOnInit() {\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styles: [`input{border:none;box-shadow:none;color:#000;background:#fff!important;padding-top:23px;display:block;position:relative}`],\n    template: `<div>\n    {{innerValue}}\n</div>`,\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  template: `<div *ngFor=\"let option of options; let i = index;\">\n    <label class=\"form-control no-border\">\n        <input type=\"checkbox\" id=\"i + 'id'\" (change)=\"selectOpt(option, $event)\" value=\"option.value\">\n        {{ option.label }}\n    </label>\n</div>`,\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\nimport { SelectModule } from '../components/select/select.module';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\nimport { SharedModule } from '../shared.module';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        SelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule,\n        SharedModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n"]}