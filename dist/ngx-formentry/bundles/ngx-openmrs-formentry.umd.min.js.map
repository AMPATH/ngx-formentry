{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","null","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-control-type.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-pdf-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/rendering-type.ts"],"names":["DebugModeService","this","cookieKey","prototype","debugEnabled","Injectable","FormErrorsService","announceErrorFieldSource","Subject","announceErrorField$","asObservable","announceErrorField","error","next","control","tab","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","_this","valueChanges","subscribe","ControlRelations","relationFor","_otherRelations","_relationFor","_relations","addRelatedControls","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","hiddenStatusChanges","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","disabledStatusChanges","touchedStatusChanges","hiderHelper","disablerHelper","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","show","markAsTouched","opts","markAsUntouched","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","None","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","calcBMIForAgeZscore","bmiForAgeRef","bmi","formattedSDValue","refSectionObject","_.first","refObjectValues","map","x","refObjectKeys","minimumValue","minReferencePoint_1","_.forEach","lastReferenceValue_1","_.last","_.findIndex","replace","includes","calcWeightForHeightZscore","weightForHeightRef","refSection","_.filter","refObject","minReferencePoint_2","lastReferenceValue_2","calcHeightForAgeZscore","heightForAgeRef","minReferencePoint_3","lastReferenceValue_3","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JSExpressionValidatorsEnabled","JsExpressionValidator","helperFunctions","js_expression","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","MAX_LENGTH_MSG","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","ValidationFactory","getValidators","list","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","minlength","requiredLength","maxlength","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","clearDataSource","FormRendererComponent","formErrorsService","cd","document","childComponents","isCollapsed","subs","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","valueProcessingInfo","lastFormTab","scrollToControl","isExpanded","parentComponent","addChildComponent","subscribeToFormControlChanges","ngOnDestroy","sub","unsubscribe","statusChanges","triggerChangeDetection","detectChanges","dataSourceOptions","checkSection","groupChildrenHidden_1","every","k","innerNode","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","scrollIntoView","behavior","block","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","styles","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","_nodeChange","EventEmitter","target","name","_node","compareString","stopPropagation","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_highlightedOption","_options","highlight","equalValues","v0","v1","slice","sort","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","t","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_a","tslib_1.__values","_b","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","KEYS","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","allowClear","highlightColor","highlightTextColor","noFilter","notFoundMsg","placeholder","opened","closed","deselected","typed","_value","filterEnabled","filterInputWidth","hasFocus","isBelow","isDisabled","isOpen","placeholderView","clearClicked","selectContainerClicked","onChange","_","onTouched","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","onWindowClick","closeDropdown","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","TypeError","firstTime","updatePosition","filterInput","nativeElement","clearFilterInput","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","altKey","preventDefault","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","providers","encapsulation","ViewEncapsulation","ViewChild","SelectDropdownComponent","optionClicked","singleFilterClick","singleFilterInput","singleFilterKeydown","disabledColor","disabledTextColor","optionsReset","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","getOptionStyle","background-color","color","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","_latestValue","_latestReturnedValue","_subscription","_obj","_result","BehaviorSubject","_internalSubscription","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","previousUrl","sanitized","bypassSecurityTrustUrl","WrappedValue","wrap","_subscribe","_updateLatestValue","async","markForCheck","Pipe","pure","DomSanitizer","SharedModule","RemoteFileUploadComponent","renderer","uploading","innerValue","propagateChange","_dataSource","data","fileUpload","image","clearValue","Renderer2","RemoteFileUploadModule","NgxFileUploaderModule","DatePickerComponent","locale","viewFormat","returnObject","onDatePickerCancel","onSelectDate","onDisplayMonths","onDisplayYears","displayYearsIndex","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearRange","generateCalendar","prev","subtract","showMonthSelection","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","generateYears","years","_.chunk","currentMonth","dayNames","weekdaysShort","initDate","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","showSecond","use12Hour","onSelectTime","onTimePickerCancel","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","cancelTimePicker","selectNow","clearTime","ModalComponent","onOverlayClick","closeModal","animations","MomentPipe","Moment","DateTimePickerComponent","showDate","showTime","showWeeks","weeks","onDateChange","showDatePicker","showTimePicker","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","toggleTimePicker","modelValue","DateTimePickerModule","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","selectedTime","loadInitial","onTimeSelect","setDateTime","onDateSelect","dateString","setCurrentTime","currentTime","weekSelect","dateToUse","nextWeekDate","nextWeekTime","selectionChange","getWeekPickerCssClass","getDatePickerCssClass","getTimePickerCssClass","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","NgxDateTimePickerModule","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","MatSelectModule","Option$1","AfeNgSelectComponent","question_options","getChangingText","getData","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","showWeeksAdder","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","returnErrorOnNext","selectOptions","sampleData","concept","of","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","additionalScopevalues","HD","deps","evaluatePrecondition","additionalScope","histValue","QuestionFactory","historicalHelperService","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalPrepopulateCondition","historicalPrepopulate","valDate","differenceInDays","Number","isInteger","allowedHistoricalValueAgeInDays","calculate","s","Math","random","floor","String","fromCharCode","Form","questionFactory","existingOrders","_showErrors","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","invalidControlNodes","c","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","hd","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","repeatingModel","_d","_e","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider_1","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","items","loading","characters","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","log","canSearch","removed","RemoteSelectModule","AppointmentsOverviewComponent","showAppointments","loadingAppointments","errorLoadingAppointments","appointmentsLoaded","appointments","resetProperties","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","programTypeParams","getMonthlySchedule","limit","locationUuids","programType","appointment","scheduled","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterPdfViewerService","obsValueAdapter","subscribedAnswers","stack","getPages","remoteSelectsOnly","remoteAns","content","remoteQuestions","getSections","table","widths","headerRows","keepWithHeaderRows","layout","margin","hLineWidth","vLineWidth","hLineColor","vLineColor","resolve","answeredSections","answeredSections_1","answeredSections_1_1","getRemoteSectionData","answeredSections_2","answeredSections_2_1","getSectionData","appendResolvedAnswer","resolvedAnswer","bold","section_1","section_1_1","remoteAns_1","remoteAns_1_1","resolveValue","section_2","section_2_1","arrayElement","isUuid","arr_1","elem","generatePdfDefinition","docDefinition$","remoteSelects","combineLatest","docDefinition","fontSize","confidential","header","tableExample","tableHeader","fillColor","borderColor","tableSubheader","banner","bannerLabel","bannerItem","timestamp","alignment","pageNumber","defaultStyle","displayPdf","pdf","pdfMake","vfs","pdfFonts.pdfMake","titleize","nid","mui","birthdate","age","footer","currentPage","pageCount","columns","win","createPdf","ISO_8601","isValid","str","charAt","substr","toLowerCase","providedIn","EncounterContainerComponent","encAdapter","encounterPdfViewerService","$form","$enc","QuestionControlComponent","el","_.isNumber","noop","FilePreviewComponent","encounterService","onTouchedCallback","onChangeCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","MatIconModule","MatTabsModule","MatCardModule","TimeAgoPipe","FormBuilder","Pair","Page","Section","Select","DropDown"],"mappings":"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","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n        control.hiddenStatusChanges.next(true);\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n        control.hiddenStatusChanges.next(false);\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\nimport { Subject } from 'rxjs';\nimport { Touchable } from './touchable';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, Touchable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n    public hiddenStatusChanges: Subject<boolean> = new Subject<boolean>();\n    public disabledStatusChanges: Subject<boolean> = new Subject<boolean>();\n    public touchedStatusChanges: Subject<boolean> = new Subject<boolean>();\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n        this.disabledStatusChanges.next(true);\n    }\n\n    enable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.enable(param);\n        this.disabledStatusChanges.next(false);\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    markAsTouched(opts: { onlySelf?: boolean; } = {}): void {\n        super.markAsTouched(opts);\n        this.touchedStatusChanges.next(true);\n    }\n\n    markAsUntouched(opts: { onlySelf?: boolean; } = {}): void {\n        super.markAsUntouched(opts);\n        this.touchedStatusChanges.next(false);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { Subject } from 'rxjs';\nimport { Touchable } from './touchable';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable, Touchable, CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n    public hiddenStatusChanges: Subject<boolean> = new Subject<boolean>();\n    public disabledStatusChanges: Subject<boolean> = new Subject<boolean>();\n    public touchedStatusChanges: Subject<boolean> = new Subject<boolean>();\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n        this.disabledStatusChanges.next(true);\n    }\n\n    enable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.enable(param);\n        this.disabledStatusChanges.next(false);\n    }\n\n    markAsTouched(opts: { onlySelf?: boolean; } = {}): void {\n        super.markAsTouched(opts);\n        this.touchedStatusChanges.next(true);\n    }\n\n    markAsUntouched(opts: { onlySelf?: boolean; } = {}): void {\n        super.markAsUntouched(opts);\n        this.touchedStatusChanges.next(false);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { Subscription, Observable, Subject } from 'rxjs';\nimport { Touchable } from './touchable';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, Touchable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n    public hiddenStatusChanges: Subject<boolean> = new Subject<boolean>();\n    public disabledStatusChanges: Subject<boolean> = new Subject<boolean>();\n    public touchedStatusChanges: Subject<boolean> = new Subject<boolean>();\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n        this.disabledStatusChanges.next(false);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n        this.disabledStatusChanges.next(true);\n    }\n\n    enable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.enable(param);\n        this.disabledStatusChanges.next(false);\n    }\n\n    markAsTouched(opts: { onlySelf?: boolean; } = {}): void {\n        super.markAsTouched(opts);\n        this.touchedStatusChanges.next(true);\n    }\n\n    markAsUntouched(opts: { onlySelf?: boolean; } = {}): void {\n        super.markAsUntouched(opts);\n        this.touchedStatusChanges.next(false);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","export enum AfeControlType {\n    AfeFormControl,\n    AfeFormArray,\n    AfeFormGroup,\n    None\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nimport * as _ from 'lodash';\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  calcBMIForAgeZscore(bmiForAgeRef, height, weight) {\n   let bmi;\n   const maxAgeInDays = 1856;\n    if (height && weight) {\n      bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    const refSectionObject = _.first(bmiForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (bmi < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= bmi) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M' || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  bmi && refSectionObject ?  formattedSDValue : null;\n  }\n  calcWeightForHeightZscore(weightForHeightRef, height, weight) {\n    let refSection ;\n    let formattedSDValue;\n    if (height && weight) {\n      height = parseFloat(height).toFixed(1);\n    }\n    const standardHeightMin = 45;\n    const standardMaxHeight = 110;\n    if ( height < standardHeightMin || height > standardMaxHeight) {\n      formattedSDValue = -4;\n    } else {\n        refSection = _.filter(weightForHeightRef, (refObject) => {\n        return parseFloat(refObject['Length']).toFixed(1) === height;\n      });\n    }\n\n    const refSectionObject = _.first(refSection);\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (weight < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= weight) {\n          minReferencePoint.push(value);\n          }\n          });\n\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight  ?  formattedSDValue : null;\n  }\n\n  calcHeightForAgeZscore(heightForAgeRef, height, weight) {\n\n    const refSectionObject = _.first(heightForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (height < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= height) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight && refSectionObject ?  formattedSDValue : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      calcBMIForAgeZscore: helper.calcBMIForAgeZscore,\n      calcWeightForHeightZscore: helper.calcWeightForHeightZscore,\n      calcHeightForAgeZscore: helper.calcHeightForAgeZscore,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                // console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject, OnChanges, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode, GroupNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { Subscription } from 'rxjs';\n// import { concat, of, Observable, Subject, BehaviorSubject } from 'rxjs';\n// import * as _ from 'lodash';\n\n// import { debounceTime, distinctUntilChanged, tap, switchMap, catchError, map } from 'rxjs/operators';\n// import { QuestionBase } from '../question-models';\n\n@Component({\n  selector: 'form-renderer',\n  template: `<!--CONTAINERS-->\n<!-- <button class=\"btn btn-default\" (click)=\"detectChangesmanually()\">Detect Changes</button> -->\n<div *ngIf=\"node.question.renderingType === 'form'\">\n\n  <div class=\"dropdown dropdown-tabs forms-dropdown\">\n    <a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\">\n      <i class=\"fa fa-angle-double-down\"></i>\n    </a>\n    <ul class=\"dropdown-menu dropdown-menu-right forms-dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\n      <li *ngFor=\"let question of node.question.questions; let i = index;\" (click)=\"clickTab(i)\">\n        {{question.label}}\n      </li>\n    </ul>\n  </div>\n  <mat-tab-group (selectedIndexChange)='tabSelected($event)' [selectedIndex]='activeTab'>\n    <mat-tab [label]='question.label' *ngFor=\"let question of node.question.questions; let i = index;\">\n      <div>\n        <form-renderer [node]=\"node.children[question.key]\" [parentComponent]=\"this\" [parentGroup]=\"node.control\"></form-renderer>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div style=\"text-align: center;\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadPreviousTab()\" [ngClass]=\"{disabled: isCurrentTabFirst()}\">&lt;&lt;</button>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadNextTab()\" [ngClass]=\"{disabled: isCurrentTabLast()}\">\n      &gt;&gt;</button>\n  </div>\n</div>\n<div *ngIf=\"node.question.renderingType === 'page'\">\n  <!--<h2>{{node.question.label}}</h2>-->\n  <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n    [parentGroup]=\"parentGroup\"></form-renderer>\n</div>\n<div *ngIf=\"node.question.renderingType === 'section' && checkSection(node)\"> \n  <div class=\"panel  panel-primary\">\n    <div class=\"panel-heading\">\n      <button type=\"button\" class=\"btn btn-primary pull-right\" (click)=\"isCollapsed = !isCollapsed\">\n        {{isCollapsed ? 'Show' : 'Hide'}}\n      </button> {{node.question.label}}\n    </div>\n    <div class=\"panel-body\" [collapse]=\"isCollapsed\">\n      <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n        [parentGroup]=\"parentGroup\"></form-renderer>\n    </div>\n  </div>\n</div>\n\n<!-- MESSAGES -->\n<div *ngIf=\"node.control && node.control.alert && node.control.alert !== ''\" class=\"alert alert-warning\">\n  <a class=\"close\" data-dismiss=\"alert\">&times;</a> {{node.control.alert}}\n</div>\n\n<!--CONTROLS-->\n\n<div *ngIf=\"node.question.controlType === 0\" class=\"form-group\" [formGroup]=\"parentGroup\" [hidden]=\"node.control.hidden\"\n  [ngClass]=\"{disabled: node.control.disabled}\">\n  <!--LEAF CONTROL-->\n  <div class=\"question-area\">\n    <a class=\"form-tooltip pull-right\" (click)=\"toggleInformation(node.question.extras.id)\" data-placement=\"right\"\n      *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      <i class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></i>\n    </a>\n\n    <label *ngIf=\"node.question.label\" [style.color]=\"hasErrors()? 'red' :''\" class=\"control-label\" [attr.for]=\"node.question.key\">\n      {{node.question.required ? '*':''}} {{node.question.label}}\n    </label>\n    <div [ngSwitch]=\"node.question.renderingType\">\n      <select class=\"form-control\" *ngSwitchCase=\"'select'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n        <option *ngFor=\"let o of node.question.options\" [ngValue]=\"o.value\">{{o.label}}\n        </option>\n      </select>\n\n      <remote-file-upload *ngSwitchCase=\"'file'\" [dataSource]=\"dataSource\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\n        (fileChanged)=\"upload($event)\">\n      </remote-file-upload>\n      <textarea [placeholder]=\"node.question.placeholder\" [rows]=\"node.question.rows\" class=\"form-control\"\n        *ngSwitchCase=\"'textarea'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n      </textarea>\n      <!--\n      <ng-select *ngSwitchCase=\"'remote-select'\" [items]=\"items$ | async\" bindLabel=\"label\" bindValue=\"value\" placeholder=\"{{node.question.placeholder}}\"\n        [hideSelected]=\"true\" [loading]=\"itemsLoading\"  [typeahead]=\"itemsInput$\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n      </ng-select>\n    -->\n      <remote-select *ngSwitchCase=\"'remote-select'\" [placeholder]=\"node.question.placeholder\" tabindex=\"0\"\n        [dataSource]=\"dataSource\" [componentID]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"></remote-select>\n      <!--  \n      <date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" tabindex=\"0\" [weeks]='node.question.extras.questionOptions.weeksList'\n        (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\"></date-time-picker>\n  -->\n\n      <ngx-date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" [id]=\"node.question.key + 'id'\"\n        [formControlName]=\"node.question.key\" [weeks]='node.question.extras.questionOptions.weeksList' (onDateChange)=\"onDateChanged(node)\"\n        [showWeeks]=\"node.question.showWeeksAdder\"></ngx-date-time-picker>\n      <ng-select *ngSwitchCase=\"'multi-select'\" [style.height]=\"'auto'\"  [style.overflow-x]=\"'hidden'\" tabindex=\"0\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\n          [options]=\"node.question.options\" [multiple]=\"true\">\n      </ng-select>\n      <ng-select *ngSwitchCase=\"'single-select'\" [style.height]='auto'  tabindex=\"0\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\" [options]=\"node.question.options\" [multiple]=\"false\">\n      </ng-select>\n      <input class=\"form-control\" *ngSwitchCase=\"'number'\" [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"'number'\" [id]=\"node.question.key + 'id' \" [step]=\"'any'\" [min]=\"node.question.extras.questionOptions.min\"\n        [max]=\"node.question.extras.questionOptions.max\">\n      <input class=\"form-control\" *ngSwitchDefault [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"node.question.renderingType\" [id]=\"node.question.key + 'id' \">\n\n      <div *ngSwitchCase=\"'radio'\">\n        <div *ngFor=\"let o of node.question.options\">\n          <label class=\"form-control no-border\">\n            <input type=\"radio\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\" [value]=\"o.value\">\n            {{ o.label }}\n          </label>\n        </div>\n      </div>\n\n      <div *ngSwitchCase=\"'checkbox'\">\n        <checkbox [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [options]=\"node.question.options\"></checkbox>\n      </div>\n\n      <div *ngIf=\"node.question.enableHistoricalValue && node.question.historicalDisplay\" style=\"margin-top: 2px;\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-xs-9\">\n              <span class=\"text-warning\">Previous Value: </span>\n              <strong>{{node.question.historicalDisplay?.text}}</strong>\n              <span *ngIf=\"node.question.showHistoricalValueDate\">\n                <span> | </span>\n                <strong class=\"text-primary\">{{node.question.historicalDisplay?._date}} </strong>\n                <span class=\"text-primary\" *ngIf=\"node.question.historicalDisplay && node.question.historicalDisplay._date \"> ({{node.question.historicalDisplay._date | timeAgo}})</span>\n              </span>\n\n            </div>\n            <button type=\"button\" [node]=\"node\" [name]=\"'historyValue'\" class=\"btn btn-primary btn-small col-xs-3\">Use\n              Value\n            </button>\n          </div>\n        </div>\n      </div>\n      <appointments-overview [node]=\"node\"></appointments-overview>\n      <div *ngIf=\"hasErrors() \">\n        <p *ngFor=\"let e of errors() \">\n          <span class=\"text-danger \">{{e}}</span>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"question-info col-md-12 col-lg-12 col-sm-12\" id=\"{{node.question.extras.id}}\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      {{node.question.extras.questionInfo}}\n    </div>\n\n  </div>\n</div>\n<div *ngIf=\"node.question.controlType === 1\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n\n  <!--ARRAY CONTROL-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div class='well' style=\"padding: 2px; \" *ngSwitchCase=\" 'repeating' \">\n      <h4 style=\"margin: 2px; font-weight: bold;\">{{node.question.label}}</h4>\n      <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:2px;\" />\n      <div [ngSwitch]=\"node.question.extras.type\">\n        <div *ngSwitchCase=\"'testOrder'\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \"\n              [parentGroup]=\"child.control \"></form-renderer>\n            <div>{{child.orderNumber}}</div>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br />\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n\n        <div *ngSwitchCase=\"'obsGroup'\" style=\"margin-bottom:20px;\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \"\n              [parentGroup]=\"child.control \"></form-renderer>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br />\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n      </div>\n      <button type=\"button \" class='btn btn-primary' (click)=\"node.createChildNode() \">Add</button>\n    </div>\n  </div>\n\n</div>\n<div *ngIf=\"node.question.controlType === 2\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n  <!--GROUP-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div *ngSwitchCase=\" 'group' \">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \"\n        [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n    <div *ngSwitchCase=\" 'field-set' \" style=\"border: 1px solid #eeeeee; padding: 2px; margin: 2px;\">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \"\n        [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n  </div>\n\n</div>`,\n  styles: ['../../style/app.css', DEFAULT_STYLES],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormRendererComponent implements OnInit, OnDestroy {\n\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n  private lastStatus: string;\n  private lastIsTouched: boolean;\n  private subs: Subscription[] = [];\n\n  // items$: Observable<any[]>;\n  // itemsLoading = false;\n  // itemsInput$ = new Subject<string>();\n\n  constructor(\n    private validationFactory: ValidationFactory,\n    private dataSources: DataSources,\n    private formErrorsService: FormErrorsService,\n    private cd: ChangeDetectorRef,\n    @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n\n    this.subscribeToFormControlChanges();\n  }\n\n  public ngOnDestroy() {\n    // console.log('destroying');\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  public subscribeToFormControlChanges() {\n    if (this.node && this.node.control) {\n      this.subs.push(this.node.control.statusChanges.subscribe((val) => {\n        this.triggerChangeDetection();\n        // console.log('triggering change detection from Status', this.lastStatus, this.node.control.status, this.node.question.label);\n      }));\n\n      this.subs.push(this.node.control.touchedStatusChanges.subscribe((val) => {\n        this.triggerChangeDetection();\n      }));\n    }\n  }\n\n  public triggerChangeDetection() {\n    this.cd.detectChanges();\n  }\n\n\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n      this.node.question.renderingType === 'remote-select') {\n      // let selectQuestion = this.node.form.searchNodeByQuestionId(this.node.question.key)[0];\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      /*\n       let defaltValues = of([]);\n       if (this.dataSource.resolveSelectedValue(selectQuestion.control.value)) {\n         defaltValues = this.dataSource.resolveSelectedValue(selectQuestion.control.value).pipe(\n           catchError(() => of([])), // empty list on error\n         );\n       }\n       this.items$ = concat(\n         defaltValues,\n         this.itemsInput$.pipe(\n           debounceTime(200),\n           distinctUntilChanged(),\n           tap(() => this.itemsLoading = true),\n           switchMap(term => this.dataSource.searchOptions(term).pipe(\n             catchError(() => of([])), // empty list on error\n             tap(() => {\n               this.itemsLoading = false\n             })\n           ))\n         )\n       );\n       */\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      // console.log('Key', this.node.question);\n      // console.log('Data source', this.dataSource);\n    }\n\n  }\n\n  checkSection(node: NodeBase) {\n    if (node.question.renderingType === 'section') {\n      let groupChildrenHidden = false;\n      let allSectionControlsHidden = Object.keys(node.children).every((k) => {\n        let innerNode = node.children[k];\n        if (innerNode instanceof GroupNode) {\n          groupChildrenHidden = Object.keys(innerNode.children).every((i) => innerNode.children[i].control.hidden)\n        }\n        return node.children[k].control.hidden || groupChildrenHidden;\n      });\n      return !allSectionControlsHidden;\n    }\n    return true;\n  }\n\n  public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public tabSelected($event) {\n    this.activeTab = $event;\n    this.setPreviousTab();\n  }\n  public setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n  public hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          if (element !== null && element.focus) {\n            element.focus();\n            element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          }\n        }, 100);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    // console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    // console.log('Event', event);\n    // console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n      e.style.display = 'none';\n    } else {\n      e.style.display = 'block';\n    }\n  }\n\n\n  private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    template: `<div *ngIf=\"showErrors()\" class=\"container\">\n<ul class=\"list-group\">\n  <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let errorNode of errorNodes\" (click)=announceErrorField(errorNode)>\n    <div class=\"error\" *ngIf=\"errorNode.control.valid == false\">\n      <h4>{{errorNode.question.label}}</h4>\n      <span class=\"text-danger\"> {{getControlError(errorNode)}}</span>\n    </div>\n  </li>\n</ul>\n</div>\n`,\n    styles: [`ul{list-style:none}.list-group-item{padding:2px 15px;cursor:pointer}ul li:hover{background-color:#fff}h4{margin-top:7px;margin-bottom:7px}`]\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select'\n          || this._node.question.renderingType === 'single-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    template: `<div\n    #selection\n    [attr.tabindex]=\"disabled ? null : 0\"\n    [ngClass]=\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\"\n    (click)=\"onSelectContainerClick($event)\"\n    (focus)=\"onSelectContainerFocus()\"\n    (keydown)=\"onSelectContainerKeydown($event)\"\n    (window:click)=\"onWindowClick()\"\n    (window:resize)=\"onWindowResize()\">\n\n    <div class=\"single\"\n        *ngIf=\"!multiple\">\n        <div class=\"value\"\n            *ngIf=\"optionList.hasSelected()\">\n            {{optionList.selection[0].label}}\n        </div>\n        <div class=\"placeholder\"\n            *ngIf=\"!optionList.hasSelected()\">\n            {{placeholderView}}\n        </div>\n        <div class=\"clear\"\n            *ngIf=\"allowClear\"\n            (click)=\"onClearSelectionClick($event)\">\n            &#x2715;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"isOpen\">\n            &#x25B2;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"!isOpen\">\n            &#x25BC;\n        </div>\n    </div>\n\n    <div class=\"multiple\"\n        *ngIf=\"multiple\">\n        <div class=\"option\"\n            *ngFor=\"let option of optionList.selection\">\n            <span class=\"deselect-option\"\n                (click)=onDeselectOptionClick(option)>\n                &#x2715;\n            </span>\n            {{option.label}}\n        </div>\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            tabindex=\"-1\"\n            [placeholder]=\"placeholderView\"\n            [ngStyle]=\"{'width.px': filterInputWidth}\"\n            (input)=\"onMultipleFilterInput($event)\"\n            (keydown)=\"onMultipleFilterKeydown($event)\"/>\n    </div>\n\n</div>\n<select-dropdown\n    *ngIf=\"isOpen\"\n    #dropdown\n    [multiple]=\"multiple\"\n    [optionList]=\"optionList\"\n    [notFoundMsg]=\"notFoundMsg\"\n    [highlightColor]=\"highlightColor\"\n    [highlightTextColor]=\"highlightTextColor\"\n    [filterEnabled]=\"filterEnabled\"\n    [width]=\"width\"\n    [top]=\"top\"\n    [left]=\"left\"\n    (close)=\"onDropdownClose($event)\"\n    (optionClicked)=\"onDropdownOptionClicked($event)\"\n    (singleFilterClick)=\"onSingleFilterClick()\"\n    (singleFilterInput)=\"onSingleFilterInput($event)\"\n    (singleFilterKeydown)=\"onSingleFilterKeydown($event)\">\n</select-dropdown>\n`,\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    template: `<div\n    [ngStyle]=\"{'top.px': top, 'left.px': left, 'width.px': width}\">\n\n    <div class=\"filter\"\n        *ngIf=\"!multiple\">\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            (click)=\"onSingleFilterClick($event)\"\n            (input)=\"onSingleFilterInput($event)\"\n            (keydown)=\"onSingleFilterKeydown($event)\">\n    </div>\n\n    <div class=\"options\"\n        #optionsList>\n        <ul\n            (wheel)=\"onOptionsWheel($event)\">\n            <li *ngFor=\"let option of optionList.filtered\"\n                [ngClass]=\"{'highlighted': option.highlighted, 'selected': option.selected, 'disabled': option.disabled}\"\n                [ngStyle]=\"getOptionStyle(option)\"\n                (click)=\"onOptionClick(option)\"\n                (mouseover)=\"onOptionMouseover(option)\">\n                {{option.label}}\n            </li>\n            <li\n                *ngIf=\"!optionList.hasShown()\"\n                class=\"message\">\n                {{notFoundMsg}}\n            </li>\n        </ul>\n    </div>\n</div>\n`,\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    template: `<div>\n    <file-uploader [(ngModel)]=\"innerValue\" (onClear)=\"clearValue()\" (fileChanged)=\"upload($event)\">\n    </file-uploader>\n    <img *ngIf=\"innerValue\" class=\"img-responsive\" [src]=\"innerValue | secure:this.dataSource.fetchFile\" alt=\"\" />\n</div>`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                // console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgxFileUploaderModule } from 'ngx-file-uploader-ampath';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, NgxFileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  template: `<picker-modal (onOverlayClick)=\"cancelDatePicker()\">\n  <div class=\"picker-wrap\">\n    <div class=\"picker-box\">\n      <div class=\"picker-header\">\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-prev\" (click)=\"prev()\"></span>\n        </div>\n        <div class=\"picker-header-content\">\n          <div class=\"content\">\n            <span (click)=\"showMonthSelection()\" class=\"month\">{{calendarDate | moment: \"MMMM\"}}</span>\n            <span class=\"seperator\">|</span>\n            <span (click)=\"showYearSelection()\" class=\"year\">{{calendarDate | moment: \"YYYY\"}}</span>\n          </div>\n        </div>\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-next\" (click)=\"next()\"></span>\n        </div>\n      </div>\n      <div class=\"picker-calendar\">\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n          <span class=\"picker-weekday\" *ngFor=\"let day of dayNames\">{{ day }}</span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n                    <span class=\"picker-day\" (click)=\"selectDay(day)\" [ngClass]=\"{\n                       'out-focus': day.month() != calendarDate.month(),\n                       'today': day.isSame(today),\n                       'selected': day.isSame(selectedDate)\n                      }\" *ngFor=\"let day of calendarDays\">\n                    {{ day | moment: 'D'}}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayMonths\">\n                    <span class=\"picker-month\" *ngFor=\"let month of monthsShort\"\n                          (click)=\"selectMonth(month)\"\n                          [ngClass]=\"{\n                       'selected': month === currentMonth\n                      }\">\n                    {{ month }}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayYears\">\n                    <span class=\"picker-year\" *ngFor=\"let year of displayYearRange\"\n                          (click)=\"selectYear(year)\"\n                          [ngClass]=\"{\n                       'selected': year === currentYear\n                      }\">\n                    {{ year }}\n                </span>\n        </div>\n      </div>\n      <div class=\"picker-footer\">\n        <div class=\"picker-action action-today\" (click)=\"selectToday()\"><span class=\"text\">Today</span></div>\n        <div class=\"picker-action action-clear\" (click)=\"clearPickDate()\"><span class=\"text\">Clear</span></div>\n        <div class=\"picker-action action-close\" (click)=\"cancelDatePicker()\"><span class=\"text\">Close</span></div>\n      </div>\n    </div>\n  </div>\n</picker-modal>\n`,\n  styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:666px}.picker-box{font-family:'Open Sans';min-width:400px!important;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;display:flex;height:2.5rem;width:100%}.picker-header-nav{position:relative;cursor:pointer;width:calc(100% / 8)}.picker-header-nav>*{position:absolute;top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker-header-nav .nav-next::before,.picker-header-nav .nav-prev::before{content:\" \";border-top:.5em solid transparent;border-bottom:.5em solid transparent;border-right:.75em solid #000;width:0;height:0;display:block;margin:0 auto}.picker-header-nav .nav-next::before{border-right:0;border-left:.75em solid #000}.picker-header-content{width:calc(100% * 6 / 8);text-align:center}.picker-header-content .month{font-size:1.778rem;line-height:2.5rem;margin-right:.5rem;font-weight:700}.picker-header-content .year{font-style:italic;color:#999}.picker-calendar{width:100%}.picker-calendar .picker-calendar-row{display:flex;flex-wrap:wrap;width:100%;margin-bottom:.625rem}.picker-calendar .picker-weekday{font-weight:700;text-align:left;color:#999;width:calc(100% / 7)}.picker-calendar .picker-day,.picker-calendar .picker-month,.picker-calendar .picker-year{font-size:1.333rem;line-height:2.5rem;position:relative;height:2.5rem;text-align:center;cursor:pointer;width:calc(100% / 7)}.picker-calendar .picker-day:hover,.picker-calendar .picker-month:hover,.picker-calendar .picker-year:hover{background:#b1dcfb}.picker-calendar .out-focus{color:#ddd}.picker-calendar .out-focus:hover{color:#000}.picker-calendar .selected{background:#0089ec;color:#fff}.picker-calendar .selected:hover{background:#0089ec}.picker-calendar .today::before{content:\" \";position:absolute;top:2px;right:2px;width:0;height:0;border-top:.5em solid #0059bc;border-left:.5em solid transparent}.picker-footer{cursor:pointer}.picker-footer .picker-action{text-align:center;width:calc(100% / 3)}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-today::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-today::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    template: `<picker-modal (onOverlayClick)=\"cancelTimePicker()\">\n    <div class=\"picker-wrap\">\n        <div class=\"picker-box\">\n            <div class=\"picker-header\">Time Picker</div>\n            <div class=\"picker-table\">\n                <ul class=\"picker-table-time\">\n                    <li class=\"picker-table-number hour\">\n                        <span class=\"arrow up\" (click)=\"increaseHour()\"></span>\n                        {{time | moment: hourFormat}}\n                        <span class=\"arrow down\" (click)=\"decreaseHour()\"></span>\n                    </li>\n                    <li class=\"picker-table-separator\">:</li>\n                    <li class=\"picker-table-number minute\">\n                        <span class=\"arrow up\" (click)=\"increaseMinute()\"></span>\n                        {{time | moment: 'mm'}}\n                        <span class=\"arrow down\" (click)=\"decreaseMinute()\"></span>\n                    </li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-separator\">:</li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-number second\">\n                        <span class=\"arrow up\" (click)=\"increaseSecond()\"></span>\n                        {{time | moment: 'ss'}}\n                        <span class=\"arrow down\" (click)=\"decreaseSecond()\"></span>\n                    </li>\n                    <li *ngIf=\"use12Hour\" class=\"picker-table-meridiem meridiem\">\n                        {{time | moment: 'A'}}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"picker-footer\">\n                <div class=\"picker-action action-now\" (click)=\"selectNow()\"><span class=\"text\">Now</span></div>\n                <div class=\"picker-action action-confirm\" (click)=\"selectTime()\"><span class=\"text\">Confirm</span></div>\n                <div class=\"picker-action action-clear\" (click)=\"clearTime()\"><span class=\"text\">Clear</span></div>\n                <div class=\"picker-action action-close\" (click)=\"cancelTimePicker()\"><span class=\"text\">Close</span></div>\n            </div>\n        </div>\n    </div>\n</picker-modal>\n`,\n    styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:40rem;font-family:'Open Sans'}.picker-box{width:100%;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;height:2.5rem;width:100%}.picker-header{text-align:center}.picker-table{width:100%;margin:2.5rem 0}.picker-table-time{font-size:2.37rem;line-height:2.5rem;list-style:none;margin:0;padding:0;display:flex;justify-content:center;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-table-meridiem,.picker-table-number,.picker-table-separator{text-align:center}.picker-table-meridiem,.picker-table-number{position:relative;width:20%}.arrow{position:absolute;left:50%;border:solid #777;border-width:0 .2rem .2rem 0;display:inline-block;padding:.25rem;cursor:pointer}.arrow.up{top:-1rem;-webkit-transform:translateX(-50%) rotate(-135deg);transform:translateX(-50%) rotate(-135deg)}.arrow.down{bottom:-1rem;-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg)}.arrow:hover{border-color:#1975d2}.picker-table-separator{width:calc(20% / 3)}.picker-footer{display:flex;justify-content:center;width:100%;cursor:pointer}.picker-footer .picker-action{width:25%;text-align:center}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-confirm::before,.picker-footer .action-now::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-now::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-confirm::before{width:1rem;height:1rem;border-radius:100%;background-color:#00b5ad}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    template: `<section class=\"x-modal\">\n    <section class=\"modal-overlay\" (click)=\"closeModal()\"></section>\n    <section class=\"modal-main\" id=\"section-modal-main\">\n        <ng-content></ng-content>\n    </section>\n</section>\n`,\n    styles: [`:host{z-index:9999999999}*,::after,::before{box-sizing:border-box}.modal-main{position:absolute;left:19.6%;right:auto;top:auto;z-index:111;background-color:#fff;border:1px solid #d7dad7;border-radius:6px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);box-shadow:0 5px 15px rgba(0,0,0,.3)}`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    template: `<div class='row'>\n    <div *ngIf=\"!showTime\" class='col-xs-12 col-md-12'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-8 col-md-8'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-4 col-md-4'>\n        <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\n        />\n    </div>\n</div>\n<date-picker *ngIf=\"showDatePicker\" [initDate]=\"value\" (onSelectDate)=\"setDate($event)\" (onDatePickerCancel)=\"toggleDatePicker($event)\"></date-picker>\n\n<time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"setTime($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>\n`,\n    styles: [`input[readonly]{background-color:#fff}.up{bottom:100%!important;top:auto!important}.glyphicon{top:1px}`],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","import { Moment } from 'moment/moment';\n\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    template: `<div>\n  <div class=\"row\">\n    <div [class]=\"getDatePickerCssClass()\">\n      <div class=\"input-group\">\n        <input matInput \n              [matDatepicker]=\"picker\" \n              class=\"form-control\" \n              [value]=\"value\" \n              placeholder=\"Choose a date\" \n              (dateChange)=\"onDateSelect($event)\"\n              (click)=\"picker.open()\"\n              readonly\n        >\n        <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\" class=\"input-group-btn\"></mat-datepicker-toggle>\n      </div>\n    </div>\n    <div [class]=\"getWeekPickerCssClass()\" *ngIf=\"showWeeks\">\n      <mat-select placeholder=\"Select Weeks\"  class=\"form-control\" name=\"weeks\" (selectionChange) =\"weekSelect($event)\">\n        <mat-option *ngFor=\"let count of weeks\" [value]=\"count\">\n          {{count}} Weeks\n        </mat-option>\n      </mat-select>\n    </div>\n    <div [class]=\"getTimePickerCssClass()\" *ngIf=\"showTime\">\n          <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\n          />\n          <time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"onTimeSelect($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>\n    </div>\n  </div>\n</div>\n\n`,\n    styles: [`#time-section{display:inline-block}#ngx-atp-time-picker,#ngx-mat-form-field{width:100%}.up{bottom:100%!important;top:auto!important}.time-btn{margin-top:-20px}`],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format();\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    public value;\n    public showTimePicker = false;\n    @Input() weeks: number[] = [0, 2, 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n\n    public writeValue(value) {\n        this.value = value;\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n\n    }\n\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public onDateSelect($event) {\n\n        const setDate = moment($event.value);\n        const setTime = this.selectedTime;\n        const dateString = this.setDateTime(setDate, setTime);\n\n        const selectedDate = $event.value;\n        this.value = dateString;\n\n    }\n\n    public toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n\n\n    public setCurrentTime() {\n\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm:ss');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        const dateToUse = moment().format();\n        const nextWeekDate = moment(dateToUse).add($event.value, 'weeks');\n        const nextWeekTime = dateToUse;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public selectionChange($event) {\n        // console.log('Week selected', $event);\n    }\n\n\n    public getWeekPickerCssClass() {\n        if (this.showTime) {\n            return 'col-sm-2 form-group';\n        }\n        return 'col-sm-3 form-group';\n    }\n\n    public getDatePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n\n        if (this.showTime === true) {\n            return 'col-sm-8 form-group';\n        }\n        return 'col-sm-12 form-group';\n    }\n\n    public getTimePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n        return 'col-sm-4 form-group';\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        let newTime;\n        if (this.showTime) {\n            newTime = moment(setTime).format('HH:mm:ss');\n        } else {\n            newTime = '00:00:00';\n        }\n        const newDateTime = moment(newDate + '' + newTime, 'DD-MM-YYYY HH:mm:ss');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = dateTimeString;\n        this.value = dateTimeString;\n        this.onChange(this.value);\n\n        return dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\n// import { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        DateTimePickerModule,\n        // AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `<ng-select\n                   (searchInputText)=\"getChangingText($event)\"\n                    (ngModelChange)=\"onValueChange($event)\"\n                    [options]=\"question_options\"\n                    [multiple]=\"multiple\" >\n            </ng-select>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        // console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        // console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select'  || 'single-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any, additionalScopevalues: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    if (additionalScopevalues) {\n      for (const o in additionalScopevalues) {\n        if (additionalScopevalues[o]) {\n          deps[o] = additionalScopevalues[o];\n        }\n      }\n    }\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n  public evaluatePrecondition(expr: string, dataSources: any, historicalValue: any): any {\n    const additionalScope = {\n      histValue: historicalValue\n    };\n\n    return this.evaluate(expr, dataSources, additionalScope);\n  }\n\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'single-select':\n        return this.toSelectQuestion(schema);\n      case 'multi-select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'file':\n        return this.toFileUploadQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found: ' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n      schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources, undefined);\n      question.historicalDataValue = origValue;\n      // console.info('historical value', origValue);\n      // console.info('historical data question :::', question);\n      // console.info('schema data question :::', schemaQuestion);\n\n      if (schemaQuestion.historicalPrepopulateCondition && origValue) {\n        const toPopulate = this.historicalHelperService.evaluatePrecondition(schemaQuestion.historicalPrepopulateCondition,\n          this.dataSources, origValue);\n\n        if (toPopulate) {\n          question.defaultValue = origValue.value;\n        }\n        return; // don't try to evaluate the other option\n      }\n\n      if (schemaQuestion.historicalPrepopulate && origValue) {\n        // sample schema options for this branch\n        // \"historicalPrepopulate\":true,\n        // \"allowedHistoricalValueAgeInDays\": 40000,\n        const valDate = moment(origValue.valueDate);\n        const differenceInDays = moment().diff(valDate, 'days');\n        if (Number.isInteger(schemaQuestion.allowedHistoricalValueAgeInDays)) {\n          if (differenceInDays <= schemaQuestion.allowedHistoricalValueAgeInDays) {\n            question.defaultValue = origValue.value;\n          }\n        } else {\n          question.defaultValue = origValue.value;\n        }\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox' ||\n                node.question.extras.questionOptions.rendering === 'multi-select') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n        // console.log('valuePayload', valuePayload);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        } else {\n            // transform value to memoent value to avoid error\n            const formattedVal = moment(datetime).format();\n            const val = formattedVal.substring(0, 19).replace('T', ' ');\n            return this.isEmpty(val) ? undefined : val;\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox' ||\n            node.question.extras.questionOptions.rendering !== 'multi-select') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox' ||\n            obs.question.extras.questionOptions.rendering === 'multi-select') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page, label: o.children[key].question.label });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section, node: o.children[key], label: o.children[key].question.label });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        // console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            // console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        // console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            //Very weird work around for an issue with setting the value\n                            node.control.setValue(firstProvider.uuid);\n                            setTimeout(()=>{\n                                node.control.setValue(firstProvider.uuid);\n                            });\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    template: `<div>\n    <ng-select [id]=\"componentID\" [noFilter]=\"0\" (selected)=\"selected($event)\" (deselected)=\"removed($event)\" [options]=\"items\" [allowClear]=\"true\"\n        [placeholder]=\"placeholder\" [notFoundMsg]=\"notFoundMsg\" (typed)=\"typed($event)\" tabindex=\"0\">\n    </ng-select>\n    <div *ngIf=\"loading\">\n        resolving....\n    </div>\n</div>\n`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2, private cd: ChangeDetectorRef) { }\n\n    ngOnInit() {\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n                this.cd.detectChanges();\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n                this.cd.detectChanges();\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        // console.log('search::', value);\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading...';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    // console.log('resulated', result);\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                    this.cd.detectChanges();\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                    this.cd.detectChanges();\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        console.log('calling restore value');\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                    console.log('found item');\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        // console.log('write value method', value);\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.cd.detectChanges();\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    // console.log('write value method results', value);\n                    this.cd.detectChanges();\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                        this.cd.detectChanges();\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                    this.cd.detectChanges();\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        // console.log('Changed');\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        // console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        // console.log('selecting value');\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  template: `<div *ngIf=\"showAppointments\" class=\"appointments\">\n  <p *ngIf=\"loadingAppointments\">\n    <span *ngIf=\"!appointmentsLoaded && errorLoadingAppointments\">Error checking appointments</span>\n    <span *ngIf=\"loadingAppointments\"><span\n      class=\"fa fa-spinner fa-spin\"></span>Checking appointments...</span>\n  </p>\n  <div *ngIf=\"appointmentsLoaded && !errorLoadingAppointments\">\n    <table *ngIf=\"appointments.length>0\" class=\"table table-stripped table-bordered\">\n      <thead>\n      <tr>\n        <th *ngFor=\"let appointment of appointments\" [ngClass]=\"{'active': appointment.date === today}\">\n          <span>{{appointment.date}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <td *ngFor=\"let appointment of appointments\"\n            [ngClass]=\"{'active': appointment.date === today}\">\n          <span><strong><em>{{appointment.count}}</em></strong></span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n`,\n  styles: [`.appointments{margin-top:12px;font-size:12px;color:#999}.appointments p{padding-top:12px}.appointments th{border-bottom:0!important;color:#333}.appointments td span,.appointments th span{display:block}.appointments td.active,.appointments th.active{background-color:#3c8dbc;color:#fff!important;padding:0}.appointments td.active span,.appointments th.active span{padding:4px}.appointments span.fa{display:inline-block;margin-right:7px}`]\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        // console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const programTypes = ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838'];\n            const programTypeParams = programTypes.join();\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programType: programTypeParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\n\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\nimport { EncounterViewerService } from '../encounter-viewer.service';\n\n@Component({\n    selector: 'encounter-viewer',\n    template: `<div class=\"viewer\">\n\n  <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n    <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n      <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\n        <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n          <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n          <div class=\"panel-body\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n    <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\n      [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n  </div>\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\n    class=\"section\">\n    <div class=\"panel panel-primary\">\n      <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n    </div>\n    <div *ngFor=\"let question of rootNode.question.questions\">\n      <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n    </div>\n  </div>\n\n  <!--Leaf Controls-->\n  <div style=\"margin-left:10px;\">\n  <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\n    <div *ngIf=\"rootNode.control.value\">\n    <div class=\"question-answer\">\n      <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\n          {{ rootNode.question.label }}\n      </label>\n      <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n      <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\n          <div *ngSwitchCase=\" 'file' \">\n            <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\n          </div>\n          <div *ngSwitchCase=\"'remote-select'\">\n            <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\n          </div>\n          <div *ngSwitchDefault style=\"display:inline-block\">\n              <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\n            </div>\n      </div>\n     \n    </div>\n    </div>\n  </form>\n</div>\n\n  <!--Array Controls-->\n  <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\n    <div [ngSwitch]=\"rootNode.question.renderingType\">\n      <div *ngSwitchCase=\" 'repeating' \">\n        <div [ngSwitch]=\"rootNode.question.extras.type\">\n          <div *ngSwitchCase=\"'testOrder'\">\n            <label>{{rootNode.question.label}}:</label>\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n          \n          <div *ngSwitchCase=\"'obsGroup'\">\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.controlType === 2\">\n\n    <!--GROUP-->\n    <div [ngSwitch]=\"rootNode.question.renderingType \">\n      <div *ngSwitchCase=\" 'group' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n      <div *ngSwitchCase=\" 'field-set' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n    </div>\n  </div>\n\n\n\n  </div>\n`,\n    styles: [`.page-label{font-size:20px;font-weight:700}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none!important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px!important}.line-breaker{white-space:pre-line}hr{margin:10px}`],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         // console.log(this.getQuestionNodes(this.traverse(this.rootNode)));\n    }\n\n    constructor(\n        private encounterViewerService: EncounterViewerService,\n        private dataSources: DataSources) {}\n    \n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            arrays.push(page.page);\n        }\n        return merged.concat.apply([], arrays);\n    }\n    public ngOnInit() {\n        if(this.rootNode){\n            \n        }\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }else{\n                // console.log('Console.log',o);\n            }\n\n        }\n        return questions;\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Form } from '../form-entry/form-factory/form';\nimport { ObsValueAdapter } from '../form-entry/value-adapters/obs.adapter';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { DataSources } from '../form-entry/data-sources/data-sources';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\nimport { combineLatest, BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs/Observable';\n\nimport * as moment_ from 'moment';\nimport * as _ from 'lodash';\nimport * as pdfMake from 'pdfmake/build/pdfmake.js';\nimport 'pdfmake/build/vfs_fonts.js';\nimport * as pdfFonts from 'pdfmake/build/vfs_fonts';\n\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EncounterPdfViewerService {\n  private remoteDataSource: DataSource;\n  public error: boolean;\n  public errorMessage: string;\n  public showLoader: boolean;\n  public subscribedAnswers: any = {\n    questions: {\n      stack: []\n    },\n    answers: []\n  };\n\n  constructor(\n    private encounterViewerService: EncounterViewerService,\n    private obsValueAdapter: ObsValueAdapter,\n    private dataSources: DataSources\n  ) {}\n\n  getPages(pages: any, form: Form, remoteSelectsOnly?: boolean, remoteAns?: any): any[] {\n    const content = [];\n    let remoteQuestions = [];\n\n    for (const page of pages) {\n      if (remoteSelectsOnly) {\n        remoteQuestions = remoteQuestions.concat(this.getSections(page.page, form, false, remoteAns));\n      } else {\n        for (const question of form.rootNode.question.questions) {\n          if (page.label === form.rootNode.children[question.key].question.label &&\n            this.encounterViewerService.questionsAnswered(form.rootNode.children[question.key])) {\n            content.push({\n              style: 'tableExample',\n              table: {\n                widths: ['*'],\n                headerRows: 1,\n                keepWithHeaderRows: 1,\n                body: [\n                  [{ text: page.label, style: 'tableHeader' }],\n                  [\n                    {\n                      style: 'tableExample',\n                      table: {\n                        widths: ['*'],\n                        body: this.getSections(page.page, form, true, remoteAns)\n                      },\n                      layout: 'noBorders',\n                      margin: [5, 0, 0, 0]\n                    }\n                  ]\n                ]\n              },\n              layout: {\n                hLineWidth: function(i, node) {\n                  return (i === 0 || i === node.table.body.length) ? 0.5 : 0.5;\n                },\n                vLineWidth: function(i, node) {\n                  return (i === 0 || i === node.table.widths.length) ? 0.5 : 0.5;\n                },\n                hLineColor: function(i, node) {\n                  return (i === 0 || i === node.table.body.length) ? '#ddd' : '#ddd';\n                },\n                vLineColor: function(i, node) {\n                  return (i === 0 || i === node.table.body.length) ? '#ddd' : '#ddd';\n                }\n              }\n            });\n          }\n        }\n      }\n    }\n    return remoteSelectsOnly ? remoteQuestions : content;\n  }\n\n  getSections(sections: any, form: Form, resolve: any, remoteAns: any): any[] {\n    const content = [];\n    const answeredSections = [];\n    let questions: Array<Observable<any>> = [];\n\n    sections.map(s => {\n      if (this.encounterViewerService.questionsAnswered(s.node)) {\n        answeredSections.push(s);\n      }\n    });\n\n    for (const section of answeredSections) {\n      questions = questions.concat(this.getRemoteSectionData(section.section));\n    }\n\n    if (resolve && remoteAns) {\n      for (const section of answeredSections) {\n        content.push([\n          {\n            table: {\n              widths: ['*'],\n              body: [\n                [{ text: section.label, style: 'tableSubheader' }],\n                [ this.getSectionData(section.section, remoteAns, form) ]\n              ]\n            },\n            layout: 'noBorders'\n          }\n        ]);\n      }\n      return content;\n    } else {\n      return questions;\n    }\n  }\n\n  appendResolvedAnswer(resolvedAnswer: any, questions: any, node?: any) {\n    if (resolvedAnswer) {\n      questions.stack.push({\n        text: [\n          `${(node) ? node.question.label : 'Question label' }${\n            (node) ? (node.question.label.indexOf(':') > 1 ? '' : ':') : ''\n          } `,\n          { text: `${resolvedAnswer}`, bold: true }\n        ], style: 'answers'\n      });\n    }\n  }\n\n  // get remote selects only\n  getRemoteSectionData(section: any): any {\n    const questions: Array<Observable<any>> = [];\n    this.subscribedAnswers.questions.stack = [];\n\n    for (const node of section) {\n      if (node.question.renderingType === 'remote-select') {\n        this.remoteDataSource = this.dataSources.dataSources[node.question.dataSource];\n        if (node.control.value !== '') {\n          if (this.remoteDataSource) {\n            questions.push(this.remoteDataSource.resolveSelectedValue(node.control.value));\n          }\n        }\n      }\n    }\n    return questions;\n  }\n\n  // merge remote selects\n  getSectionData(section: any, remoteAns: any[], form: Form): any {\n    const questions = {\n      stack: []\n    };\n\n    let resolvedAnswer = '';\n\n    for (const node of section) {\n      switch (node.question.renderingType) {\n        case 'group':\n          if (node.groupMembers) {\n            questions.stack.push(this.getSectionData(node.groupMembers, remoteAns, form));\n          }\n          break;\n\n        case 'field-set':\n          if (node.children) {\n            const groupMembers = [];\n            const result = Object.keys(node.children).map((key) => node.children[key]);\n\n            if (result) {\n              groupMembers.push(result);\n              questions.stack.push(this.getSectionData(groupMembers[0], remoteAns, form));\n            }\n          }\n          break;\n\n        case 'repeating':\n          if (node.groupMembers) {\n            questions.stack.push(this.getSectionData(node.groupMembers, remoteAns, form));\n          }\n          break;\n\n        case 'remote-select':\n          this.remoteDataSource = this.dataSources.dataSources[node.question.dataSource];\n          for (const ans of remoteAns) {\n            if (ans.value === node.control.value) {\n              this.appendResolvedAnswer(ans.label, questions, node);\n            }\n          }\n          break;\n\n        default:\n          const answer = node.control.value;\n          resolvedAnswer = this.resolveValue(answer, form);\n          this.appendResolvedAnswer(resolvedAnswer, questions, node);\n      }\n    }\n\n    return questions;\n  }\n\n  resolveValue(answer: any, form: Form, arrayElement?: boolean): any {\n    if (answer !== '') {\n      if (this.isUuid(answer)) {\n        const val = this.encounterViewerService.resolveSelectedValueFromSchema(answer, form.schema);\n        if (!arrayElement) {\n          if (val) {\n            return val.toUpperCase();\n          } else {\n            return answer;\n          }\n        } else {\n          return val;\n        }\n      } else if (_.isArray(answer)) {\n        const arr = [];\n        _.forEach(answer, elem => {\n          arr.push(this.resolveValue(elem, form, true));\n        });\n        return arr.toString();\n      } else if (this.isDate(answer)) {\n        if (!arrayElement) {\n          return this.encounterViewerService.convertTime(answer);\n        } else {\n          return this.encounterViewerService.convertTime(answer);\n        }\n      } else if (typeof answer === 'object') {\n        const values = [];\n        const result = Object.keys(answer).map((key) => [key, answer[key]]);\n\n        values.push(result);\n        return values;\n      } else {\n       return answer;\n      }\n    }\n  }\n\n  generatePdfDefinition(form: Form): any {\n    const docDefinition$ = new BehaviorSubject<any>({});\n    const remoteSelects = this.getPages((this.obsValueAdapter.traverse(form.rootNode)), form, true);\n\n    combineLatest(remoteSelects).subscribe(remoteAns => {\n      if (remoteAns) {\n        const docDefinition = {\n          content: this.getPages(this.obsValueAdapter.traverse(form.rootNode), form, false, remoteAns),\n          styles: {\n            answers: {\n              fontSize: 8\n            },\n            confidential: {\n              color: 'red',\n              fontSize: 8,\n              bold: true,\n              margin: [60, 0, 0, 0]\n            },\n            header: {\n              fontSize: 9,\n              bold: true,\n              margin: [5, 5, 5, 5]\n            },\n            tableExample: {\n              fontSize: 10,\n              margin: [5, 0, 0, 5]\n            },\n            tableHeader: {\n              fillColor: '#f5f5f5',\n              width: ['100%'],\n              borderColor: '#333',\n              fontSize: 9,\n              bold: true,\n              margin: [5, 0, 5, 0]\n            },\n            tableSubheader: {\n              fillColor: '#337ab7',\n              width: ['100%'],\n              fontSize: 9,\n              color: 'white',\n              margin: [5, 0, 5, 0]\n            },\n            banner: {\n              fillColor: '#d9edf7',\n              fontSize: 9,\n              bold: true,\n              margin: [45, 20, 20, 20]\n            },\n            bannerLabel: {\n              color: '#a9a9a9'\n            },\n            bannerItem: {\n              margin: [20, 0, 10, 0]\n            },\n            timestamp: {\n              alignment: 'center',\n              bold: true\n            },\n            pageNumber: {\n              alignment: 'right',\n              margin: [0, 0, 5, 5]\n            }\n          },\n          defaultStyle: {\n            fontSize: 7\n          }\n        };\n        docDefinition$.next(docDefinition);\n      }\n    });\n\n    return docDefinition$;\n  }\n\n  displayPdf(form) {\n    const pdf = pdfMake;\n    let patient;\n    pdf.vfs = pdfFonts.pdfMake.vfs;\n    \n    if (form.dataSourcesContainer.dataSources._dataSources) {\n      patient = form.dataSourcesContainer.dataSources._dataSources['patientInfo'];\n    }\n\n    this.generatePdfDefinition(form).subscribe(docDefinition => {\n      if (!(_.isEmpty(docDefinition))) {\n        if (typeof patient !== 'undefined') {\n          const banner = [];\n\n          if (patient.name) {\n            banner.push({\n              text: [\n                { text: 'Name: ', style: 'bannerLabel' },\n                { text: `${this.titleize(patient.name)}` }\n              ],\n              style: 'bannerItem'\n            });\n          }\n  \n          if (patient.nid) {\n            banner.push({\n              text: [\n                { text: 'NID: ', style: 'bannerLabel' },\n                { text: `${patient.nid}` }\n              ],\n              style: 'bannerItem'\n            });\n          }\n  \n          if (patient.mui) {\n            banner.push({\n              text: [\n                { text: 'MUI: ', style: 'bannerLabel' },\n                { text: `${patient.mui}` }\n              ],\n              style: 'bannerItem'\n            });\n          }\n  \n          if (patient.birthdate) {\n            banner.push({\n            text: [\n              { text: 'YOB: ', style: 'bannerLabel' },\n              { text: `${moment(patient.birthdate).format('l')} (${patient.age} yo)` }\n            ],\n            style: 'bannerItem'\n            });\n          }\n  \n          docDefinition.header = {\n            style: 'banner',\n            table: {\n              body: [ banner ]\n            },\n            layout: 'noBorders'\n          };\n        }\n\n        docDefinition.footer = (currentPage, pageCount) => {\n          return {\n            columns: [\n              {\n                widths: ['*', '*', '*'],\n                stack: [\n                  {\n                    text:\n                      // tslint:disable-next-line:max-line-length\n                      `Note: Confidentiality is one of the core duties of all medical practitioners. Patients' personal health information should be kept private.`,\n                    style: 'confidential'\n                  }, {\n                    text: currentPage.toString() + ' of ' + pageCount,\n                    style: 'pageNumber'\n                  }, {\n                    text: `Generated on ` + new Date(),\n                    style: 'timestamp'\n                  }\n                ]\n              }\n            ]\n          };\n        };\n\n        const win = window.open('', '_blank');\n        pdf.createPdf(docDefinition).open({}, win);\n      }\n    }, (error) => {\n      // console.log('Error: ', error);\n    });\n  }\n\n  isDate(val: any) {\n    return moment(val, moment.ISO_8601, true).isValid();\n  }\n\n  isUuid(value: string) {\n    return (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1);\n  }\n\n  titleize(str) {\n    return str.replace(/\\w\\S*/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n\nimport { EncounterPdfViewerService } from '../encounter-pdf-viewer.service';\n\n@Component({\n    selector: 'encounter-renderer',\n    template: `<a type=\"button\" style=\"display: block; font-size: 28px; cursor: pointer\" class=\"text-right\" (click)=\"displayPdf()\">\n  <span class=\"glyphicon text-primary glyphicon-print\"></span>\n</a>\n<encounter-viewer class=\"card\" [form]=\"$form\" [encounter]=\"$enc\"></encounter-viewer>`,\n    styles: [`.card{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}`]\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(\n        private encAdapter: EncounterAdapter,\n        private encounterPdfViewerService: EncounterPdfViewerService) { }\n\n    ngOnInit() {\n    }\n\n    displayPdf() {\n        this.encounterPdfViewerService.displayPdf(this.$form);\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styles: [`input{border:none;box-shadow:none;color:#000;background:#fff!important;padding-top:23px;display:block;position:relative}`],\n    template: `<div>\n    {{innerValue}}\n</div>`,\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { EncounterPdfViewerService } from './encounter-pdf-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n        EncounterPdfViewerService\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  template: `<div *ngFor=\"let option of options; let i = index;\">\n    <label class=\"form-control no-border\">\n        <input type=\"checkbox\" id=\"i + 'id'\" (change)=\"selectOpt(option, $event)\" value=\"option.value\">\n        {{ option.label }}\n    </label>\n</div>`,\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\n// import { NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\nimport { SelectModule } from '../components/select/select.module';\n// import { NgSelectModule } from '@ng-select/ng-select';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\nimport { SharedModule } from '../shared.module';\nimport { TimeAgoPipe } from 'time-ago-pipe';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        // NgSelectModule,\n        SelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        // NoopAnimationsModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule,\n        SharedModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent,\n        TimeAgoPipe\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","export enum RenderingType {\n    Form,\n    Page,\n    Section,\n    Select,\n    DropDown\n}\n"]}