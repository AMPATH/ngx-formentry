{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://@ampath-kenya/ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://@ampath-kenya/ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://@ampath-kenya/ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://@ampath-kenya/ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://@ampath-kenya/ngx-openmrs-formentry/abstract-controls-extension/afe-control-type.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/select/select.component.style.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/select/option.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/select/diacritics.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/select/option-list.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/select/select.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/select/select.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://@ampath-kenya/ngx-openmrs-formentry/shared.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/encounter-viewer/encounter-pdf-viewer.service.ts","ng://@ampath-kenya/ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://@ampath-kenya/ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/pair.model.ts","ng://@ampath-kenya/ngx-openmrs-formentry/form-entry/question-models/rendering-type.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__exportStar","m","exports","__values","o","__read","ar","error","__spread","concat","__spreadArrays","il","k","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","default","__importDefault","DebugModeService","cookieKey","debugEnabled","Injectable","FormErrorsService","announceErrorFieldSource","Subject","announceErrorField$","asObservable","announceErrorField","control","tab","ControlRelation","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","_this","valueChanges","subscribe","ControlRelations","relationFor","_otherRelations","_relationFor","_relations","addRelatedControls","AbstractControl","relations","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","validations","type","JsExpressionValidationModel","failsWhenExpression","ValidationModel","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","hiderHelper","disablerHelper","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","AfeControlType","QuestionBase","options","defaultValue","originalValue","extras","renderingType","historicalDataValue","setHistoricalValue","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","toFixed","parseFloat","calcBMIForAgeZscore","bmiForAgeRef","bmi","formattedSDValue","refSectionObject","_.first","refObjectValues","map","x","refObjectKeys","minimumValue","minReferencePoint_1","_.forEach","lastReferenceValue_1","_.last","_.findIndex","replace","includes","calcWeightForHeightZscore","weightForHeightRef","refSection","_.filter","refObject","minReferencePoint_2","lastReferenceValue_2","calcHeightForAgeZscore","heightForAgeRef","minReferencePoint_3","lastReferenceValue_3","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JSExpressionValidatorsEnabled","JsExpressionValidator","helperFunctions","js_expression","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","MAX_LENGTH_MSG","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","ValidationFactory","getValidators","list","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","minlength","requiredLength","maxlength","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","childComponents","isCollapsed","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","valueProcessingInfo","lastFormTab","scrollToControl","isExpanded","parentComponent","addChildComponent","dataSourceOptions","checkSection","groupChildrenHidden_1","every","innerNode","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","scrollIntoView","behavior","block","onDateChanged","upload","event","toggleInformation","infoId","style","display","Inject","args","DOCUMENT","tslib_1.__decorate","Input","Component","selector","template","tslib_1.__param","Form","schema","questionFactory","existingOrders","_showErrors","_dataSourcesContainer","found","aChildNode","questionId","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","markInvalidControls","invalidControlNodes","disabled","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","ErrorRendererComponent","showErrors","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","_nodeChange","EventEmitter","name","_node","compareString","stopPropagation","emit","_.isUndefined","text","_date","valueDate","Output","HostListener","Directive","STYLE","Option","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_highlightedOption","_options","highlight","equalValues","v0","v1","slice","sort","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_b","tslib_1.__values","_c","SelectDropdownComponent","close","optionClicked","singleFilterClick","singleFilterInput","singleFilterKeydown","disabledColor","disabledTextColor","optionsReset","ngOnChanges","changes","ngAfterViewInit","moveHighlightedIntoView","filterEnabled","filterInput","nativeElement","onSingleFilterClick","onSingleFilterInput","onSingleFilterKeydown","onOptionsWheel","handleOptionsWheel","onOptionMouseover","optionList","onOptionClick","getOptionStyle","background-color","highlightColor","color","highlightTextColor","clearFilterInput","optionsList","listHeight","offsetHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","preventDefault","ViewChild","static","encapsulation","ViewEncapsulation","None","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","KEYS","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","allowClear","noFilter","notFoundMsg","placeholder","opened","closed","deselected","typed","_value","filterInputWidth","hasFocus","isBelow","isDisabled","isOpen","placeholderView","clearClicked","selectContainerClicked","onChange","onTouched","updateFilterWidth","updateOptionsList","isFirstChange","numOptions","minNumOptions","currentValue","onWindowClick","closeDropdown","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","handleSingleFilterKeydown","onMultipleFilterInput","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","clear","valueChanged","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","firstTime","updatePosition","dropdown","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","altKey","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","providers","SelectModule","NgModule","declarations","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","_latestValue","_latestReturnedValue","_subscription","_obj","_result","BehaviorSubject","_internalSubscription","ngOnDestroy","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","_this_1","previousUrl","sanitized","bypassSecurityTrustUrl","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","ChangeDetectorRef","DomSanitizer","Pipe","pure","SharedModule","FileUploadComponent","renderer","uploading","fileUuid","pdfUploaded","formEntryMode","propagateChange","_dataSource","checkFileType","onFileChange","fileList","fileList_1","fileList_1_1","file","data","fileUpload","image","clearValue","pdfUrl","getPdfUrl","fetchFile","changingThisBreaksApplicationSecurity","search","Renderer2","FileUploadComponent_1","RemoteFileUploadModule","WebcamModule","NgxFileUploaderModule","DatePickerComponent","locale","viewFormat","returnObject","onDatePickerCancel","onSelectDate","onDisplayMonths","onDisplayYears","displayYearsIndex","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearRange","generateCalendar","prev","subtract","showMonthSelection","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","generateYears","years","_.chunk","currentMonth","dayNames","weekdaysShort","initDate","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","showSecond","use12Hour","onSelectTime","onTimePickerCancel","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","cancelTimePicker","selectNow","clearTime","ModalComponent","onOverlayClick","closeModal","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","Moment","DateTimePickerComponent","showDate","showTime","showWeeks","weeks","onDateChange","showDatePicker","showTimePicker","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","toggleTimePicker","modelValue","DateTimePickerComponent_1","DateTimePickerModule","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","selectedTime","loadInitial","onTimeSelect","setDateTime","onDateSelect","dateString","setCurrentTime","currentTime","weekSelect","dateToUse","nextWeekDate","nextWeekTime","selectionChange","getWeekPickerCssClass","getDatePickerCssClass","getTimePickerCssClass","newTime","newDateTime","dateTimeString","NgxDateTimePickerComponent_1","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","NgxDateTimePickerModule","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","MatSelectModule","AfeNgSelectComponent","question_options","getChangingText","getData","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","AfeNgSelectComponent_1","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","showWeeksAdder","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","returnErrorOnNext","selectOptions","sampleData","concept","of","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","HistoricalHelperService","evaluate","expr","additionalScopevalues","HD","deps","evaluatePrecondition","additionalScope","histValue","QuestionFactory","historicalHelperService","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","mappings","source","destination","historicalExpression","origValue","historicalPrepopulateCondition","historicalPrepopulate","valDate","differenceInDays","Number","isInteger","allowedHistoricalValueAgeInDays","calculate","Math","random","floor","String","fromCharCode","FormFactory","controlService","questionFactroy","controlRelationsFactory","hd","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","e_5","_d","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","_e","_f","repeatingModel","_g","_h","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider_1","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","items","loading","characters","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","restoreSelectedValue","selectC","_.map","_.clone","_.uniqBy","canSearch","removed","RemoteSelectComponent_1","RemoteSelectModule","AppointmentsOverviewComponent","showAppointments","loadingAppointments","errorLoadingAppointments","appointmentsLoaded","appointments","resetProperties","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","programTypeParams","getMonthlySchedule","limit","locationUuids","programType","appointment","scheduled","comma","newLine","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterPdfViewerService","obsValueAdapter","subscribedAnswers","stack","getPages","remoteSelectsOnly","remoteAns","content","remoteQuestions","getSections","e_2","table","widths","headerRows","keepWithHeaderRows","layout","margin","hLineWidth","vLineWidth","hLineColor","vLineColor","answeredSections","answeredSections_1","answeredSections_1_1","getRemoteSectionData","answeredSections_2","answeredSections_2_1","getSectionData","appendResolvedAnswer","resolvedAnswer","bold","section_1","section_1_1","remoteAns_1","e_7","remoteAns_1_1","resolveValue","section_2","section_2_1","arrayElement","isUuid","arr_1","elem","generatePdfDefinition","docDefinition$","remoteSelects","combineLatest","docDefinition","pageSize","styles","fontSize","banner","bannerItem","bannerLabel","confidential","footer","alignment","header","pageNumber","tableExample","tableHeader","fillColor","borderColor","tableSubheader","timestamp","defaultStyle","displayPdf","pdf","pdfMake","vfs","pdfMake.vfs","titleize","nid","birthdate","age","mui","mhn","currentPage","pageCount","toUTCString","win","createPdf","ISO_8601","isValid","str","charAt","substr","toLowerCase","providedIn","EncounterContainerComponent","encAdapter","encounterPdfViewerService","$form","$enc","QuestionControlComponent","innerValue","el","_.isNumber","noop","FilePreviewComponent","encounterService","resultsIsPdf","onTouchedCallback","onChangeCallback","onBlur","getUrl","FilePreviewComponent_1","RemoteAnswerComponent","RemoteAnswerComponent_1","EncounterViewerModule","CheckboxControlComponent","checked","selectOpt","CheckboxControlComponent_1","CheckboxModule","FormEntryModule","CollapseModule","MatIconModule","MatTabsModule","MatCardModule","TimeAgoPipe","FormBuilder","RenderingType"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,cAAgB,SAASC,EAAGC,GAI5B,OAHAF,cAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,UAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,cAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,SAAW,WAQlB,OAPAA,SAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAGzB,SAASI,OAAOP,EAAGQ,GACtB,IAAIT,EAAI,GACR,IAAK,IAAIV,KAAKW,EAAOf,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,IAAMmB,EAAEC,QAAQpB,GAAK,IAC9EU,EAAEV,GAAKW,EAAEX,IACb,GAAS,MAALW,GAAqD,mBAAjCf,OAAOyB,sBACtB,CAAA,IAAIT,EAAI,EAAb,IAAgBZ,EAAIJ,OAAOyB,sBAAsBV,GAAIC,EAAIZ,EAAEe,OAAQH,IAC3DO,EAAEC,QAAQpB,EAAEY,IAAM,GAAKhB,OAAOU,UAAUgB,qBAAqBN,KAAKL,EAAGX,EAAEY,MACvEF,EAAEV,EAAEY,IAAMD,EAAEX,EAAEY,KAE1B,OAAOF,EAGJ,SAASa,WAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HjC,EAAvHkC,EAAId,UAAUC,OAAQc,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO/B,OAAOkC,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIf,EAAIY,EAAWT,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAI8B,EAAWZ,MAAIiB,GAAKD,EAAI,EAAIlC,EAAEmC,GAAKD,EAAI,EAAIlC,EAAE+B,EAAQC,EAAKG,GAAKnC,EAAE+B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKjC,OAAOqC,eAAeR,EAAQC,EAAKG,GAAIA,EAGzD,SAASK,QAAQC,EAAYC,GAChC,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAGpD,SAASE,WAAWC,EAAaC,GACpC,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAG7G,SAASE,UAAUC,EAASC,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAO/B,GAAK6B,EAAO7B,IACpF,SAASkC,EAASH,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAO/B,GAAK6B,EAAO7B,IACvF,SAASgC,EAAKG,GAAUA,EAAOC,KAAOR,EAAQO,EAAOJ,OAAS,IAAIN,GAAE,SAAUG,GAAWA,EAAQO,EAAOJ,UAAWM,KAAKP,EAAWI,GACnIF,GAAMN,EAAYA,EAAU5B,MAAMyB,EAASC,GAAc,KAAKS,WAI/D,SAASK,YAAYf,EAASgB,GACjC,IAAsGC,EAAGC,EAAGlD,EAAGmD,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPtD,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOuD,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAET,KAAMe,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOnE,OAAUyD,EACvJ,SAASM,EAAKtD,GAAK,OAAO,SAAU2D,GAAK,OACzC,SAAcC,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAMlD,EAAY,EAAR+D,EAAG,GAASb,EAAU,OAAIa,EAAG,GAAKb,EAAS,SAAOlD,EAAIkD,EAAU,SAAMlD,EAAEM,KAAK4C,GAAI,GAAKA,EAAER,SAAW1C,EAAIA,EAAEM,KAAK4C,EAAGa,EAAG,KAAKlB,KAAM,OAAO7C,EAE3J,OADIkD,EAAI,EAAGlD,IAAG+D,EAAK,CAAS,EAARA,EAAG,GAAQ/D,EAAEwC,QACzBuB,EAAG,IACP,KAAK,EAAG,KAAK,EAAG/D,EAAI+D,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEb,MAAOuB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAkBjE,GAAZA,EAAIoD,EAAEG,MAAYlD,OAAS,GAAKL,EAAEA,EAAEK,OAAS,MAAkB,IAAV0D,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAc/D,GAAM+D,EAAG,GAAK/D,EAAE,IAAM+D,EAAG,GAAK/D,EAAE,IAAM,CAAEoD,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQrD,EAAE,GAAI,CAAEoD,EAAEC,MAAQrD,EAAE,GAAIA,EAAI+D,EAAI,MAC7D,GAAI/D,GAAKoD,EAAEC,MAAQrD,EAAE,GAAI,CAAEoD,EAAEC,MAAQrD,EAAE,GAAIoD,EAAEI,IAAIU,KAAKH,GAAK,MACvD/D,EAAE,IAAIoD,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAK1C,KAAK0B,EAASoB,GAC1B,MAAO3C,GAAKsD,EAAK,CAAC,EAAGtD,GAAIyC,EAAI,EAAI,QAAWD,EAAIjD,EAAI,EACtD,GAAY,EAAR+D,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEvB,MAAOuB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BJ,CAAK,CAACtC,EAAG2D,MAyBtD,SAASK,aAAaC,EAAGC,GAC5B,IAAK,IAAI/E,KAAK8E,EAAQC,EAAQ9E,eAAeD,KAAI+E,EAAQ/E,GAAK8E,EAAE9E,IAG7D,SAASgF,SAASC,GACrB,IAAIH,EAAsB,mBAAXR,QAAyBW,EAAEX,OAAOC,UAAW3D,EAAI,EAChE,OAAIkE,EAAUA,EAAE9D,KAAKiE,GACd,CACH7B,KAAM,WAEF,OADI6B,GAAKrE,GAAKqE,EAAElE,SAAQkE,OAAI,GACrB,CAAE/B,MAAO+B,GAAKA,EAAErE,KAAM2C,MAAO0B,KAKzC,SAASC,OAAOD,EAAGpE,GACtB,IAAIiE,EAAsB,mBAAXR,QAAyBW,EAAEX,OAAOC,UACjD,IAAKO,EAAG,OAAOG,EACf,IAAmBpD,EAAYV,EAA3BP,EAAIkE,EAAE9D,KAAKiE,GAAOE,EAAK,GAC3B,IACI,WAAc,IAANtE,GAAgBA,KAAM,MAAQgB,EAAIjB,EAAEwC,QAAQG,MAAM4B,EAAGP,KAAK/C,EAAEqB,OAExE,MAAOkC,GAASjE,EAAI,CAAEiE,MAAOA,GACjC,QACQ,IACQvD,IAAMA,EAAE0B,OAASuB,EAAIlE,EAAU,SAAIkE,EAAE9D,KAAKJ,GAE1D,QAAkB,GAAIO,EAAG,MAAMA,EAAEiE,OAE7B,OAAOD,EAGJ,SAASE,WACZ,IAAK,IAAIF,EAAK,GAAIvE,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CuE,EAAKA,EAAGG,OAAOJ,OAAOpE,UAAUF,KACpC,OAAOuE,EAGJ,SAASI,iBACZ,IAAK,IAAI5E,EAAI,EAAGC,EAAI,EAAG4E,EAAK1E,UAAUC,OAAQH,EAAI4E,EAAI5E,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAIc,EAAI9B,MAAMY,GAAI8E,EAAI,EAA3B,IAA8B7E,EAAI,EAAGA,EAAI4E,EAAI5E,IACzC,IAAK,IAAI8E,EAAI5E,UAAUF,GAAI+E,EAAI,EAAGC,EAAKF,EAAE3E,OAAQ4E,EAAIC,EAAID,IAAKF,IAC1D5D,EAAE4D,GAAKC,EAAEC,GACjB,OAAO9D,EAGJ,SAASgE,QAAQrB,GACpB,OAAOpE,gBAAgByF,SAAWzF,KAAKoE,EAAIA,EAAGpE,MAAQ,IAAIyF,QAAQrB,GAG/D,SAASsB,iBAAiBpD,EAASC,EAAYE,GAClD,IAAKyB,OAAOyB,cAAe,MAAM,IAAIrB,UAAU,wCAC/C,IAAoD9D,EAAhDiD,EAAIhB,EAAU5B,MAAMyB,EAASC,GAAc,IAAQqD,EAAI,GAC3D,OAAOpF,EAAI,GAAIuD,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWvD,EAAE0D,OAAOyB,eAAiB,WAAc,OAAO3F,MAASQ,EACpH,SAASuD,EAAKtD,GAASgD,EAAEhD,KAAID,EAAEC,GAAK,SAAU2D,GAAK,OAAO,IAAI1B,SAAQ,SAAU4C,EAAG/F,GAAKqG,EAAEpB,KAAK,CAAC/D,EAAG2D,EAAGkB,EAAG/F,IAAM,GAAKsG,EAAOpF,EAAG2D,QAC9H,SAASyB,EAAOpF,EAAG2D,GAAK,KACV3C,EADqBgC,EAAEhD,GAAG2D,IACnBtB,iBAAiB2C,QAAU/C,QAAQC,QAAQlB,EAAEqB,MAAMsB,GAAGhB,KAAK0C,EAASlD,GAAUmD,EAAOH,EAAE,GAAG,GAAInE,GADpE,MAAOV,GAAKgF,EAAOH,EAAE,GAAG,GAAI7E,GAC3E,IAAcU,EACd,SAASqE,EAAQhD,GAAS+C,EAAO,OAAQ/C,GACzC,SAASF,EAAOE,GAAS+C,EAAO,QAAS/C,GACzC,SAASiD,EAAOxC,EAAGa,GAASb,EAAEa,GAAIwB,EAAEI,QAASJ,EAAEjF,QAAQkF,EAAOD,EAAE,GAAG,GAAIA,EAAE,GAAG,KAGzE,SAASK,iBAAiBpB,GAC7B,IAAIrE,EAAGZ,EACP,OAAOY,EAAI,GAAIuD,EAAK,QAASA,EAAK,SAAS,SAAUhD,GAAK,MAAMA,KAAOgD,EAAK,UAAWvD,EAAE0D,OAAOC,UAAY,WAAc,OAAOnE,MAASQ,EAC1I,SAASuD,EAAKtD,EAAG8C,GAAK/C,EAAEC,GAAKoE,EAAEpE,GAAK,SAAU2D,GAAK,OAAQxE,GAAKA,GAAK,CAAEkD,MAAO2C,QAAQZ,EAAEpE,GAAG2D,IAAKjB,KAAY,WAAN1C,GAAmB8C,EAAIA,EAAEa,GAAKA,GAAOb,GAGxI,SAAS2C,cAAcrB,GAC1B,IAAKX,OAAOyB,cAAe,MAAM,IAAIrB,UAAU,wCAC/C,IAAiC9D,EAA7BkE,EAAIG,EAAEX,OAAOyB,eACjB,OAAOjB,EAAIA,EAAE9D,KAAKiE,IAAMA,EAAwB,mBAAbD,SAA0BA,SAASC,GAAKA,EAAEX,OAAOC,YAAa3D,EAAI,GAAIuD,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWvD,EAAE0D,OAAOyB,eAAiB,WAAc,OAAO3F,MAASQ,GAC9M,SAASuD,EAAKtD,GAAKD,EAAEC,GAAKoE,EAAEpE,IAAM,SAAU2D,GAAK,OAAO,IAAI1B,SAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQtD,EAAG8E,GAAK1B,QAAQC,QAAQyB,GAAGhB,MAAK,SAASgB,GAAKzB,EAAQ,CAAEG,MAAOsB,EAAGjB,KAAM7D,MAASsD,IADJmD,CAAOpD,EAASC,GAA7BwB,EAAIS,EAAEpE,GAAG2D,IAA8BjB,KAAMiB,EAAEtB,YAI7I,SAASqD,qBAAqBC,EAAQC,GAEzC,OADI7G,OAAOqC,eAAkBrC,OAAOqC,eAAeuE,EAAQ,MAAO,CAAEtD,MAAOuD,IAAiBD,EAAOC,IAAMA,EAClGD,EAGJ,SAASE,aAAaC,GACzB,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIrD,EAAS,GACb,GAAW,MAAPqD,EAAa,IAAK,IAAIlB,KAAKkB,EAAS/G,OAAOK,eAAee,KAAK2F,EAAKlB,KAAInC,EAAOmC,GAAKkB,EAAIlB,IAE5F,OADAnC,EAAOuD,QAAUF,EACVrD,EAGJ,SAASwD,gBAAgBH,GAC5B,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAEE,QAASF,mCClLlD,SAAAI,IAFO3G,KAAA4G,UAAY,YASvB,OALUD,EAAAzG,UAAA2G,aAAP,WAGS,OAAO,GATNF,EAAgBxF,WAAA,CAF5B2F,KAAAA,iDAEYH,mCCNb,SAAAI,IAMS/G,KAAAgH,yBAA2B,IAAIC,KAAAA,QAC/BjH,KAAAkH,oBAAuClH,KAAKgH,yBAAyBG,eAI9E,OAHSJ,EAAA7G,UAAAkH,mBAAP,SAA0BpC,GACxBhF,KAAKgH,yBAAyBhE,KAAKgC,IALvB+B,EAAAM,QAAyD,KACzDN,EAAAO,IAAc,KAJjBP,EAAiB5F,WAAA,CAD7B2F,KAAAA,cACYC,MCFbQ,gBAAA,WAKI,SAAAA,EAAYF,EAA0BG,GAClCxH,KAAKyH,SAAWJ,EAChBrH,KAAK0H,WAAaF,EAClBxH,KAAK2H,wCA8Cb,OA3CInI,OAAAqC,eAAI0F,EAAArH,UAAA,UAAO,KAAX,WACI,OAAOF,KAAKyH,0CAGhBjI,OAAAqC,eAAI0F,EAAArH,UAAA,YAAS,KAAb,WACI,OAAOF,KAAK0H,4CAGhBlI,OAAAqC,eAAI0F,EAAArH,UAAA,kBAAe,KAAnB,WACI,OAAOF,KAAK4H,kDAGhBL,EAAArH,UAAA2H,6BAAA,SAA6BC,GACzB,OAAIA,IAAa9H,KAAK4H,mBAClB5H,KAAK4H,iBAAmBE,EAEnB9H,KAAKyH,SAAiBM,uBACxB/H,KAAKyH,SAAiBM,wBAGzB/H,KAAKyH,SAASO,yBACThI,KAAKyH,SAAiBQ,mBACtBjI,KAAKyH,SAAiBQ,oBAGtBjI,KAAKyH,SAAiBS,qBACtBlI,KAAKyH,SAAiBS,sBAGtBlI,KAAKyH,SAAiBU,aACtBnI,KAAKyH,SAAiBU,eAEpB,IAKPZ,EAAArH,UAAAyH,sCAAR,WAAA,IAAAS,EAAApI,KAEEA,KAAK0H,WAAWW,aAAaC,WAAU,SAACxF,GACtCsF,EAAKP,6BAA6B/E,OAG1CyE,EAtDA,GCDAgB,iBAAA,WAMI,SAAAA,EAAYC,EAA8BhB,GAFlCxH,KAAAyI,gBAAuB,GAG3BzI,KAAK0I,aAAeF,EACpBxI,KAAK2I,WAAa,GAEdnB,GACAxH,KAAK4I,mBAAmBpB,GA2BpC,OAvBIhI,OAAAqC,eAAI0G,EAAArI,UAAA,eAAY,KAAhB,WACI,OAAOF,KAAK0I,8CAGhBlJ,OAAAqC,eAAI0G,EAAArI,UAAA,YAAS,KAAb,WACI,OAAOF,KAAK2I,4CAGhBnJ,OAAAqC,eAAI0G,EAAArI,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKyI,iDAGdF,EAAArI,UAAA0I,mBAAA,SAAmBpB,GAKf,GAJIA,aAAqBqB,MAAAA,iBACrB7I,KAAK8I,UAAUtE,KAAK,IAAI+C,gBAAgBvH,KAAK0I,aAAclB,IAG3DA,aAAqB7H,MACrB,IAAK,IAAIa,EAAI,EAAGA,EAAIgH,EAAU7G,OAAQH,IAClCR,KAAK8I,UAAUtE,KAAK,IAAI+C,gBAAgBvH,KAAK0I,aAAclB,EAAUhH,MAIrF+H,EAtCA,GCHAQ,YAAA,WAAA,SAAAA,KA+CA,OA7CWA,EAAA7I,UAAA8I,YAAP,SAAmB3B,GACfA,EAAQ4B,QAAS,EACb5B,EAAQ6B,SACR7B,EAAQ6B,WAITH,EAAA7I,UAAAiJ,YAAP,SAAmB9B,GACfA,EAAQ4B,QAAS,GAGdF,EAAA7I,UAAAkJ,mBAAP,SAA0B/B,EAAkBgC,GACxChC,EAAQiC,OAAO9E,KAAK6E,IAGjBN,EAAA7I,UAAAqJ,sBAAP,SAA6BlC,GACzBA,EAAQiC,OAAOE,OAAO,GACtBnC,EAAQ4B,QAAS,GAGdF,EAAA7I,UAAAuJ,sBAAP,SAA6BpC,GAEzB,IAAIqC,GAAc,EAClBrC,EAAQiC,OAAOK,SAAQ,SAAAN,GACnBA,EAAMO,8BACe,IAAjBP,EAAMQ,SACNH,GAAc,MAItBrC,EAAQ4B,OAASS,EACbrC,EAAQ4B,QAAU5B,EAAQ6B,SAC1B7B,EAAQ6B,WAKTH,EAAA7I,UAAA4J,kCAAP,SAAyCzC,GACjCA,EAAQY,mBACRZ,EAAQgB,aAAaC,WAAU,SAACyB,GAC5B1C,EAAQY,wBAKxBc,EA/CA,GCAAiB,YAAA,WAAA,SAAAA,KA6CA,OA3CWA,EAAA9J,UAAA+J,UAAP,SAAiB5C,GACbA,EAAQ6C,OAAQ,GAGbF,EAAA9J,UAAAiK,UAAP,SAAiB9C,GACbA,EAAQ6C,OAAQ,GAGbF,EAAA9J,UAAAkK,oBAAP,SAA2B/C,EAA2BgD,GAClDhD,EAAQiD,OAAO9F,KAAK6F,IAGjBL,EAAA9J,UAAAqK,sBAAP,SAA6BlD,GACzBA,EAAQiD,OAAOd,OAAO,GACtBnC,EAAQgD,MAAQ,IAGbL,EAAA9J,UAAAsK,sBAAP,SAA6BnD,GACzB,IAAIoD,EAAe,GACnBpD,EAAQiD,OAAOX,SAAQ,SAAAe,GACnBA,EAAQC,4BAEJF,GADkB,IAAlBC,EAAQR,MACOQ,EAAQE,aAER,MAIvBvD,EAAQgD,MAAQI,GAObT,EAAA9J,UAAA4J,kCAAP,SAAyCzC,GACjCA,EAAQc,aACRd,EAAQgB,aAAaC,WAAU,SAACyB,GAC5B1C,EAAQc,kBAKxB6B,EA7CA,GCAAa,eAAA,WAAA,SAAAA,KAqCA,OAnCWA,EAAA3K,UAAA4K,sBAAP,SAA6BzD,EAAqB0D,GAC9C1D,EAAQ2D,UAAUxG,KAAKuG,IAGpBF,EAAA3K,UAAA+K,yBAAP,SAAgC5D,GAC5BA,EAAQ2D,UAAUxB,OAAO,GACzBnC,EAAQ6B,WAGL2B,EAAA3K,UAAAgL,yBAAP,SAAgC7D,GAC5B,IAAI8D,GAAY,EAChB9D,EAAQ2D,UAAUrB,SAAQ,SAAAN,GACtBA,EAAM+B,iCACkB,IAApB/B,EAAM8B,YACNA,GAAY,MAMhBA,EACA9D,EAAQ6B,UAER7B,EAAQgE,UAITR,EAAA3K,UAAA4J,kCAAP,SAAyCzC,GACjCA,EAAQa,qBACRb,EAAQgB,aAAaC,WAAU,SAACyB,GAC5B1C,EAAQa,0BAKxB2C,EArCA,GCoBAS,SAAA,WASI,SAAAA,EAAYC,EAAwBlE,EAAwDmE,EAAaC,GACrGzL,KAAKyH,SAAWJ,EAChBrH,KAAK0L,eAAiBH,EACtBvL,KAAK2L,MAAQH,EACbxL,KAAK4L,MAAQH,EAAaA,EAAa,IAAMF,EAASjK,IAAMiK,EAASjK,IAuB7E,OApBI9B,OAAAqC,eAAWyJ,EAAApL,UAAA,WAAQ,KAAnB,WACI,OAAOF,KAAK0L,gDAGhBlM,OAAAqC,eAAWyJ,EAAApL,UAAA,UAAO,KAAlB,WACI,OAAOF,KAAKyH,0CAGhBjI,OAAAqC,eAAWyJ,EAAApL,UAAA,OAAI,KAAf,WACI,OAAOF,KAAK2L,uCAGhBnM,OAAAqC,eAAWyJ,EAAApL,UAAA,OAAI,KAAf,WACI,OAAOF,KAAK4L,uCAEhBN,EAAApL,UAAA2L,SAAA,SAASC,KAETR,EAAApL,UAAA6L,gBAAA,aACAT,EAAApL,UAAA8L,gBAAA,aAEJV,EApCA,GAsCAW,SAAA,SAAAC,GACI,SAAAD,EAAYV,EAAwBlE,EAC/B8E,EAA8DX,EAAaC,UAC5ES,EAAAtL,KAAAZ,KAAMuL,EAAUlE,EAASmE,EAAMC,IAAWzL,KAElD,OAL8BoM,UAAAA,EAAAA,GAK9BH,EALA,CAA8BX,UAO9Be,UAAA,SAAAH,GAEI,SAAAG,EAAYd,EAAwBlE,EAChC8E,EAA8DX,EAAaC,GAD/E,IAAArD,EAEI8D,EAAAtL,KAAAZ,KAAMuL,EAAUlE,EAASmE,EAAMC,IAAWzL,YAC1CoI,EAAKkE,UAAY,KAWzB,OAhB+BF,UAAAA,EAAAA,GAQ3B5M,OAAAqC,eAAWwK,EAAAnM,UAAA,WAAQ,KAAnB,WACI,OAAOF,KAAKsM,2CAGTD,EAAAnM,UAAAqM,SAAP,SAAgBjL,EAAakL,GACzBxM,KAAKyM,SAASnL,GAAOkL,GAG7BH,EAhBA,CAA+Bf,UAkB/BoB,UAAA,SAAAR,GAOI,SAAAQ,EAAYnB,EAAwBlE,EAChC8E,EAAsEQ,EACtEnB,EAAaC,GAFjB,IAAArD,EAGI8D,EAAAtL,KAAAZ,KAAMuL,EAAUlE,EAASmE,EAAMC,IAAWzL,YAF4BoI,EAAAuE,YAAAA,EANlEvE,EAAAwE,uBAAgC,GASpCxE,EAAKkE,UAAY,GACjBlE,EAAKwE,uBAAyB,KAiCtC,OA7C+BR,UAAAA,EAAAA,GAe3B5M,OAAAqC,eAAW6K,EAAAxM,UAAA,WAAQ,KAAnB,WACI,OAAOF,KAAKsM,2CAGTI,EAAAxM,UAAA6L,gBAAP,WACI,GAAI/L,KAAK6M,gBAAiB,CACtB,IAAMpJ,EAAezD,KAAK6M,gBAAgB7M,KAAKuL,SAA+BvL,KAAMA,KAAK2M,aAEzF,OADA3M,KAAK8M,6BAA6BrJ,GAC3BA,EAEX,OAAO,MAGJiJ,EAAAxM,UAAA2L,SAAP,SAAgBC,GACR9L,KAAK+M,iBACL/M,KAAK+M,gBAAgBjB,EAAO9L,OAIpC0M,EAAAxM,UAAA8M,4BAAA,SAA4BC,GACxBjN,KAAK4M,uBAAuBpI,KAAKyI,IAGrCP,EAAAxM,UAAA4M,6BAAA,SAA6BN,GACzB,IAAK,IAAIhM,EAAI,EAAGA,EAAIR,KAAK4M,uBAAuBjM,OAAQH,IAAK,EAGzDyM,EADkBjN,KAAK4M,uBAAuBpM,IACzCgM,KAGjBE,EA7CA,CAA+BpB,0BC7E7B,SAAY4B,GAEVlN,KAAKmN,KAAOD,EAAYC,KACxBnN,KAAK0K,QAAUwC,EAAYxC,SAAW,8CCHxC,SAAA0C,EAAYF,GAAZ,IAAA9E,EACE8D,EAAAtL,KAAAZ,KAAMkN,IAAYlN,YAClBoI,EAAKiF,oBAAsBH,EAAYG,sBAE3C,OARiDjB,UAAAA,EAAAA,GAQjDgB,GARiDE,wDCI/C,SAAAC,EAAYL,GAAZ,IAAA9E,EACE8D,EAAAtL,KAAAZ,KAAMkN,IAAYlN,YAClBoI,EAAKoF,oBAAsBN,EAAYM,oBACvCpF,EAAKqF,yBAA2BP,EAAYO,2BAEhD,OAVgDrB,UAAAA,EAAAA,GAUhDmB,GAVgDD,oDCY9C,SAAAI,KAiTF,OA/SEA,EAAAxN,UAAAyN,eAAA,SAAeC,GAEb,IAAMC,EAAqB7N,KAAK8N,cAAcF,EAAU,IAExD,IAAK,IAAMtM,KAAOuM,EAChB,GAAIA,EAAchO,eAAeyB,GAAM,CACrC,IAAMyM,EAAqBF,EAAcvM,GAEzCtB,KAAKgO,aAAaH,EAAeE,KAKvCL,EAAAxN,UAAA+N,wBAAA,SAAwBzB,GAEtB,IAAMhB,EAAagB,EAAKhB,KAExB,GAAKA,EAAL,CAGA,IAAMoC,EAAsBpC,EAAKoC,SAGjC5N,KAAK2N,eAAenB,GAGpB,IAAM0B,EAAyBlO,KAAK8N,cAAcF,EAAU,IACtDO,EAAyBnO,KAAK8N,cAActB,EAAM,IAExD,IAAK,IAAMlL,KAAO4M,EAAmB,CAEnC,GAAIA,EAAkBrO,eAAeyB,GAInC,IAFM8M,EAAkBF,EAAkB5M,cAErB2K,SAAU,CAE7B,IAAMoC,EAA8BD,EAAmB7C,SAEnD8C,EAAa/M,KAAO+M,EAAa/M,IAAIX,OAAS,GAChDX,KAAKgO,aAAaG,EAAmBC,IAU7C,IAAK,IAAME,KAHXtO,KAAKuO,+BAA+B/B,GAGnB2B,EACf,GAAIA,EAAkBtO,eAAeyO,GAAK,CAExC,IAAMF,EACA/G,GADA+G,EAAkBD,EAAkBG,IACWjH,QACrDA,EAAQY,oBACRZ,EAAQc,iBAKduF,EAAAxN,UAAAqO,+BAAA,SAA+B/B,GAE7B,IAEMoB,EAFapB,EAAKhB,KAESoC,SAG3BM,EAAyBlO,KAAK8N,cAAcF,EAAU,IACtDO,EAAyBnO,KAAK8N,cAActB,EAAM,IAGxD,IAAK,IAAMlL,KAAO4M,EAChB,GAAIA,EAAkBrO,eAAeyB,GAAM,CAEzC,IAAMkN,EAAmBN,EAAkB5M,GAErCmN,EAAiBjC,EAAKkC,KAAKC,UAAU,EAAGnC,EAAKkC,KAAKE,YAAY,MAEpE,IAAmD,IAA/CJ,EAAOE,KAAK1N,QAAQyN,EAAiB,KAAa,gBAGzCH,GACT,GAAIH,EAAkBtO,eAAeyO,GAAK,CAExC,IAAMO,EAAmBV,EAAkBG,GACrCQ,EAAWD,EAAOtD,SAASjK,IACjC,GAAIyN,EAAKC,YAAYF,EAAUN,EAAOjD,UAAW,CAE/C,IAAM0D,EAAyBzC,EAAKhB,KAAK0D,iBAAiBtB,EAAUa,EAAgB,IACpF,GAAIQ,EAAMtO,OAAS,EAAG,CACpB,IAAMwO,EAAKF,EAAM,GACXG,EAAeZ,EAAOnH,SAEqC,IAA7D+H,EAAYC,iBAAiBC,eAAetO,QAAQmO,IACtDC,EAAYC,iBAAiBC,eAAe9K,KAAK2K,GAGlDN,EAAOxH,QAA0CkI,wBAAuB,SAACzM,GAEnEsM,EAAoBrH,uBACtBqH,EAAoBrH,wBAGvBqH,EAAYpH,yBACPoH,EAAoBnH,mBACtBmH,EAAoBnH,oBAGlBmH,EAAoBjH,aACtBiH,EAAoBjH,cAGlBiH,EAAoBlH,qBACtBkH,EAAoBlH,oCAhCjC,IAAK,IAAMoG,KAAMH,IAANG,MA4CnBZ,EAAAxN,UAAAsP,uBAAA,SAAuBlB,EAAI9B,GAEzB,IAAM1D,EAAkD,IAAInJ,MAEtD8P,EAAiCjD,EAAKhB,KAAKkE,uBAAuBpB,GAExE,GAAImB,EAAc9O,OAAS,EAAG,CAE5B,IAAMoN,EAAqB0B,EAAc,GAEnCE,EAAmB3P,KAAK8N,cAActB,EAAM,IAElD,IAAK,IAAMlL,KAAOqO,EACZA,EAAY9P,eAAeyB,IAEzBtB,KAAKgP,YAAYW,EAAYrO,GAAKiK,SAASjK,IAAKyM,EAASxC,WAC3DzC,EAAUtE,KAAKmL,EAAYrO,GAAK+F,SAKxC,OAAOyB,GAGT4E,EAAAxN,UAAA4N,cAAA,SAActB,EAAiBqB,GAE7B,IAAMpB,EAAqBD,EAAKC,SAEhC,IAAK,IAAMnL,KAAOmL,EAEhB,GAAIA,EAAS5M,eAAeyB,GAAM,CAEhC,IAAM8M,EAAkB3B,EAASnL,GAEjC,GAAI8M,aAAiB/B,UAEnBrM,KAAK8N,cAAcM,EAAOP,QACrB,GAAIO,aAAiBnC,SAAU,EAE9BoC,EAA8BD,EAAmB7C,UAEtCjK,KAAO+M,EAAa/M,IAAIX,OAAS,IAChDkN,EAAcQ,EAAa/M,KAAO8M,QAE/B,GAAIA,aAAiB1B,UAAW,CAErC,IAAM2B,GAAAA,EAA8BD,EAAoB7C,UAEvCjK,KAAO+M,EAAa/M,IAAIX,OAAS,IAChDkN,EAAcQ,EAAa/M,KAAO8M,IAM1C,OAAOP,GAGTH,EAAAxN,UAAA8N,aAAA,SAAaH,EAAoBE,GAE/B,IAEMO,EAF6BP,EAASxC,SAEpBjK,IAExB,IAAK,IAAMA,KAAOuM,EAChB,GAAIA,EAAchO,eAAeyB,IAAQA,IAAQgN,EAAI,CAEnD,IAAM9B,EAAiBqB,EAAcvM,GAC/BiK,EAAyBiB,EAAKjB,SAOpC,GALIvL,KAAKgP,YAAYV,EAAI/C,EAAUwC,IACjC/N,KAAK4P,qBAAqBpD,EAAKnF,QAA0C0G,EAAS1G,SAInD,iBAAtBkE,EAASsE,SAAuB,CAEzC,IAAMA,EAAgBtE,EAASsE,SAET,wBAAlBA,EAAS1C,MAEP0C,EAASrC,sBAAwBc,GACnCtO,KAAK4P,qBAAqBpD,EAAKnF,QAC7B0G,EAAS1G,YAQvBqG,EAAAxN,UAAA8O,YAAA,SAAYV,EAAYD,EAA4BN,GAElD,IAAIiB,GAAc,EAsBlB,GApBIX,EAAayB,YAAczB,EAAayB,WAAWnP,OAAS,GAE9D0N,EAAayB,WAAWnG,SAAQ,SAAAoG,GAE9B,GAAIA,aAAmB3C,4BAA6B,CAElD,IAEMC,EAFqC0C,EAED1C,oBACtCA,IAA4D,IAArCA,EAAoBrM,QAAQsN,KACrDU,GAAc,QAEPe,aAAmBxC,4BAA+C,wBAAjBwC,EAAQ5C,MAC/D4C,EAAQvC,sBAAwBc,IACnCU,GAAc,OAMfA,EAAa,CAEhB,GAAiC,iBAAtBX,EAAa2B,KAAmB,CAEzC,IAAMA,EAAe3B,EAAa2B,KAE9BA,EAAKrP,OAAS,IAA2B,IAAtBqP,EAAKhP,QAAQsN,KAClCU,GAAc,QAEX,GAAiC,iBAAtBX,EAAa2B,KAAmB,CAE3B3B,EAAa2B,KAEtBC,QAAU3B,IACpBU,GAAc,GAQlB,GAJIX,EAAahE,OAAuC,iBAAvBgE,EAAahE,QAC5C2E,GAAc,GAGoB,iBAAzBX,EAAanF,QAAsB,CAE5C,IAAMA,EAAkBmF,EAAanF,QAEjCA,EAAQvI,OAAS,IAA8B,IAAzBuI,EAAQlI,QAAQsN,KACxCU,GAAc,IAWpB,OALKA,GAAeX,EAAa6B,qBAAuB7B,EAAa6B,oBAAoBvP,OAAS,IAC3C,IAAlD0N,EAAa6B,oBAAoBlP,QAAQsN,KAC5CU,GAAc,GAGTA,GAGTtB,EAAAxN,UAAA0P,qBAAA,SAAqBvI,EAAwC8I,GAkB3D9I,EAAQgI,iBAAiBzG,mBAAmBuH,IAhTnCzC,EAAuBvM,WAAA,CADnC2F,KAAAA,iDACY4G,MCLP0C,OAASC,QACfC,iBAAA,WAAA,SAAAA,oBA+JA,OA9JIA,iBAAApQ,UAAAqQ,YAAA,SAAYC,WAAoBnJ,QAC5BoJ,OAAaC,iBAAuBlF,MAEpC,IAAMmF,OAAS3Q,KACT4Q,SAAqB,CACvBC,IAAK,WAGD,IAAIC,MAAa,GACbzJ,QAAQ0J,OACRD,MAAMzJ,QAAQ0J,MAAQ1J,QAAQvE,OAElCkO,OAAe,OAAIZ,OAEnBU,MAAe,QAAIzJ,QAAQvE,MAC3B6N,OAAOM,8BAA8B5J,QAASyJ,OAC9CH,OAAOO,iBAAiBT,OAAQK,OAChCH,OAAOQ,oBAAoBT,iBAAkBI,OAEzCtF,MAEAmF,OAAOQ,oBAAoB3F,KAAK4F,qBAAqBC,YAAaP,OAGtE,IAAIQ,UAAY,GACZC,QAAU,GACd,IAAK,IAAI1M,KAAKiM,MACVQ,UAA0B,KAAdA,UAAmBA,UAAYzM,EAAIyM,UAAY,IAAMzM,EACjE0M,QAAsB,KAAZA,QAAiBA,QAAU,UAAY1M,EAAI,KAAO0M,QAAU,WAAa1M,EAAI,MAIrD,IAAlC2L,WAAWxP,QAAQ,YACnBwP,WAAa,WAAaA,WAAa,KAG3C,IAAIgB,oBAAsB,sCAAwCF,UAAY,MAAQd,WAAa,KAC/FiB,aAAe,6BAA2C,KAAZF,QAAiB,GAAK,IAAMA,SAAW,KAEzF,IAEI,OAAI/R,OAAOkS,KAAKZ,OAAO9P,QAAQ,cAAgB,GAC3C2Q,QAAQC,KAAK,0BAA2BpB,WAAYM,QAC7C,GAGJe,KAAKL,oBAAsBC,cACpC,MAAO1Q,GAcL,OAAO,KAKnB,OAAO6P,UAGHN,iBAAApQ,UAAA+Q,8BAAR,SAAsC5J,EAAuDyJ,GAA7F,IAAA1I,EAAApI,KACQqH,GAAWA,EAAQgI,kBAAoBhI,EAAQgI,iBAAiBvG,WAChEzB,EAAQgI,iBAAiBvG,UAAUa,SAAQ,SAAAmI,GACvC,GAAIA,EAAStK,UAAW,CACpB,IAAM2I,EAAU2B,EAAStK,UACnBuK,EAAmBD,EAAStK,UAC9BuK,GAAoBpS,MAAMqS,QAAQD,EAAiBjP,OACnDgO,EAAMX,EAAQY,MAAQe,EAAStK,UAAU1E,MAEzCgO,EAAMX,EAAQY,MAAQe,EAAStK,UAAU1E,OAASgP,EAAStK,UAAU1E,MAAMA,MACvEgP,EAAStK,UAAU1E,MAAMA,MAAQgP,EAAStK,UAAU1E,UAMpEuE,GAAWA,EAAQgI,kBAAoBhI,EAAQgI,iBAAiBC,gBAC7DjI,EAAQgI,iBAAiBC,eAAe3O,OAAS,GAEpD0G,EAAQgI,iBAAiBC,eAAe3F,SAAQ,SAAA6C,GAC5C,GAAIA,aAAgBE,UAAW,CAC3B,IAAMuF,EAAuBzF,EACvB0F,EAAO7K,EAAQ0J,KAEfoB,EAAmD,IAAIzE,wBACzD0E,EAA4D,GAEhEH,EAAUxF,SAAS9C,SAAQ,SAAAyE,GACvBgE,EAAsBA,EAAoBlN,OAAOiN,EAAwB3C,uBAAuB0C,EAAM9D,OAI1GhG,EAAKiK,sBAAsBhL,EAA0C+K,EAAqBtB,QAMlGR,iBAAApQ,UAAAmS,sBAAR,SAA8BhL,EAC1BiL,EAA2DxB,GAD/D,IAAA1I,EAAApI,KAEgCA,KAAKuS,oBAAoBD,GAEhD3I,SAAQ,SAAArI,GACT,IAAMkR,EAAcpK,EAAKqK,iBAAiBnR,EAAKgR,GAC/CxB,EAAMxP,GAAOkR,MAIblC,iBAAApQ,UAAAqS,oBAAR,SAA4BG,GAExB,IAAMhB,EAAsB,GAQ5B,OAPAgB,EAAM/I,SAAQ,SAAAtC,IAE0B,IAAhCqK,EAAK1Q,QAAQqG,EAAQ0J,OACrBW,EAAKlN,KAAK6C,EAAQ0J,SAInBW,GAGHpB,iBAAApQ,UAAAuS,iBAAR,SAAyBnR,EAAaoR,GAClC,IAAMF,EAAc,GASpB,OAPAE,EAAM/I,SAAQ,SAAAtC,GAENA,EAAQ0J,OAASzP,GACjBkR,EAAOhO,KAAK6C,EAAQvE,UAIrB0P,GAGHlC,iBAAApQ,UAAAgR,iBAAR,SAAyByB,EAAU7B,GAC/B,IAAK,IAAMxP,KAAOqR,EACVA,EAAI9S,eAAeyB,KACnBwP,EAAMxP,GAAOqR,EAAIrR,KAKrBgP,iBAAApQ,UAAAiR,oBAAR,SAA4BwB,EAAU7B,GAClC,IAAK,IAAMxP,KAAOqR,EACVA,EAAI9S,eAAeyB,KACnBwP,EAAMxP,GAAOqR,EAAIrR,KAIjCgP,iBA/JA,8BCsBI,SAAAsC,EAAYC,EAAiBC,EACzBC,GADJ,IAAA3K,EAEI8D,EAAAtL,KAAAZ,KAAM6S,EAAWC,EAAWC,IAAe/S,YAZ/CoI,EAAAa,QAAS,EAODb,EAAA4K,YAA2B,IAAIjK,YAC/BX,EAAA6K,eAAiC,IAAIpI,eACrCzC,EAAA4B,YAA2B,IAAIA,YAInC5B,EAAK8K,kBAAoB,IAAI3K,iBAAiBH,GAC9CA,EAAKkB,OAAS,GACdlB,EAAK4C,UAAY,GACjB5C,EAAKkC,OAAS,GAEdlC,EAAKC,aAAaC,WAAU,SAACxF,GACrBsF,EAAK+K,iBAAmBrQ,IACxBsF,EAAKgL,wBAAwBtQ,GAC7BsF,EAAK+K,eAAiBrQ,QAkFtC,OA9G6BsJ,UAAAA,EAAAA,GAiCzB5M,OAAAqC,eAAI+Q,EAAA1S,UAAA,mBAAgB,KAApB,WACI,OAAOF,KAAKkT,mDAGhBN,EAAA1S,UAAAgJ,QAAA,SAAQmK,GACJnH,EAAAhM,UAAMgJ,QAAOtI,KAAAZ,KAACqT,GACdnH,EAAAhM,UAAMoT,SAAQ1S,KAAAZ,KAAC,KAGnB4S,EAAA1S,UAAA8P,KAAA,WACIhQ,KAAKgT,YAAYhK,YAAYhJ,OAGjC4S,EAAA1S,UAAAqT,KAAA,WACIvT,KAAKgT,YAAY7J,YAAYnJ,OAGjC4S,EAAA1S,UAAAsT,YAAA,SAAYC,GACRzT,KAAKgT,YAAY5J,mBAAmBpJ,KAAMyT,IAG9Cb,EAAA1S,UAAAwT,gBAAA,SAAgBC,GACZ3T,KAAK4T,WAAaD,GAGtBf,EAAA1S,UAAA6H,sBAAA,WACI,GAAI/H,KAAK4T,WAAY,CACjB,IAAMC,EAAO7T,KAAK4T,WAAWhT,KAAK0P,iBAAkB,IACpDtQ,KAAKsT,SAASO,KAItBjB,EAAA1S,UAAA4T,eAAA,WACI9T,KAAKgT,YAAYzJ,sBAAsBvJ,OAG3C4S,EAAA1S,UAAA+H,kBAAA,WACIjI,KAAKgT,YAAYvJ,sBAAsBzJ,OAG3C4S,EAAA1S,UAAA6T,eAAA,SAAeC,GACXhU,KAAKiT,eAAenI,sBAAsB9K,KAAMgU,IAGpDpB,EAAA1S,UAAA+T,kBAAA,WACIjU,KAAKiT,eAAehI,yBAAyBjL,OAGjD4S,EAAA1S,UAAAgI,oBAAA,WACIlI,KAAKiT,eAAe/H,yBAAyBlL,OAGjD4S,EAAA1S,UAAAgU,WAAA,SAAWT,GACPzT,KAAKgK,YAAYI,oBAAoBpK,KAAMyT,IAG/Cb,EAAA1S,UAAAiU,gBAAA,WACInU,KAAKgK,YAAYO,sBAAsBvK,OAG3C4S,EAAA1S,UAAAiI,YAAA,WACInI,KAAKgK,YAAYQ,sBAAsBxK,OAG3C4S,EAAA1S,UAAAqP,uBAAA,SAAuBtC,GACnBjN,KAAKoU,qBAAuBnH,GAGhC2F,EAAA1S,UAAAkT,wBAAA,SAAwBtQ,GAChB9C,KAAKoU,sBAA6D,mBAA9BpU,KAAKoU,sBACzCpU,KAAKoU,qBAAqBtR,IAIlC8P,EAAA1S,UAAAoT,SAAA,SAASxQ,GACLoJ,EAAAhM,UAAMoT,SAAQ1S,KAAAZ,KAAC8C,IAEvB8P,GA9G6ByB,MAAAA,sCCezB,SAAAC,EAAYC,EAA8CzB,EAAyBC,GAAnF,IAAA3K,EACI8D,EAAAtL,KAAAZ,KAAMuU,EAAUzB,EAAWC,IAAe/S,YALtCoI,EAAA4K,YAA2B,IAAIjK,YAC/BX,EAAA6K,eAAiC,IAAIpI,eACrCzC,EAAA4B,YAA2B,IAAIA,YAInC5B,EAAK8K,kBAAoB,IAAI3K,iBAAiBH,GAC9CA,EAAKkB,OAAS,GACdlB,EAAK4C,UAAY,GACjB5C,EAAKkC,OAAS,KA2DtB,OAjFkC8B,UAAAA,EAAAA,GAyB9B5M,OAAAqC,eAAIyS,EAAApU,UAAA,mBAAgB,KAApB,WACI,OAAOF,KAAKkT,mDAGhBoB,EAAApU,UAAA8P,KAAA,WACIhQ,KAAKgT,YAAYhK,YAAYhJ,OAGjCsU,EAAApU,UAAAqT,KAAA,WACIvT,KAAKgT,YAAY7J,YAAYnJ,OAGjCsU,EAAApU,UAAAgJ,QAAA,SAAQmK,GACJnH,EAAAhM,UAAMgJ,QAAOtI,KAAAZ,KAACqT,GACdnH,EAAAhM,UAAMoT,SAAQ1S,KAAAZ,KAAC,KAGnBsU,EAAApU,UAAAsT,YAAA,SAAYC,GACRzT,KAAKgT,YAAY5J,mBAAmBpJ,KAAMyT,IAG9Ca,EAAApU,UAAA4T,eAAA,WACI9T,KAAKgT,YAAYzJ,sBAAsBvJ,OAG3CsU,EAAApU,UAAA+H,kBAAA,WACIjI,KAAKgT,YAAYvJ,sBAAsBzJ,OAG3CsU,EAAApU,UAAA6T,eAAA,SAAeC,GACXhU,KAAKiT,eAAenI,sBAAsB9K,KAAMgU,IAGpDM,EAAApU,UAAA+T,kBAAA,WACIjU,KAAKiT,eAAehI,yBAAyBjL,OAGjDsU,EAAApU,UAAAgI,oBAAA,WACIlI,KAAKiT,eAAe/H,yBAAyBlL,OAGjDsU,EAAApU,UAAAgU,WAAA,SAAWT,GACPzT,KAAKgK,YAAYI,oBAAoBpK,KAAMyT,IAG/Ca,EAAApU,UAAAiU,gBAAA,WACInU,KAAKgK,YAAYO,sBAAsBvK,OAG1CsU,EAAApU,UAAAiI,YAAA,WACGnI,KAAKgK,YAAYQ,sBAAsBxK,OAE3CsU,EAAApU,UAAAoT,SAAA,SAASxQ,GACLoJ,EAAAhM,UAAMoT,SAAQ1S,KAAAZ,KAAC8C,IAGvBwR,GAjFkCE,MAAAA,oCCoB9B,SAAAC,EAAYF,EAA6BzB,EAAyBC,GAAlE,IAAA3K,EACI8D,EAAAtL,KAAAZ,KAAMuU,EAAUzB,EAAWC,IAAe/S,YALtCoI,EAAA4K,YAA2B,IAAIjK,YAC/BX,EAAA4B,YAA2B,IAAIA,YAC/B5B,EAAA6K,eAAiC,IAAIpI,eAIzCzC,EAAK8K,kBAAoB,IAAI3K,iBAAiBH,GAC9CA,EAAKkB,OAAS,GACdlB,EAAKkC,OAAS,GACdlC,EAAK4C,UAAY,GAEjB5C,EAAKC,aAAaC,WAAU,SAACxF,GACvBsF,EAAK+K,iBAAmBrQ,IAC1BsF,EAAKgL,wBAAwBtQ,GAC7BsF,EAAK+K,eAAiBrQ,QAkFlC,OA/GkCsJ,UAAAA,EAAAA,GAkC9B5M,OAAAqC,eAAI4S,EAAAvU,UAAA,OAAI,KAAR,WACI,OAAOF,KAAK0U,WAEhB,SAAS3K,GACL/J,KAAK0U,MAAQ3K,mCAGjBvK,OAAAqC,eAAI4S,EAAAvU,UAAA,mBAAgB,KAApB,WACI,OAAOF,KAAKkT,mDAGhBuB,EAAAvU,UAAA8P,KAAA,WACIhQ,KAAKgT,YAAYhK,YAAYhJ,OAGjCyU,EAAAvU,UAAAqT,KAAA,WACIvT,KAAKgT,YAAY7J,YAAYnJ,OAGjCyU,EAAAvU,UAAAgJ,QAAA,SAAQmK,GACJnH,EAAAhM,UAAMgJ,QAAOtI,KAAAZ,KAACqT,GACdnH,EAAAhM,UAAMoT,SAAQ1S,KAAAZ,KAAC,KAGnByU,EAAAvU,UAAAsT,YAAA,SAAYC,GACRzT,KAAKgT,YAAY5J,mBAAmBpJ,KAAMyT,IAG9CgB,EAAAvU,UAAA4T,eAAA,WACI9T,KAAKgT,YAAYzJ,sBAAsBvJ,OAG3CyU,EAAAvU,UAAA+H,kBAAA,WACIjI,KAAKgT,YAAYvJ,sBAAsBzJ,OAG3CyU,EAAAvU,UAAA6T,eAAA,SAAeC,GACXhU,KAAKiT,eAAenI,sBAAsB9K,KAAMgU,IAGpDS,EAAAvU,UAAA+T,kBAAA,WACIjU,KAAKiT,eAAehI,yBAAyBjL,OAGjDyU,EAAAvU,UAAAgI,oBAAA,WACIlI,KAAKiT,eAAe/H,yBAAyBlL,OAGjDyU,EAAAvU,UAAAgU,WAAA,SAAWT,GACPzT,KAAKgK,YAAYI,oBAAoBpK,KAAMyT,IAG/CgB,EAAAvU,UAAAiU,gBAAA,WACInU,KAAKgK,YAAYO,sBAAsBvK,OAG1CyU,EAAAvU,UAAAiI,YAAA,WACGnI,KAAKgK,YAAYQ,sBAAsBxK,OAG3CyU,EAAAvU,UAAAqP,uBAAA,SAAuBtC,GACrBjN,KAAKoU,qBAAuBnH,GAG9BwH,EAAAvU,UAAAkT,wBAAA,SAAwBtQ,GAClB9C,KAAKsK,OAAO3J,OAAS,GACvBX,KAAKmI,cAEHnI,KAAKoU,sBAA6D,mBAA9BpU,KAAKoU,sBAC3CpU,KAAKoU,qBAAqBtR,IAI9B2R,EAAAvU,UAAAoT,SAAA,SAASxQ,GACLoJ,EAAAhM,UAAMoT,SAAQ1S,KAAAZ,KAAC8C,IAGvB2R,GA/GkCE,MAAAA,WCZtBC,eAAAA,eAAAA,QAAAA,iBAAAA,QAAAA,eAAc,IACtBA,eAAAA,eAAA,eAAA,GAAA,iBACAA,eAAAA,eAAA,aAAA,GAAA,eACAA,eAAAA,eAAA,aAAA,GAAA,eACAA,eAAAA,eAAA,KAAA,GAAA,mCCkCA,SAAAC,EAAYC,GAER9U,KAAK+U,aAAeD,EAAQC,aAC5B/U,KAAKgV,cAAgBF,EAAQE,cAC7BhV,KAAKiV,OAASH,EAAQG,OACtBjV,KAAKkV,cAAgBJ,EAAQ3H,KAC7BnN,KAAKsB,IAAMwT,EAAQxT,KAAO,GAC1BtB,KAAK2D,MAAQmR,EAAQnR,OAAS,GAC9B3D,KAAK8P,WAAagF,EAAQhF,YAAc,GACxC9P,KAAK6P,SAAWiF,EAAQjF,SACxB7P,KAAKgQ,KAAO8E,EAAQ9E,KACpBhQ,KAAKkJ,QAAU4L,EAAQ5L,QACvBlJ,KAAKqK,MAAQyK,EAAQzK,MACrBrK,KAAKmV,oBAAsBL,EAAQK,oBACnCnV,KAAKkQ,oBAAsB4E,EAAQ5E,oBAS3C,OANI2E,EAAA3U,UAAAkV,mBAAA,SAAmBhR,GACfpE,KAAKqV,sBAAwBjR,GAEjCyQ,EAAA3U,UAAAoV,4BAAA,SAA4BlR,GAC1BpE,KAAKuV,6BAAgCC,IAANpR,GAAyBA,GAE9DyQ,KC1DAY,6BAAA,WAEE,SAAAA,KAuCF,OArCEA,EAAAvV,UAAAwV,SAAA,SAASC,GAGP,OAAO,SAACtO,GAEN,IAIIuO,EAJE9S,EAAQuE,EAAQvE,MAClB+S,EAAgB,KACdrI,EAA8BmI,EAAMnI,oBACpCC,EAAgCkI,EAAMlI,yBAsB5C,OAnBIpG,GAAWA,EAAQgI,kBAAoBhI,EAAQgI,iBAAiBvG,WAChEzB,EAAQgI,iBAAiBvG,UAAUa,SAAQ,SAAAmI,GAEzC,IAAMC,EAAmBD,EAAStK,UAC9BuK,EAAiBhB,OAASvD,IAExBqI,EADA9D,GAAoBpS,MAAMqS,QAAQD,EAAiBjP,OACnCgP,EAAStK,UAAU1E,MAEnBgP,EAAStK,UAAU1E,OAASgP,EAAStK,UAAU1E,MAAMA,MACjEgP,EAAStK,UAAU1E,MAAMA,MAAQgP,EAAStK,UAAU1E,UAM5B,iBAA7B2K,IAA8F,IAArDA,EAAyBzM,QAAQ6U,KACnFD,GAAa,GAGXA,IAAe9S,EACV,CAAEgT,qBAAwB,CAAEpL,QAAUiL,EAAMjL,UAG9C,OAGb+K,EAzCA,GCAAM,6BAAA,WAEE,SAAAA,KA0CF,OAxCEA,EAAA7V,UAAAwV,SAAA,SAASC,GAEP,OAAO,SAACtO,GAEN,IAAMvE,EAAQuE,EAAQvE,MAClB+S,EAAgB,KACdrI,EAA8BmI,EAAMnI,oBACpCC,EAAgCkI,EAAMlI,yBACxCuI,GAAwB,EAyB5B,OAvBIlT,GACEuE,GAAWA,EAAQgI,kBAAoBhI,EAAQgI,iBAAiBvG,WAChEzB,EAAQgI,iBAAiBvG,UAAUa,SAAQ,SAAAmI,GAEzC,IAAMC,EAAmBD,EAAStK,UAC9BuK,EAAiBhB,OAASvD,IAExBqI,EADAlW,MAAMqS,QAAQD,EAAiBjP,OACfiP,EAAiBjP,MAEjBiP,EAAiBjP,OAA2C,iBAA3BiP,EAAiBjP,OAAsBiP,EAAiBjP,MAAMA,MAC3GiP,EAAiBjP,MAAMA,MAAQiP,EAAiBjP,OAIrD+S,EAE0C,iBAA7BpI,IAA8F,IAArDA,EAAyBzM,QAAQ6U,KAC1FG,GAAmB,GAFnBA,GAAmB,KAQxBA,EAIE,KAHE,CAAEC,qBAAwB,CAAEvL,QAAUiL,EAAMjL,YAM3DqL,EA5CA,GCDAG,kBAAA,WAAA,SAAAA,KAaA,OAXEA,EAAAhW,UAAAwV,SAAA,SAASrO,GAEP,GAAIA,EAAQ4B,OACV,OAAO,KAGT,IAAMnG,EAAauE,EAAQvE,MAG3B,OAFkC,MAATA,GAAkC,iBAAVA,GAAuC,IAAjBA,EAAMnC,OAE5D,CAAEkP,UAAY,GAAS,MAE5CqG,EAbA,GCCAC,cAAA,WAEE,SAAAA,KAoBF,OAlBEA,EAAAjW,UAAAwV,SAAA,SAASrO,GAEP,GAAIA,EAAQ4B,OACV,OAAO,KAGT,IAAMnG,EAAQuE,EAAQvE,MAEtB,OAAIA,GAA0B,IAAjBA,EAAMnC,QAGM,cAAcyV,KAAK,IAAIC,KAAKvT,GAAOwT,YAE5C,KAAO,CAAEC,MAAQ,GAExB,MAGbJ,EAtBA,GCDAK,aAAA,WAAA,SAAAA,KAmBA,OAhBEA,EAAAtW,UAAAwV,SAAA,SAASe,GAEP,OAAO,SAACpP,GAEN,GAAIA,EAAQ4B,OACV,OAAO,KAET,GAAI5B,EAAQvE,OAAkC,IAAzBuE,EAAQvE,MAAMnC,OAAc,CAE/C,IAAMyD,EAAYiD,EAAQvE,MAC1B,OAAOsB,GAAKqS,EAAM,KAAO,CAAEA,IAAO,CAAEC,cAAeD,EAAKE,YAAavS,IAGvE,OAAO,OAGboS,EAnBA,GCAAI,aAAA,WAAA,SAAAA,KAmBA,OAjBEA,EAAA1W,UAAAwV,SAAA,SAASmB,GAEP,OAAO,SAACxP,GAEN,GAAIA,EAAQ4B,OACV,OAAO,KAGT,GAAI5B,EAAQvE,OAAkC,IAAzBuE,EAAQvE,MAAMnC,OAAc,CAE/C,IAAMyD,EAAYiD,EAAQvE,MAC1B,OAAOsB,GAAKyS,EAAM,KAAO,CAAEA,IAAO,CAAEH,cAAeG,EAAKF,YAAavS,IAGvE,OAAO,OAGbwS,EAnBA,GCCAE,iBAAA,WAAA,SAAAA,KA0BA,OAxBEA,EAAA5W,UAAAwV,SAAA,SAASe,GAEP,OAAO,SAACpP,GAEN,GAAIA,EAAQ4B,OACV,OAAO,KAGT,GAAI5B,EAAQvE,OAAkC,IAAzBuE,EAAQvE,MAAMnC,OAAc,CAE/C,IAAK,IAAIwV,eAAgBT,SAASrO,EAAQvE,OAOxC,MAAO,CAAEiU,QAAW,CAAEC,aAAgBP,IALtC,IAAMQ,EAAgB,IAAIZ,KAAKhP,EAAQvE,OAEvC,OAAOmU,EAAQC,UAAYT,EAAIS,UAAY,CAAEH,QAAW,CAAEC,aAAgBP,EAAKU,WAAYF,IAAc,KAO7G,OAAO,OAGbH,EA1BA,GCAAM,iBAAA,WAAA,SAAAA,KA0BA,OAxBEA,EAAAlX,UAAAwV,SAAA,SAASmB,GAEP,OAAO,SAACxP,GAEN,GAAIA,EAAQ4B,OACV,OAAO,KAGT,GAAI5B,EAAQvE,OAAkC,IAAzBuE,EAAQvE,MAAMnC,OAAc,CAE/C,IAAK,IAAIwV,eAAgBT,SAASrO,EAAQvE,OAOxC,MAAO,CAAEuU,QAAW,CAAEL,aAAgBH,IALtC,IAAMI,EAAgB,IAAIZ,KAAKhP,EAAQvE,OAEvC,OAAOmU,EAAQC,UAAYL,EAAIK,UAAY,CAAEG,QAAW,CAAEL,aAAgBH,EAAKM,WAAYF,IAAc,KAO7G,OAAO,OAGbG,EA1BA,GCAAE,+BAAA,WAEE,SAAAA,KAuBF,OArBEA,EAAApX,UAAAwV,SAAA,SAASrO,GAEP,GAAIA,EAAQ4B,OACV,OAAO,KAGT,IAAMnG,EAAQuE,EAAQvE,MAChByU,EAAY,IAAIlB,KAEtB,GAAIvT,GAA0B,IAAjBA,EAAMnC,UAEZ,IAAIwV,eAAgBT,SAAS5S,GAIhC,OAFgB,IAAIuT,KAAKvT,GAEhBoU,UAAYK,EAAIL,UAAY,CAAEM,uBAAyB,GAAS,KAI7E,OAAO,MAEXF,EAzBA,iCCDA,SAAAG,KA4OA,OA1OEA,EAAAvX,UAAAwX,QAAA,SAAQC,EAAQC,GAEd,IAAInW,EAIJ,OAHIkW,GAAUC,IACZnW,GAAKmW,GAAUD,EAAS,IAAMA,EAAS,MAAME,QAAQ,IAEhDF,GAAUC,EAASE,WAAWrW,GAAK,MAG5CgW,EAAAvX,UAAA6X,oBAAA,SAAoBC,EAAcL,EAAQC,GACzC,IAAIK,EAECN,GAAUC,IACZK,GAAOL,GAAUD,EAAS,IAAMA,EAAS,MAAME,QAAQ,IAEzD,IACIK,EADEC,EAAmBC,OAAAA,MAAQJ,GAEjC,GAAIG,EAAkB,CACpB,IAAME,EAAkB7Y,OAAOkS,KAAKyG,GAAkBG,KACpD,SAAChX,GAAQ,OAAA6W,EAAiB7W,MAAMgX,KAAK,SAACC,GAAM,OAAAA,KACtCC,EAAgBhZ,OAAOkS,KAAKyG,GAC5BM,EAAeJ,EAAgB,GAC/BK,EAAoB,GACtBT,EAAMQ,EACRC,EAAkBlU,KAAKiU,GAEvBE,OAAAA,QAAUN,GAAiB,SAACvV,GACxBA,GAASmV,GACbS,EAAkBlU,KAAK1B,MAIzB,IAAM8V,EAAqBC,OAAAA,KAAOH,IAKlCR,EADgBM,EAHOM,OAAAA,UAAYT,GAAiB,SAACxT,GACrD,OAAOA,IAAM+T,MAGcG,QAAQ,KAAM,KACpBC,SAAS,SAE5Bd,EAAmB,KADnBA,EAAmBA,EAAiBvJ,UAAU,EAAG,KAIzB,MAArBuJ,GAAiD,MAArBA,GAAiD,MAArBA,GAAiD,OAArBA,IACvFA,EAAmB,MAKzB,OAAQD,GAAOE,EAAoBD,EAAmB,MAExDT,EAAAvX,UAAA+Y,0BAAA,SAA0BC,EAAoBvB,EAAQC,GACpD,IAAIuB,EACAjB,EACAP,GAAUC,IACZD,EAASG,WAAWH,GAAQE,QAAQ,IAIjCF,EAFqB,IAESA,EADT,IAExBO,GAAoB,EAElBiB,EAAaC,OAAAA,OAASF,GAAoB,SAACG,GAC3C,OAAOvB,WAAWuB,EAAkB,QAAGxB,QAAQ,KAAOF,KAI1D,IAAMQ,EAAmBC,OAAAA,MAAQe,GACjC,GAAIhB,EAAkB,CACpB,IAAME,EAAkB7Y,OAAOkS,KAAKyG,GAAkBG,KACpD,SAAChX,GAAQ,OAAA6W,EAAiB7W,MAAMgX,KAAK,SAACC,GAAM,OAAAA,KACtCC,EAAgBhZ,OAAOkS,KAAKyG,GAC5BM,EAAeJ,EAAgB,GAC/BiB,EAAoB,GACtB1B,EAASa,EACXa,EAAkB9U,KAAKiU,GAEvBE,OAAAA,QAAUN,GAAiB,SAACvV,GACxBA,GAAS8U,GACb0B,EAAkB9U,KAAK1B,MAKzB,IAAMyW,EAAqBV,OAAAA,KAAOS,IAKlCpB,EADgBM,EAHOM,OAAAA,UAAYT,GAAiB,SAACxT,GACrD,OAAOA,IAAM0U,MAGcR,QAAQ,KAAM,KACpBC,SAAS,SAE5Bd,EAAmB,KADnBA,EAAmBA,EAAiBvJ,UAAU,EAAG,KAGzB,MAArBuJ,GAAiD,MAArBA,GAAiD,MAArBA,GAAkD,OAArBA,IACxFA,EAAmB,MAKzB,OAAQP,GAAUC,EAAWM,EAAmB,MAGlDT,EAAAvX,UAAAsZ,uBAAA,SAAuBC,EAAiB9B,EAAQC,GAE9C,IACIM,EADEC,EAAmBC,OAAAA,MAAQqB,GAEjC,GAAItB,EAAkB,CACpB,IAAME,EAAkB7Y,OAAOkS,KAAKyG,GAAkBG,KACpD,SAAChX,GAAQ,OAAA6W,EAAiB7W,MAAMgX,KAAK,SAACC,GAAM,OAAAA,KACtCC,EAAgBhZ,OAAOkS,KAAKyG,GAC5BM,EAAeJ,EAAgB,GAC/BqB,EAAoB,GACtB/B,EAASc,EACXiB,EAAkBlV,KAAKiU,GAEvBE,OAAAA,QAAUN,GAAiB,SAACvV,GACxBA,GAAS6U,GACb+B,EAAkBlV,KAAK1B,MAIzB,IAAM6W,EAAqBd,OAAAA,KAAOa,IAKlCxB,EADgBM,EAHOM,OAAAA,UAAYT,GAAiB,SAACxT,GACrD,OAAOA,IAAM8U,MAGcZ,QAAQ,KAAM,KACpBC,SAAS,SAE5Bd,EAAmB,KADnBA,EAAmBA,EAAiBvJ,UAAU,EAAG,KAIzB,MAArBuJ,GAAiD,MAArBA,GAAiD,MAArBA,GAAkD,OAArBA,IACxFA,EAAmB,MAKzB,OAAQP,GAAUC,GAAUO,EAAoBD,EAAmB,MAGrET,EAAAvX,UAAA0Z,QAAA,SAAQ7P,GAEN,OAAIA,MAAAA,GAA6C,KAARA,GAAsB,SAARA,GAA0B,cAARA,MAIrEpK,MAAMqS,QAAQjI,IAAuB,IAAfA,EAAIpJ,SAMhC8W,EAAAvX,UAAA2Z,cAAA,SAAcnH,EAAOoH,GAEnB,GAAIna,MAAMqS,QAAQ8H,GAAU,CAE1B,GAAuB,IAAnBA,EAAQnZ,OACV,OAAO,EAKT,IAFA,IAAIoZ,GAAW,EAENvZ,EAAI,EAAGA,EAAIsZ,EAAQnZ,OAAQH,IAAK,CACvC,IAAMuJ,EAAM+P,EAAQtZ,IACQ,IAAxBkS,EAAM1R,QAAQ+I,KAChBgQ,GAAW,GAIf,OAAOA,EAEP,OAAmC,IAA5BrH,EAAM1R,QAAQ8Y,IAGzBrC,EAAAvX,UAAA8Z,4BAAA,SAA4B1Y,EAAKoR,GAIjC,OAHiBA,EAAM4F,KAAI,SAAS2B,GAClC,OAAOA,EAAK3Y,OAIdmW,EAAAvX,UAAAga,WAAA,SAAWpX,EAAOqX,EAAQC,GAKxB,GAHAD,EAASA,GAAU,aACnBC,EAASA,GAAU,UAEbtX,aAAiBuT,OAGjBvT,OADJA,EAAQ,IAAIuT,KAAKvT,IAEf,MAAM,IAAIuX,MAAM,yDAKpB,OAAOvX,GAIT2U,EAAAvX,UAAAoa,iBAAA,SAAiB5H,EAAOoH,GAEtB,GAAIna,MAAMqS,QAAQ8H,GAAU,CAC1B,GAAuB,IAAnBA,EAAQnZ,OACV,OAAO,EAIT,IAFA,IAAIoZ,GAAW,EAENvZ,EAAI,EAAGA,EAAIsZ,EAAQnZ,OAAQH,IAAK,CAEvC,IAAMuJ,EAAM+P,EAAQtZ,IACQ,IAAxBkS,EAAM1R,QAAQ+I,KAChBgQ,GAAW,GAGf,OAAOA,EAEP,OAAmC,IAA5BrH,EAAM1R,QAAQ8Y,IAIzBta,OAAAqC,eAAI4V,EAAAvX,UAAA,kBAAe,KAAnB,WAEE,MAAO,CACLoa,iBAFata,KAEYsa,iBACzB5C,QAHa1X,KAGG0X,QAChBK,oBAJa/X,KAIe+X,oBAC5BkB,0BALajZ,KAKqBiZ,0BAClCO,uBANaxZ,KAMkBwZ,uBAC/BI,QAPa5Z,KAOG4Z,QAChBC,cARa7Z,KAQS6Z,cACtBG,4BATaha,KASuBga,8DAG1CvC,KC5OA8C,YAAA,WAIE,SAAAA,KACF,OAHgBA,EAAAC,+BAAgC,EAGhDD,EALA,GCIAE,sBAAA,WAEE,SAAAA,KA0BF,OAxBEA,EAAAva,UAAAwV,SAAA,SAASC,EAAoCnK,GAG3C,OAAO,SAACnE,GAEN,IAAKkT,YAAYC,8BACf,OAAO,KAGT,IAAMhK,EAAamF,EAAMtI,oBAInBqN,GAHS,IAAIjD,oBAGYiD,gBAG/B,OAFiB,IAAIpK,kBAAmBC,YAAYC,EAAYnJ,EAASqT,EAHhD,GAGmFlP,GAE/FqF,MAEJ,CAAE8J,cAAiB,CAAEnK,WAAcA,EAAY9F,QAAUiL,EAAMjL,UAGjE,OAGb+P,EA5BA,GCLAG,SAAA,WAAA,SAAAA,KAmBA,OAjByBA,EAAAC,mBAAqB,0BAErBD,EAAAE,iBAAmB,4BAEnBF,EAAAG,4BAA8B,8BAE9BH,EAAAI,eAAiB,mCAEjBJ,EAAAK,eAAiB,mCAEjBL,EAAAM,aAAe,+BAEfN,EAAAO,aAAe,+BAEfP,EAAAQ,QAAU,4BAEVR,EAAAS,QAAU,4BACnCT,EAnBA,gCCyBE,SAAAU,KAoJF,OAlJEA,EAAApb,UAAAqb,cAAA,SAAchQ,EAAwBC,GAAtC,IAAApD,EAAApI,KAEQwb,EAAmB,GAyCzB,OAvCIjQ,EAASuE,YAEX6I,OAAAA,QAAUpN,EAASuE,YAAY,SAACgD,GAE9B,OAAQA,EAAU3F,MAChB,IAAK,OACHqO,EAAKhX,KAAK4D,EAAKqT,eAC0C3I,EAAY4I,kBAGnEF,EAAKhX,KAAK4D,EAAKuT,gCAEjB,MACF,IAAK,gBACHH,EAAKhX,KAAK4D,EAAKwT,sBAAsBlG,SAAsC5C,EAAWtH,IACtF,MACF,IAAK,MACHgQ,EAAKhX,KAAK4D,EAAKyT,qBAA0C/I,EAAW+D,MACpE,MACF,IAAK,MACH2E,EAAKhX,KAAK4D,EAAK0T,qBAA0ChJ,EAAW2D,MACpE,MACF,IAAK,sBACH+E,EAAKhX,KAAK4D,EAAK2T,6BAA6BrG,SAAqC5C,IACjF,MACF,IAAK,sBACH0I,EAAKhX,KAAK4D,EAAK4T,6BAA6BtG,SAAqC5C,QAMrFvH,EAASsE,UAA0C,iBAAvBtE,EAAiB,UAAwC,SAAtBA,EAASsE,UAC1E2L,EAAKhX,KAAKxE,KAAKic,mBAMVT,GAGThc,OAAAqC,eAAIyZ,EAAApb,UAAA,+BAA4B,KAAhC,WACE,OAAO,IAAIuV,8DAGbjW,OAAAqC,eAAIyZ,EAAApb,UAAA,+BAA4B,KAAhC,WACE,OAAO,IAAI6V,8DAGbvW,OAAAqC,eAAIyZ,EAAApb,UAAA,oBAAiB,KAArB,WACE,OAAO,IAAIgW,mBAAoBR,0CAGjClW,OAAAqC,eAAIyZ,EAAApb,UAAA,gBAAa,KAAjB,WACE,OAAO,IAAIiW,eAAgBT,0CAG7BlW,OAAAqC,eAAIyZ,EAAApb,UAAA,iCAA8B,KAAlC,WACE,OAAO,IAAIoX,gCAAiC5B,0CAG9ClW,OAAAqC,eAAIyZ,EAAApb,UAAA,mBAAgB,KAApB,WACE,OAAO,IAAIkX,kBAAmB1B,0CAGhClW,OAAAqC,eAAIyZ,EAAApb,UAAA,mBAAgB,KAApB,WACE,OAAO,IAAI4W,kBAAmBpB,0CAGhClW,OAAAqC,eAAIyZ,EAAApb,UAAA,qBAAkB,KAAtB,WACE,OAAOgc,MAAAA,WAAWC,2CAGpB3c,OAAAqC,eAAIyZ,EAAApb,UAAA,qBAAkB,KAAtB,WACE,OAAOgc,MAAAA,WAAWE,2CAGbd,EAAApb,UAAA4b,qBAAP,SAA4BrF,GAC1B,OAAO,IAAID,cAAed,SAASe,IAG9B6E,EAAApb,UAAA2b,qBAAP,SAA4BhF,GAE1B,OAAO,IAAID,cAAelB,SAASmB,IAGrCrX,OAAAqC,eAAIyZ,EAAApb,UAAA,wBAAqB,KAAzB,WAEE,OAAO,IAAIua,uDAGNa,EAAApb,UAAAmc,OAAP,SAAcA,EAAa9Q,GAEzB,IAAM+Q,EAA0B,GAEhC,IAAK,IAAMC,KAAYF,EACnB,GAAIA,EAAOxc,eAAe0c,GAEtB,OAAQA,GACN,IAAK,WACHD,EAAS9X,KAAKoW,SAASC,oBACvB,MACF,IAAK,OACHyB,EAAS9X,KAAKoW,SAASE,kBACvB,MACF,IAAK,wBACHwB,EAAS9X,KAAKoW,SAASG,6BACvB,MACF,IAAK,YACHuB,EAAS9X,KAAKoW,SAASI,eAAejC,QAAQ,cAAesD,EAAOG,UAAUC,iBAC9E,MACF,IAAK,YACHH,EAAS9X,KAAKoW,SAASI,eAAejC,QAAQ,cAAesD,EAAOK,UAAUD,iBAC9E,MACF,IAAK,UACHH,EAAS9X,KAAKoW,SAASM,aAAanC,QAAQ,YAAasD,EAAOhF,QAAQL,eACxE,MACF,IAAK,UACHsF,EAAS9X,KAAKoW,SAASO,aAAapC,QAAQ,YAAasD,EAAOtF,QAAQC,eACxE,MACF,IAAK,MACHsF,EAAS9X,KAAKoW,SAASQ,QAAQrC,QAAQ,QAASsD,EAAOxF,IAAIH,gBAC3D,MACF,IAAK,MACH4F,EAAS9X,KAAKoW,SAASS,QAAQtC,QAAQ,QAASsD,EAAO5F,IAAIC,gBAC3D,MACF,IAAK,gBACH4F,EAAS9X,KAAK6X,EAAsB,cAAE3R,SACtC,MACF,IAAK,uBACH4R,EAAS9X,KAAK6X,EAA6B,qBAAE3R,SAC7C,MACF,IAAK,uBACH4R,EAAS9X,KAAK6X,EAA6B,qBAAE3R,SAMzD,OAAO4R,GApJEhB,EAAiBna,WAAA,CAD7B2F,KAAAA,iDACYwU,wCCPT,SAAAqB,EAAoBC,EACXC,EACAC,GAFW9c,KAAA4c,iBAAAA,EACX5c,KAAA6c,iBAAAA,EACA7c,KAAA8c,kBAAAA,EA4Db,OAzDIH,EAAAzc,UAAA6c,wBAAA,SAAwBxR,EAAwBlE,EAC5CmE,GACA,IAAMoF,EACF5Q,KAAK4c,iBAAiBrM,YAAYhF,EAASrC,QAAmB7B,EAC1DrH,KAAK6c,iBAAiBnC,gBAAiB,GAAIlP,GAC7CT,EAAqB,CACvBI,WAAW,EACX6R,sBAAuBzR,EAASrC,QAChCkC,8BAA+B,WAC3B,IAAMlI,EAAS0N,EAASC,MACxB9F,EAASI,UAAYjI,IAG7B,OAAO6H,GAGX4R,EAAAzc,UAAA+c,qBAAA,SAAqB1R,EAAwBlE,EACzCmE,GAEA,IAAMwE,EAAYzE,EAASyE,KACrBlN,EAAgC,iBAATkN,EAAoBhQ,KAAKkd,0BAA0BlN,GAAQzE,EAASyE,KAI3FnJ,EAAe7G,KAAK8c,kBAAkBjW,eAEtC+J,EAAqB5Q,KAAK4c,iBAAiBrM,YAAYzN,EAAOuE,EACpErH,KAAK6c,iBAAiBnC,gBAAiB,GAAIlP,GAErCnC,EAAe,CACjBQ,QAAQ,EACRsT,mBAAoBra,EACpB8G,2BAA4B,WAKlBP,EAAMQ,QADS,IAAjBhD,GAGkB+J,EAASC,QAIvC,OAAOxH,GAGXsT,EAAAzc,UAAAgd,0BAAA,SAA0BlN,GAExB,OAAIA,EAAKlN,iBAAiBnD,MAGZ,oBADa,IAAOqQ,EAAKlN,MAAMsa,KAAK,OAAW,KACf,KAAOpN,EAAKC,MAAQ,IAI3D,6CA5D6BK,wBACXmH,0BACC9Q,oBAJnBgW,EAAsBxb,WAAA,CADlC2F,KAAAA,6CAGyCwJ,iBACXmH,mBACC9Q,oBAJnBgW,+BCHT,SAAAU,EAAoBT,EAA4CC,GAA5C7c,KAAA4c,iBAAAA,EAA4C5c,KAAA6c,iBAAAA,EAkBpE,OAhBIQ,EAAAnd,UAAAod,yBAAA,SAAyB/R,EAAwBlE,EAC7CmE,GACA,IAAMoF,EACF5Q,KAAK4c,iBAAiBrM,YAAYhF,EAASlB,MAAMkT,oBAAqBlW,EAClErH,KAAK6c,iBAAiBnC,gBAAiB,GAAIlP,GAC7CrB,EAAmB,CACrBD,OAAO,EACPqT,oBAAqBhS,EAASlB,MAAMkT,oBACpC3S,aAAcW,EAASlB,MAAMK,QAC7BC,0BAA2B,WACvB,IAAMzH,EAAS0N,EAASC,MACxB1G,EAAUD,MAAQhH,IAG1B,OAAOiH,4CAhB2BmG,wBAA4CmH,sBADzE4F,EAAalc,WAAA,CADzB2F,KAAAA,6CAEyCwJ,iBAA4CmH,sBADzE4F,oCCaT,SAAAG,EAAYC,EACRC,EAAwDC,GAAA3d,KAAA2d,cAAAA,EAL5D3d,KAAAuU,SAAW,GAMPvU,KAAKyd,kBAAoBA,EACzBzd,KAAK0d,uBAAyBA,EA4HtC,OAzHIF,EAAAtd,UAAA0d,qBAAA,SAAqBC,EAA8C1R,EAC/D2R,EAA2BtS,GAC3B,GAAIqS,aAAyBhJ,aAAc,CACvC,GAAIgJ,EAAcE,cAAgBnJ,QAAAA,eAAeH,aAC7C,OAAOzU,KAAKge,kBAAkBH,EAAe1R,EAAeX,GAEhE,GAAIqS,EAAcE,cAAgBnJ,QAAAA,eAAeN,aAC7C,OAAOtU,KAAKie,uBAAuBJ,EAAeC,EAAkB3R,EAAeX,GAGvF,GAAIqS,EAAcE,cAAgBnJ,QAAAA,eAAehC,eAC7C,OAAO5S,KAAKke,oBAAoBL,EAAe1R,EAAeX,GAGtE,OAAO,MAGXgS,EAAAtd,UAAA+d,uBAAA,SAAuB1S,EAAwBuS,EAC3C3R,EAA8BX,GAC9B,IAAM2S,EAAY,IAAI7J,aAAa,IACnCtU,KAAKoe,oBAAoB7S,EAAU4S,EAAW3S,GAC9CxL,KAAKqe,WAAW9S,EAAU4S,EAAW3S,GACjCW,aAAyBmI,cACzBnI,EAAcmS,WAAW/S,EAASjK,IAAK6c,GAG3C,IAAMI,EAAUhT,EAMhB,OAJIuS,GAAoBS,GAAWA,EAAQC,UAAU7d,OAAS,GAC1DX,KAAKye,gCAAgCF,EAAQC,UAAWL,EAAW3S,GAGhE2S,GAGXX,EAAAtd,UAAAue,gCAAA,SAAgCD,EAA2BrS,EAA6BX,GAAxF,IAAApD,EAAApI,KAEQwe,EAAU7d,OAAS,GACnB6d,EAAU7U,SAAQ,SAAAoG,GACd,IAAM2O,EAAYtW,EAAKwV,qBAAqB7N,EAAS5D,GAAe,EAAMX,GACxD,OAAdkT,GACAvS,EAAcwS,WAAW5O,EAAQzO,IAAKod,OAOtDlB,EAAAtd,UAAA8d,kBAAA,SAAkBzS,EAAwBY,EAA8BX,GAEpE,IACKoT,EADC9O,EAAa9P,KAAKyd,kBAAkBlC,cAAchQ,EAAUC,GAclE,OAXKoT,EADA9O,GAAcA,EAAWnP,OAAS,EACtB,IAAI8T,aAAa,GAAI3E,EAAW,IAEjC,IAAI2E,aAAa,KAEvB1D,KAAOxF,EAASjK,IAC1BtB,KAAKoe,oBAAoB7S,EAAUqT,EAAWpT,GAC9CxL,KAAKqe,WAAW9S,EAAUqT,EAAWpT,GACjCW,aAAyBmI,cACzBnI,EAAcmS,WAAW/S,EAASjK,IAAKsd,GAGpCA,GAGXpB,EAAAtd,UAAAge,oBAAA,SAAoB3S,EAAwBY,EAA8BX,GAEtE,IAAM1I,EAAQyI,EAASwJ,cAAgB,GACjCjF,EAAa9P,KAAKyd,kBAAkBlC,cAAchQ,EAAUC,GAE5DnE,EAAU,IAAIuL,eAAe9P,EAAOgN,GAU1C,OATAzI,EAAQ0J,KAAOxF,EAASjK,IACxBtB,KAAKoe,oBAAoB7S,EAAUlE,EAASmE,GAC5CxL,KAAKqe,WAAW9S,EAAUlE,EAASmE,GACnCxL,KAAK6e,eAAetT,EAAUlE,EAAUmE,EAAOA,EAAK4F,qBAAqBC,YAAc,MAEnFlF,aAAyBmI,cACzBnI,EAAcmS,WAAW/S,EAASjK,IAAK+F,GAGpCA,GAGHmW,EAAAtd,UAAAme,WAAR,SAAmB9S,EACflE,EAAuDmE,GACvD,GAAID,EAASlB,OAA4B,KAAnBkB,EAASlB,MAAc,CACzC,IAAMyU,EAAQ9e,KAAK2d,cAAcL,yBAAyB/R,EAAUlE,EAASmE,GAC7EnE,EAAQ6M,WAAW4K,KAGnBtB,EAAAtd,UAAAke,oBAAR,SAA4B7S,EACxBlE,EAAuDmE,GACvD,GAAID,EAASyE,MAA0B,KAAlBzE,EAASyE,KAAa,CACvC,IAAM3G,EAAQrJ,KAAK0d,uBAAuBT,qBAAqB1R,EAAUlE,EAASmE,GAClFnE,EAAQmM,YAAYnK,GAGxB,GAAIkC,EAASrC,SAAgC,KAArBqC,EAASrC,QAAgB,CAC7C,IAAMA,EACFlJ,KAAK0d,uBAAuBX,wBAAwBxR,EAAUlE,EAASmE,GAC3EnE,EAAQ0M,eAAe7K,KAIvBsU,EAAAtd,UAAA2e,eAAR,SAAuBtT,EACnBlE,EAAyB0X,GACzB,GAAIxT,EAAS2E,qBAAwD,KAAjC3E,EAAS2E,oBAA4B,CACrE,IAAMO,EAA6B,IAAIgH,mBAEjC7G,GAD2B,IAAIN,kBACHC,YAAYhF,EAAS2E,oBACjD7I,EACFoJ,EAAOiK,gBACPqE,GAEJ1X,EAAQqM,gBAAgB9C,EAASC,gDA1HVyK,yBACHqB,8BAA+CU,iBANlEG,EAAkBrc,WAAA,CAD9B2F,KAAAA,6CAMkCwU,kBACHqB,uBAA+CU,iBANlEG,MCnBAwB,eAAiB,26GCK1B,SAAAC,IADQjf,KAAAkf,aAAoB,GA0BhC,OAtBI1f,OAAAqC,eAAIod,EAAA/e,UAAA,cAAW,KAAf,WACI,OAAOF,KAAKkf,8CAGhBD,EAAA/e,UAAAif,mBAAA,SAAmB7d,EAAayd,EAAiBK,GAC7C,QAD6C,IAAAA,IAAAA,GAAA,GACzCA,EAEA,IAAK,IAAMva,KAAKka,EACZpN,QAAQ0N,IAAI,cAAexa,EAAGka,EAAWla,IACzC7E,KAAKmf,mBAAmBta,EAAGka,EAAWla,IAAI,GAG9C7E,KAAKqR,YAAY/P,IACjBqQ,QAAQC,KAAK,oCAAqCtQ,GAEtDtB,KAAKkf,aAAa5d,GAAOyd,GAG7BE,EAAA/e,UAAAof,gBAAA,SAAgBhe,UACLtB,KAAKkf,aAAa5d,IAxBpB2d,EAAW9d,WAAA,CADvB2F,KAAAA,iDACYmY,MCqBbM,sBAAA,WAkBE,SAAAA,EACU9B,EACApM,EACAmO,EACkBC,GAHlBzf,KAAAyd,kBAAAA,EACAzd,KAAAqR,YAAAA,EACArR,KAAAwf,kBAAAA,EACkBxf,KAAAyf,SAAAA,EAhBrBzf,KAAA0f,gBAA2C,GAK3C1f,KAAA2f,aAAc,EAYnB3f,KAAK4f,UAAY,EAqMrB,OAlMSL,EAAArf,UAAA2f,SAAP,WAAA,IAAAzX,EAAApI,KAGE,GAFAA,KAAK8f,oBACL9f,KAAK+f,kBACD/f,KAAKwM,MAAQxM,KAAKwM,KAAKhB,KAAM,CAC/B,IAAMlE,EAAMtH,KAAKwM,KAAKhB,KAAKwU,oBAAoBC,YAC3C3Y,GAAOA,IAAQtH,KAAK4f,YACtB5f,KAAK4f,UAAYtY,GAGjBtH,KAAKwM,MAA6C,SAArCxM,KAAKwM,KAAKjB,SAAS2J,eAClClV,KAAKwf,kBAAkBtY,oBAAoBoB,WACzC,SAACtD,GACCoD,EAAK8X,gBAAgBlb,MAIvBhF,KAAKwM,MAA6C,YAArCxM,KAAKwM,KAAKjB,SAAS2J,gBAClClV,KAAK2f,aAAgB3f,KAAKwM,KAAKjB,SAA2B4U,YAGxDngB,KAAKogB,iBACPpgB,KAAKogB,gBAAgBC,kBAAkBrgB,OAMpCuf,EAAArf,UAAAmgB,kBAAP,SAAyBjS,GACvBpO,KAAK0f,gBAAgBlb,KAAK4J,IAGrBmR,EAAArf,UAAA4f,kBAAP,WACM9f,KAAKwM,MAAQxM,KAAKwM,KAAKjB,SAAS0J,QACG,kBAArCjV,KAAKwM,KAAKjB,SAAS2J,gBAEnBlV,KAAK+e,WAAa/e,KAAKqR,YAAYA,YAAYrR,KAAKwM,KAAKjB,SAASwT,YAuB9D/e,KAAK+e,YAAc/e,KAAKwM,KAAKjB,SAAS+U,oBACxCtgB,KAAK+e,WAAWuB,kBAAoBtgB,KAAKwM,KAAKjB,SAAS+U,qBAKtDf,EAAArf,UAAA6f,gBAAP,WACM/f,KAAKwM,MAAQxM,KAAKwM,KAAKjB,SAAS0J,QAA+C,SAArCjV,KAAKwM,KAAKjB,SAAS2J,gBAC/DlV,KAAK+e,WAAa/e,KAAKqR,YAAYA,YAAYrR,KAAKwM,KAAKjB,SAASwT,cAOtEQ,EAAArf,UAAAqgB,aAAA,SAAa/T,GACX,GAAoC,YAAhCA,EAAKjB,SAAS2J,cAA6B,CAC7C,IAAIsL,GAAsB,EAQ1B,OAP+BhhB,OAAOkS,KAAKlF,EAAKC,UAAUgU,OAAM,SAACpb,GAC/D,IAAIqb,EAAYlU,EAAKC,SAASpH,GAI9B,OAHIqb,aAAqBrU,YACvBmU,EAAsBhhB,OAAOkS,KAAKgP,EAAUjU,UAAUgU,OAAM,SAACjgB,GAAM,OAAAkgB,EAAUjU,SAASjM,GAAG6G,QAAQ4B,WAE5FuD,EAAKC,SAASpH,GAAGgC,QAAQ4B,QAAUuX,KAI9C,OAAO,GAGFjB,EAAArf,UAAAygB,SAAP,SAAgBC,GACd5gB,KAAK4f,UAAYgB,GAGZrB,EAAArf,UAAA2gB,gBAAP,WACO7gB,KAAK8gB,sBACR9gB,KAAK2gB,SAAS3gB,KAAK4f,UAAY,GAC/BH,SAASnc,KAAKyd,UAAY,IAIvBxB,EAAArf,UAAA4gB,kBAAP,WACE,OAA0B,IAAnB9gB,KAAK4f,WAGPL,EAAArf,UAAA8gB,iBAAP,WACE,OAAOhhB,KAAK4f,YAAc5f,KAAKwM,KAAKjB,SAAoB,UAAE5K,OAAS,GAG9D4e,EAAArf,UAAA+gB,YAAP,WACOjhB,KAAKghB,qBACRhhB,KAAK2gB,SAAS3gB,KAAK4f,UAAY,GAC/BH,SAASnc,KAAKyd,UAAY,IAGvBxB,EAAArf,UAAAghB,YAAP,SAAmBC,GACjBnhB,KAAK4f,UAAYuB,EACjBnhB,KAAKohB,kBAEA7B,EAAArf,UAAAkhB,eAAP,WACMphB,KAAKwM,MAAQxM,KAAKwM,KAAKhB,OACzBxL,KAAKwM,KAAKhB,KAAKwU,oBAAiC,YAAIhgB,KAAK4f,YAItDL,EAAArf,UAAAmhB,UAAP,WACE,OAAOrhB,KAAKwM,KAAKnF,QAAQia,UAAYthB,KAAKwM,KAAKnF,QAAQka,OAGlDhC,EAAArf,UAAAmc,OAAP,WACE,OAAOrc,KAAKwhB,UAAUxhB,KAAKwM,OAItB+S,EAAArf,UAAAggB,gBAAP,SAAuBlb,GAAvB,IAAAoD,EAAApI,KAEQsH,GAAetC,EAAMyc,MAAM,KAAK,GAChCC,EAAa1c,EAAMyc,MAAM,KAAK,GAAK,KAGnCE,EAAsC3hB,KAAK0f,gBAAgBpY,GAEjEtH,KAAK2gB,SAASrZ,GAEdsa,YAAW,WAGTD,EAAajC,gBAAgB/V,SAAQ,SAACkY,GACpCA,EAAQlC,aAAc,EAEtBiC,YAAW,WACT,IAAM7R,EAAe3H,EAAKqX,SAASqC,eAAeJ,GAClC,OAAZ3R,GAAoBA,EAAQgS,QAC9BhS,EAAQgS,QACRhS,EAAQiS,eAAe,CAAEC,SAAU,SAAUC,MAAO,cAErD,UAGJ,MAGE3C,EAAArf,UAAAiiB,cAAP,SAAqB3V,GAEnBxM,KAAKwM,KAAOA,GAGP+S,EAAArf,UAAAkiB,OAAP,SAAcC,KAKP9C,EAAArf,UAAAoiB,kBAAP,SAAyBC,GACvB,IAAMxhB,EAAI0e,SAASqC,eAAeS,GAEV,UAApBxhB,EAAEyhB,MAAMC,QACV1hB,EAAEyhB,MAAMC,QAAU,OAElB1hB,EAAEyhB,MAAMC,QAAU,QAIpB9Q,QAAQ0N,IAAI,SAAUkD,IAIhBhD,EAAArf,UAAAshB,UAAR,SAAkBhV,GAChB,IAAM6P,EAAc7P,EAAKnF,QAAQgV,OAEjC,OAAIA,EAEKrc,KAAKyd,kBAAkBpB,OAAOA,EAAQ7P,EAAKjB,UAG7C,6CAvMoB+P,yBACN2D,mBACMlY,kDAC1B2b,KAAAA,OAAMC,KAAA,CAACC,OAAAA,eAnBDC,WAAAA,CAARC,KAAAA,iCAAgCvD,0CACxBsD,WAAAA,CAARC,KAAAA,iCAAqBxX,sCACbuX,WAAAA,CAARC,KAAAA,iCAA4BxO,iDALlBiL,EAAqBpe,WAAA,CALjC4hB,KAAAA,UAAU,CACTC,SAAU,gBACVC,SAAA,8sWACS,sBAAuBjE,kBAwB7BkE,QAAAA,EAAAR,KAAAA,OAAOE,OAAAA,2CAHmBtH,kBACN2D,YACMlY,kBAAiBvH,UArBnC+f,GAAb,mBCRE,SAAA4D,EAAmBC,EAAoBzW,EAAiC0W,GAArDrjB,KAAAojB,OAAAA,EAAoBpjB,KAAA2M,YAAAA,EAAiC3M,KAAAqjB,gBAAAA,EAJjErjB,KAAAggB,oBAA2B,GACzBhgB,KAAAsjB,eAAsB,GAEvBtjB,KAAAujB,aAAc,EAEpBvjB,KAAKwjB,sBAAwB,IAAIvE,YAuOrC,OApOEzf,OAAAqC,eAAIshB,EAAAjjB,UAAA,uBAAoB,KAAxB,WACE,OAAOF,KAAKwjB,uDAGdL,EAAAjjB,UAAAgP,iBAAA,SAAiB1C,EAAiBkC,EAAM+U,GAAxC,IAAArb,EAAApI,KAEQyM,EAAqBD,EAAKC,SAEhC,IAAK,IAAMnL,KAAOmL,EAEhB,GAAIA,EAAS5M,eAAeyB,GAAM,CAEhC,IAAM8M,EAAkB3B,EAASnL,GAEjC,GAAI8M,aAAiB/B,UAAW,CAE9B,GAAIqC,IAASN,EAAMM,KAEjB,OADA+U,EAAMjf,KAAK4J,GACJqV,EAGTzjB,KAAKkP,iBAAiBd,EAAOM,EAAM+U,QAC9B,GAAIrV,aAAiBnC,UAE1B,GAAIyC,IAASN,EAAMM,KAEjB,OADA+U,EAAMjf,KAAK4J,GACJqV,OAEJ,GAAIrV,aAAiB1B,UAAW,CAErC,GAAIgC,IAASN,EAAMM,KAEjB,OADA+U,EAAMjf,KAAK4J,GACJqV,EAGiBrV,EAEnB3B,SAAS9C,SAAQ,SAAA+Z,GACtBtb,EAAK8G,iBAAiBwU,EAAYhV,EAAM+U,OAMhD,OAAOA,GAGTN,EAAAjjB,UAAAwP,uBAAA,SAAuBiU,EAAoBC,GACzC,IAAMH,EAAQ,GAMd,OALIG,EACF5jB,KAAK6jB,yBAAyB7jB,KAAK4N,SAAUgW,EAAcH,GAE3DzjB,KAAK8jB,sBAAsB9jB,KAAK4N,SAAU+V,EAAYF,GAEjDA,GAGTN,EAAAjjB,UAAA2jB,yBAAA,SAAyBjW,EAAegW,EAAuBH,GAA/D,IAAArb,EAAApI,KAEE,GAAI4N,aAAoBvB,UAAW,CACjC,IAAM0X,EAAcnW,EAEpB,IAAK,IAAM/I,KAAKkf,EAAYtX,SAC1BzM,KAAK6jB,yBAAyBE,EAAYtX,SAAS5H,GAAI+e,EAAcH,GAIrE7V,aAAoBlB,WACFkB,EAERnB,SAAS9C,SAAQ,SAAA6C,GAC3BpE,EAAKyb,yBAAyBrX,EAAMoX,EAAcH,MAItD,GAAI7V,aAAoB3B,SAAU,CAChC,IAAMoC,EAA6BT,EAASrC,SAExC8C,EAAa4G,QAAU5G,EAAa4G,OAAO9H,MAAQkB,EAAa4G,OAAO9H,OAASyW,GAClFH,EAAMjf,KAAKoJ,KAKTuV,EAAAjjB,UAAA4jB,sBAAR,SAA8BlW,EAAoB+V,EAChDK,GADF,IAAA5b,EAAApI,KAME,GAJI4N,EAASrC,SAASjK,MAAQqiB,GAC5BK,EAAQxf,KAAKoJ,GAGXA,aAAoBvB,UAAW,CACjC,IAAM0X,EAAcnW,EAEpB,IAAK,IAAM/I,KAAKkf,EAAYtX,SAC1BzM,KAAK8jB,sBAAsBC,EAAYtX,SAAS5H,GAAI8e,EAAYK,GAIhEpW,aAAoBlB,WACFkB,EAERnB,SAAS9C,SAAQ,SAAA6C,GAC3BpE,EAAK0b,sBAAsBtX,EAAMmX,EAAYK,OAOnDxkB,OAAAqC,eAAIshB,EAAAjjB,UAAA,QAAK,KAAT,WAEE,OAAOF,KAAK4N,SAASvG,QAAQka,uCAG/B/hB,OAAAqC,eAAIshB,EAAAjjB,UAAA,aAAU,KAId,WACE,OAAOF,KAAKujB,iBALd,SAAehQ,GACbvT,KAAKujB,YAAchQ,mCAOrB4P,EAAAjjB,UAAA+jB,oBAAA,SAAoBzX,EAAiB0X,GAArC,IAAA9b,EAAApI,KAGQyM,EAAqBD,EAAKC,SAEhC,IAAK,IAAMnL,KAAOmL,EAEhB,GAAIA,EAAS5M,eAAeyB,GAAM,CAEhC,IAAM8M,EAAkB3B,EAASnL,GAEjC,GAAI8M,aAAiB/B,UAEnBrM,KAAKikB,oBAAoB7V,EAAO8V,QAC3B,GAAI9V,aAAiBnC,SAAU,CAEpC,IAAMoC,EAA8BD,EAAmB7C,SAEvD,GAAI8C,EAAa/M,KAAO+M,EAAa/M,IAAIX,OAAS,EAAG,CAEnD,IAAMa,EAAmC4M,EAAM/G,QAE1C7F,EAAE+f,OAAU/f,EAAE2iB,WACbD,GACFA,EAAoB1f,KAAK4J,GAG3B5M,EAAE4iB,uBAGD,GAAIhW,aAAiB1B,UAAW,CACrC,IAAMuF,EAAuB7D,EAEzB6D,GAAaA,EAAUxF,UAAYwF,EAAUxF,SAAS9L,OAAS,GAEjEgY,OAAAA,QAAU1G,EAAUxF,UAAU,SAAC4X,GAC7Bjc,EAAK6b,oBAAoBI,EAAWH,OAO9C,OAAOA,GAGTf,EAAAjjB,UAAAokB,wCAAA,WACEtkB,KAAKukB,yCAAyCvkB,KAAK4N,WAIrDuV,EAAAjjB,UAAAskB,2BAAA,WACExkB,KAAKykB,4BAA4BzkB,KAAK4N,WAGhCuV,EAAAjjB,UAAAukB,4BAAR,SAAoC7W,GAApC,IAAAxF,EAAApI,KAOE,GANI4N,EAASvG,SACNuG,EAASvG,QAAgBc,aAC3ByF,EAASvG,QAAgBc,cAI1ByF,aAAoBvB,UAAW,CACjC,IAAM0X,EAAcnW,EAEpB,IAAK,IAAM/I,KAAKkf,EAAYtX,SAC1BzM,KAAKykB,4BAA4BV,EAAYtX,SAAS5H,IAItD+I,aAAoBlB,WACFkB,EAERnB,SAAS9C,SAAQ,SAAA6C,GAC3BpE,EAAKqc,4BAA4BjY,OAK/B2W,EAAAjjB,UAAAqkB,yCAAR,SAAiD3W,GAAjD,IAAAxF,EAAApI,KAWE,GAVI4N,EAASvG,UACNuG,EAASvG,QAAgBa,qBAC3B0F,EAASvG,QAAgBa,sBAGvB0F,EAASvG,QAAgBY,mBAC3B2F,EAASvG,QAAgBY,qBAI1B2F,aAAoBvB,UAAW,CACjC,IAAM0X,EAAcnW,EAEpB,IAAK,IAAM/I,KAAKkf,EAAYtX,SAC1BzM,KAAKukB,yCAAyCR,EAAYtX,SAAS5H,IAInE+I,aAAoBlB,WACFkB,EAERnB,SAAS9C,SAAQ,SAAA6C,GAC3BpE,EAAKmc,yCAAyC/X,OAItD2W,uCCpOE,SAAAuB,EAAoBjH,EAA8C+B,GAA9Cxf,KAAAyd,kBAAAA,EAA8Czd,KAAAwf,kBAAAA,EA2CpE,OAzCEkF,EAAAxkB,UAAA2f,SAAA,aAGA6E,EAAAxkB,UAAAykB,WAAA,WACE,OAAQ3kB,KAAKwL,KAAK+V,OAASvhB,KAAKwL,KAAKmZ,YAGvCnlB,OAAAqC,eAAI6iB,EAAAxkB,UAAA,aAAU,KAAd,WAGE,OADwBF,KAAKwL,KAAKyY,oBAAoBjkB,KAAKwL,KAAKoC,SAAU,qCAI5E8W,EAAAxkB,UAAA0kB,gBAAA,SAAgBpY,GACZ,IAAM6P,EAAc7P,EAAKnF,QAAQgV,OAEjC,OAAIA,EAEOrc,KAAKyd,kBAAkBpB,OAAOA,EAAQ7P,EAAKjB,UAG/C,IAGXmZ,EAAAxkB,UAAAkH,mBAAA,SAAmByd,GAAnB,IAAAzc,EAAApI,KAEQiP,EAAyBjP,KAAKwL,KAAKkE,uBAAuBmV,EAAUnW,KAAKC,UAAU,EAAGkW,EAAUnW,KAAK1N,QAAQ,OAEnH2X,OAAAA,QAAU1J,GAAO,SAACzC,GAEhB,GAAoC,SAAhCA,EAAKjB,SAAS2J,cAA0B,CAC1C,IAAM4P,EAAoB1c,EAAK2c,aAAavY,GAC5CpE,EAAKoX,kBAAkBpY,mBAAmB0d,EAAY,IAAMD,EAAUtZ,SAASjK,UAKrFojB,EAAAxkB,UAAA6kB,aAAA,SAAavY,GAEV,OADqCxM,KAAKwL,KAAKoC,SAASrC,SACnCiT,UAAUxd,QAAQwL,EAAKjB,oDAzCR+P,yBAA8CvU,qBAF5E8b,WAAAA,CAARC,KAAAA,iCAAcK,kCAFJuB,EAAsBvjB,WAAA,CALlC4hB,KAAAA,UAAU,CACPC,SAAU,iBACVC,SAAA,gmBAOqC3H,kBAA8CvU,qBAJ1E2d,8CCbb,SAAAM,KAiCA,OA/BSA,EAAA9kB,UAAA+kB,0BAAP,SAAiC1Z,EAAyB2Z,EAAuBC,GAE/E,IAAIC,EAAc,GACZC,EAAkB9Z,EAAS4J,oBACjC,GAAImQ,OAAAA,QAAUD,EAAgBviB,OAAQ,CACpC,IAAIyiB,EAAiB,EACrBC,OAAAA,KAAOH,EAAgBviB,OAAO,SAACiH,GAC7Byb,OAAAA,KAAOja,EAASuJ,SAAS,SAAC2Q,GAEpBA,EAAOP,KAAmBnb,IACL,IAAnBwb,EACFH,GAA4BK,EAAON,GAEnCC,EAAcA,EAAc,KAAOK,EAAON,GAE5CI,gBAMNC,OAAAA,KAAOja,EAASuJ,SAAS,SAAC2Q,GACpBA,EAAOP,KAAmBG,EAAgBviB,QAC5CsiB,EAAcK,EAAON,OAI3B,OAAOC,GAIXJ,yCCnBE,SAAAU,EAAoBC,GAAA3lB,KAAA2lB,sBAAAA,EAJV3lB,KAAA4lB,YAAc,IAAIC,KAAAA,aA+D9B,OAvDEH,EAAAxlB,UAAAoT,SAAA,SAASvS,GAEe,iBAAlBA,EAAEM,OAAOykB,QAEP9lB,KAAK+lB,OAAW/lB,KAAKgmB,cAAchmB,KAAK+lB,MAAMxa,SAAS2J,cAAe,SACpElV,KAAKgmB,cAAchmB,KAAK+lB,MAAMxa,SAAS2J,cAAe,aAE1DlV,KAAK+lB,MAAM1e,QAAQiM,SAAStT,KAAK+lB,MAAMxa,SAAS4J,oBAAoBrS,OAEpE9C,KAAK+lB,MAAMxa,SAA0B,gBAAIvL,KAAK+lB,MAAMxa,SAAS4J,oBAC7DpU,EAAEklB,kBACFjmB,KAAK4lB,YAAYM,KAAKlmB,KAAK+lB,UAMzBL,EAAAxlB,UAAA8lB,cAAR,SAAsB1gB,EAAG/F,GACvB,OAAI+F,IAAM/F,GAOZC,OAAAqC,eAAI6jB,EAAAxlB,UAAA,OAAI,KAAR,SAASsM,GAEP,GAAIA,IACFxM,KAAK+lB,MAAQvZ,EACTxM,KAAK+lB,MAAMxa,SAAS8J,wBAA0B8Q,OAAAA,YAAcnmB,KAAK+lB,MAAMxa,SAAS4J,sBAAsB,CACxG,IAAMsN,EAAe,CAAE2D,KAAM,GAAIC,MAAO,IACG,WAAtCrmB,KAAK+lB,MAAMxa,SAAS2J,eACkB,iBAAtClV,KAAK+lB,MAAMxa,SAAS2J,eACkB,kBAAtClV,KAAK+lB,MAAMxa,SAAS2J,eAEvBuN,EAAQ2D,KAAOpmB,KAAK2lB,sBAAsBV,0BACxCjlB,KAAK+lB,MAAMxa,SACX,QACA,SAEFkX,EAAQ4D,MAAQrmB,KAAK+lB,MAAMxa,SAAS4J,oBAAoBmR,UAExDtmB,KAAK+lB,MAAMxa,SAA4B,kBAAIkX,GAEjC0D,OAAAA,YAAcnmB,KAAK+lB,MAAMxa,SAAS4J,uBAE5CsN,EAAQ2D,KAAOpmB,KAAK+lB,MAAMxa,SAAS4J,oBAAoBrS,MACvD2f,EAAQ4D,MAAQrmB,KAAK+lB,MAAMxa,SAAS4J,oBAAoBmR,UAExDtmB,KAAK+lB,MAAMxa,SAA4B,kBAAIkX,8EArDRuC,gCALlCnC,WAAAA,CAARC,KAAAA,iCAAexX,uCACNuX,WAAAA,CAAT0D,KAAAA,6EAQD1D,WAAAA,CADC2D,KAAAA,aAAa,QAAS,CAAC,4JA0BxB3D,WAAAA,CADCC,KAAAA,iCACcxX,0CAAAA,qCApCJoa,EAAwBvkB,WAAA,CAJpCslB,KAAAA,UAAU,CACTzD,SAAU,2CAUiCgC,gCAPhCU,MCVAgB,MAAQ,onECARA,QAAQ,moCCArBC,OAAA,WAUI,SAAAA,EAAY7jB,EAAea,GACvB3D,KAAK8C,MAAQA,EACb9C,KAAK2D,MAAQA,EAEb3D,KAAKmkB,UAAW,EAChBnkB,KAAK4mB,aAAc,EACnB5mB,KAAK6mB,UAAW,EAChB7mB,KAAKkK,OAAQ,EAyBrB,OAtBIyc,EAAAzmB,UAAAqT,KAAA,WACIvT,KAAKkK,OAAQ,GAGjByc,EAAAzmB,UAAA8P,KAAA,WACIhQ,KAAKkK,OAAQ,GAGjByc,EAAAzmB,UAAAgJ,QAAA,WACIlJ,KAAKmkB,UAAW,GAGpBwC,EAAAzmB,UAAAmL,OAAA,WACIrL,KAAKmkB,UAAW,GAGpBwC,EAAAzmB,UAAA4mB,gBAAA,WACI,MAAO,CACHnjB,MAAO3D,KAAK2D,MACZb,MAAO9C,KAAK8C,QAGxB6jB,EA1CA,GCAAI,WAAA,WAAA,SAAAA,KAw1BA,OAZWA,EAAAC,MAAP,SAAaZ,GAAb,IAAAhe,EAAApI,KAKI,OAAIomB,EACOA,EAAKrN,QAAQ,qBAJV,SAACzT,GACX,OAAO8C,EAAK6e,WAAW3hB,IAAMA,KAKtB,IAl1BRyhB,EAAAE,WAAa,CAChelBz0B,EAx1BA,GCGA00B,WAAA,WAyBI,SAAAA,EAAY3mC,GAjBJ9U,KAAA07C,mBAA6B,KAmB7B,MAAO5mC,IACPA,EAAU,IAGd9U,KAAK27C,SAAW7mC,EAAQwD,KAAI,SAACmN,GACzB,IAAM5gB,EAAY,IAAI8hB,OAAOlB,EAAO3iB,MAAO2iB,EAAO9hB,OAIlD,OAHI8hB,EAAOtB,UACPtf,EAAEqE,UAECrE,KAGX7E,KAAK47C,YAuLb,OApNWH,EAAAI,YAAP,SAAmBC,EAAmBC,GAElC,GAAID,EAAGn7C,SAAWo7C,EAAGp7C,OACjB,OAAO,EAGX,IAAM2E,EAAmBw2C,EAAGE,QAAQC,OAC9B18C,EAAmBw8C,EAAGC,QAAQC,OAEpC,OAAO32C,EAAEmb,OAAM,SAACrc,EAAG5D,GACf,OAAO4D,IAAM7E,EAAEiB,OAwBvBhB,OAAAqC,eAAI45C,EAAAv7C,UAAA,UAAO,KAAX,WACI,OAAOF,KAAK27C,0CAGhBF,EAAAv7C,UAAAg8C,kBAAA,SAAkBp5C,GACd,OAAO9C,KAAK8U,QAAQqnC,QAAO,SAAC12B,GACxB,OAAOA,EAAO3iB,QAAUA,MAMhCtD,OAAAqC,eAAI45C,EAAAv7C,UAAA,QAAK,KAAT,WACI,OAAOF,KAAKo8C,UAAU9jC,KAAI,SAAC+jC,GACvB,OAAOA,EAAev5C,cAI9B,SAAUsB,GACNA,EAAI,MAAOA,EAAkC,GAAKA,EAElDpE,KAAK8U,QAAQnL,SAAQ,SAAC8b,GAClBA,EAAOoB,SAAWziB,EAAEpD,QAAQykB,EAAO3iB,QAAU,sCAMrDtD,OAAAqC,eAAI45C,EAAAv7C,UAAA,YAAS,KAAb,WACI,OAAOF,KAAK8U,QAAQqnC,QAAO,SAAC12B,GACxB,OAAOA,EAAOoB,6CAItB40B,EAAAv7C,UAAAo8C,OAAA,SAAO72B,EAAgB82B,GACdA,GACDv8C,KAAKw8C,iBAET/2B,EAAOoB,UAAW,GAGtB40B,EAAAv7C,UAAAu8C,SAAA,SAASh3B,GACLA,EAAOoB,UAAW,GAGtB40B,EAAAv7C,UAAAs8C,eAAA,WACIx8C,KAAK8U,QAAQnL,SAAQ,SAAC8b,GAClBA,EAAOoB,UAAW,MAM1BrnB,OAAAqC,eAAI45C,EAAAv7C,UAAA,WAAQ,KAAZ,WACI,OAAOF,KAAK8U,QAAQqnC,QAAO,SAAC12B,GACxB,OAAOA,EAAOvb,0CAItBuxC,EAAAv7C,UAAAi8C,OAAA,SAAOO,GAEiB,KAAhBA,EAAKC,OACL38C,KAAK48C,cAEL58C,KAAK8U,QAAQnL,SAAQ,SAAC8b,GAClB,IAAMo3B,EAAY91B,WAAWC,MAAMvB,EAAO9hB,OAAOm5C,cAC3Cx8C,EAAYymB,WAAWC,MAAM01B,GAAMI,cACzCr3B,EAAOvb,MAAQ2yC,EAAE77C,QAAQV,IAAM,KAIvCN,KAAK47C,aAGTH,EAAAv7C,UAAA08C,YAAA,WACI58C,KAAK8U,QAAQnL,SAAQ,SAAC8b,GAClBA,EAAOvb,OAAQ,MAMvB1K,OAAAqC,eAAI45C,EAAAv7C,UAAA,oBAAiB,KAArB,WACI,OAAOF,KAAK07C,oDAGhBD,EAAAv7C,UAAA07C,UAAA,WACI,IAAMn2B,EAAiBzlB,KAAK+8C,mBACxB/8C,KAAKg9C,wBAA0Bh9C,KAAKi9C,gBACxCj9C,KAAKk9C,gBAAgBz3B,IAGzBg2B,EAAAv7C,UAAAg9C,gBAAA,SAAgBz3B,GACZzlB,KAAKm9C,yBAEU,OAAX13B,IACAA,EAAOmB,aAAc,EACrB5mB,KAAK07C,mBAAqBj2B,IAIlCg2B,EAAAv7C,UAAAk9C,oBAAA,WACI,IAAMC,EAAer9C,KAAKs9C,SACpBxxC,EAAQ9L,KAAKu9C,4BAA4BF,GAE3CvxC,GAAS,GAAKA,EAAQuxC,EAAa18C,OAAS,GAC5CX,KAAKk9C,gBAAgBG,EAAavxC,EAAQ,KAIlD2vC,EAAAv7C,UAAAs9C,wBAAA,WACI,IAAMH,EAAer9C,KAAKs9C,SACpBxxC,EAAQ9L,KAAKu9C,4BAA4BF,GAE3CvxC,EAAQ,GACR9L,KAAKk9C,gBAAgBG,EAAavxC,EAAQ,KAI1C2vC,EAAAv7C,UAAAi9C,uBAAR,WACmC,OAA3Bn9C,KAAKy9C,oBACLz9C,KAAKy9C,kBAAkB72B,aAAc,EACrC5mB,KAAK07C,mBAAqB,OAI1BD,EAAAv7C,UAAAq9C,4BAAR,SAAoCzoC,GAChC,IAAK,IAAItU,EAAI,EAAGA,EAAIsU,EAAQnU,OAAQH,IAChC,GAAIsU,EAAQtU,GAAGomB,YACX,OAAOpmB,EAGf,OAAQ,GAGZi7C,EAAAv7C,UAAAw9C,oBAAA,WACI,OAAO19C,KAAKu9C,4BAA4Bv9C,KAAKs9C,WAKjD7B,EAAAv7C,UAAAy9C,SAAA,WACI,OAAO39C,KAAK8U,QAAQ8oC,MAAK,SAACn4B,GACtB,OAAOA,EAAOvb,UAItBuxC,EAAAv7C,UAAA29C,YAAA,WACI,OAAO79C,KAAK8U,QAAQ8oC,MAAK,SAACn4B,GACtB,OAAOA,EAAOoB,aAItB40B,EAAAv7C,UAAA68C,iBAAA,WACI,OAAO/8C,KAAK8U,QAAQ8oC,MAAK,SAACn4B,GACtB,OAAOA,EAAOvb,OAASub,EAAOoB,aAI9B40B,EAAAv7C,UAAA+8C,cAAR,uBACI,IAAqB,IAAAa,EAAAC,SAAA/9C,KAAK8U,SAAOkpC,EAAAF,EAAA96C,QAAAg7C,EAAA76C,KAAA66C,EAAAF,EAAA96C,OAAE,CAA9B,IAAMyiB,EAAMu4B,EAAAl7C,MACb,GAAI2iB,EAAOvb,MACP,OAAOub,oGAGf,OAAO,MAGHg2B,EAAAv7C,UAAA88C,sBAAR,uBACI,IAAqB,IAAAc,EAAAC,SAAA/9C,KAAK8U,SAAOkpC,EAAAF,EAAA96C,QAAAg7C,EAAA76C,KAAA66C,EAAAF,EAAA96C,OAAE,CAA9B,IAAMyiB,EAAMu4B,EAAAl7C,MACb,GAAI2iB,EAAOvb,OAASub,EAAOoB,SACvB,OAAOpB,oGAGf,OAAO,MAIfg2B,EA9NA,sCCaA,SAAAwC,IAoBcj+C,KAAAk+C,MAAQ,IAAIr4B,KAAAA,aACZ7lB,KAAAm+C,cAAgB,IAAIt4B,KAAAA,aACpB7lB,KAAAo+C,kBAAoB,IAAIv4B,KAAAA,aACxB7lB,KAAAq+C,kBAAoB,IAAIx4B,KAAAA,aACxB7lB,KAAAs+C,oBAAsB,IAAIz4B,KAAAA,aAKpC7lB,KAAAu+C,cAAgB,OAChBv+C,KAAAw+C,kBAAoB,SAiHxB,OA3GIP,EAAA/9C,UAAA2f,SAAA,WACI7f,KAAKy+C,gBAGTR,EAAA/9C,UAAAw+C,YAAA,SAAYC,GACJA,EAAQ9+C,eAAe,eACvBG,KAAKy+C,gBAIbR,EAAA/9C,UAAA0+C,gBAAA,WACI5+C,KAAK6+C,2BACA7+C,KAAKu8C,UAAYv8C,KAAK8+C,eACvB9+C,KAAK++C,YAAYC,cAAcj9B,SAMvCk8B,EAAA/9C,UAAA++C,oBAAA,SAAoB58B,GAChBriB,KAAKo+C,kBAAkBl4B,KAAK,OAGhC+3B,EAAA/9C,UAAAg/C,oBAAA,SAAoB78B,GAChBriB,KAAKq+C,kBAAkBn4B,KAAK7D,EAAMhhB,OAAOyB,QAG7Cm7C,EAAA/9C,UAAAi/C,sBAAA,SAAsB98B,GAClBriB,KAAKs+C,oBAAoBp4B,KAAK7D,IAKlC47B,EAAA/9C,UAAAk/C,eAAA,SAAe/8B,GACXriB,KAAKq/C,mBAAmBh9B,IAG5B47B,EAAA/9C,UAAAo/C,kBAAA,SAAkB75B,GACdzlB,KAAKu/C,WAAWrC,gBAAgBz3B,IAGpCw4B,EAAA/9C,UAAAs/C,cAAA,SAAc/5B,GACVzlB,KAAKm+C,cAAcj4B,KAAKT,IAKpBw4B,EAAA/9C,UAAAu+C,aAAR,WACIz+C,KAAKu/C,WAAW3C,cAChB58C,KAAKu/C,WAAW3D,aAKpBqC,EAAA/9C,UAAAu/C,eAAA,SAAeh6B,GACX,OAAIA,EAAOmB,YACA,CACH84B,mBAAoB1/C,KAAK2/C,eACzBC,MAAS5/C,KAAK6/C,oBAGX,IAIf5B,EAAA/9C,UAAA4/C,iBAAA,WACQ9/C,KAAK8+C,gBACL9+C,KAAK++C,YAAYC,cAAcl8C,MAAQ,KAI/Cm7C,EAAA/9C,UAAA2+C,wBAAA,WAEI,IAAMrjC,EAAOxb,KAAK+/C,YAAYf,cACxBgB,EAAaxkC,EAAKykC,aAElBC,EAAYlgD,KAAKu/C,WAAW7B,sBAElC,GAAIwC,GAAa,EAAG,CAChB,IACMC,EADO3kC,EAAK/O,SAAS,GAAGA,SAASyzC,GACfD,aAElBG,EAAUF,EAAYC,EACtBE,EAAaD,EAAUD,EAEvBG,EAAU9kC,EAAKuF,UAGjBs/B,EAFeC,EAAUN,EAGzBxkC,EAAKuF,UAAYs/B,EAAaL,EACvBI,EAAUE,IACjB9kC,EAAKuF,UAAYq/B,KAKrBnC,EAAA/9C,UAAAm/C,mBAAR,SAA2Bt+C,GACvB,IAAMw/C,EAAMvgD,KAAK+/C,YAAYf,cACvBwB,EAA0B,IAAlBD,EAAIx/B,UACZ0/B,EAAWF,EAAIN,aAAeM,EAAIx/B,YAAcw/B,EAAIG,aAEtDF,GAASz/C,EAAE4/C,OAAS,EACpB5/C,EAAE6/C,iBACKH,GAAY1/C,EAAE4/C,OAAS,GAC9B5/C,EAAE6/C,kBAlID/9B,WAAAA,CAARC,KAAAA,+EACQD,WAAAA,CAARC,KAAAA,+EACQD,WAAAA,CAARC,KAAAA,mFACQD,WAAAA,CAARC,KAAAA,qEACQD,WAAAA,CAARC,KAAAA,0EACQD,WAAAA,CAARC,KAAAA,4EACQD,WAAAA,CAARC,KAAAA,iCAAoB24B,8CACZ54B,WAAAA,CAARC,KAAAA,oEACQD,WAAAA,CAARC,KAAAA,sEAESD,WAAAA,CAAT0D,KAAAA,uEACS1D,WAAAA,CAAT0D,KAAAA,+EACS1D,WAAAA,CAAT0D,KAAAA,mFACS1D,WAAAA,CAAT0D,KAAAA,mFACS1D,WAAAA,CAAT0D,KAAAA,qFAE0C1D,WAAAA,CAA1Cg+B,KAAAA,UAAU,cAAe,CAACC,QAAQ,wEACQj+B,WAAAA,CAA1Cg+B,KAAAA,UAAU,cAAe,CAACC,QAAQ,wEApB1B7C,EAAuB98C,WAAA,CAPnC4hB,KAAAA,UAAU,CACPC,SAAU,kBACVC,SAAA,6jCAEA89B,cAAeC,KAAAA,kBAAkBC,aADxBv6B,YAIAu3B,MCJAiD,sBAA0C,CACnDC,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAAC,mBAC9BC,OAAO,GAWXD,gBAAA,WARA,SAAAA,IAYYvhD,KAAAyhD,KAAY,CAChBC,UAAW,EACXC,IAAK,EACLC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,GAAI,GACJC,KAAM,IAKDhiD,KAAAiiD,YAAa,EACbjiD,KAAAmkB,UAAW,EACXnkB,KAAA2/C,eAAiB,UACjB3/C,KAAA6/C,mBAAqB,OACrB7/C,KAAAu8C,UAAW,EACXv8C,KAAAkiD,SAAW,EACXliD,KAAAmiD,YAAc,mBACdniD,KAAAoiD,YAAc,GAEbpiD,KAAAqiD,OAA6B,IAAIx8B,KAAAA,aACjC7lB,KAAAsiD,OAA6B,IAAIz8B,KAAAA,aACjC7lB,KAAA6mB,SAA8B,IAAIhB,KAAAA,aAClC7lB,KAAAuiD,WAAgC,IAAI18B,KAAAA,aACpC7lB,KAAAwiD,MAA2B,IAAI38B,KAAAA,aAOjC7lB,KAAAyiD,OAAqB,GAI7BziD,KAAA69C,aAAc,EAGd79C,KAAA8+C,eAAgB,EAChB9+C,KAAA0iD,iBAAmB,EACnB1iD,KAAA2iD,UAAW,EACX3iD,KAAA4iD,SAAU,EACV5iD,KAAA6iD,YAAa,EACb7iD,KAAA8iD,QAAS,EACT9iD,KAAA+iD,gBAAkB,GAElB/iD,KAAAgjD,cAAe,EACfhjD,KAAAijD,wBAAyB,EAOjBjjD,KAAAkjD,SAAW,SAACx/C,KACZ1D,KAAAmjD,UAAY,aAwaxB,OAlaI5B,EAAArhD,UAAA2f,SAAA,WACI7f,KAAK+iD,gBAAkB/iD,KAAKoiD,aAGhCb,EAAArhD,UAAA0+C,gBAAA,WACI5+C,KAAKojD,qBAGT7B,EAAArhD,UAAAw+C,YAAA,SAAYC,GAIR,GAHIA,EAAQ9+C,eAAe,YACvBG,KAAKqjD,kBAAkB1E,EAAiB,QAAE2E,iBAE1C3E,EAAQ9+C,eAAe,YAAa,CACpC,IAAM0jD,EAAqBvjD,KAAKu/C,WAAWzqC,QAAQnU,OAC7C6iD,EAAwB7E,EAAkB,SAAE8E,aAClDzjD,KAAK8+C,cAAgByE,GAAcC,IAM3CjC,EAAArhD,UAAAwjD,cAAA,WACS1jD,KAAKijD,wBACNjjD,KAAK2jD,gBAET3jD,KAAKgjD,cAAe,EACpBhjD,KAAKijD,wBAAyB,GAGlC1B,EAAArhD,UAAA0jD,eAAA,WACI5jD,KAAK6jD,eAKTtC,EAAArhD,UAAA4jD,uBAAA,SAAuBzhC,GACnBriB,KAAKijD,wBAAyB,EACzBjjD,KAAKgjD,cACNhjD,KAAK+jD,kBAIbxC,EAAArhD,UAAA8jD,uBAAA,WACIhkD,KAAKmjD,aAGT5B,EAAArhD,UAAA+jD,yBAAA,SAAyB5hC,GACrBriB,KAAKkkD,6BAA6B7hC,IAKtCk/B,EAAArhD,UAAAikD,wBAAA,SAAwB1+B,GACpBzlB,KAAKu8C,SACDv8C,KAAKokD,mBAAmB3+B,GAAUzlB,KAAKqkD,aAAa5+B,IAG5D87B,EAAArhD,UAAAokD,gBAAA,SAAgBviC,GACZ/hB,KAAK2jD,cAAc5hC,IAKvBw/B,EAAArhD,UAAA++C,oBAAA,WACIj/C,KAAKijD,wBAAyB,GAGlC1B,EAAArhD,UAAAg/C,oBAAA,SAAoBxC,GAApB,IAAAt0C,EAAApI,KACI4hB,YAAW,WACH86B,EAAK/7C,OAAS,GACdyH,EAAKo6C,MAAMt8B,KAAKw2B,KAErB,KACH18C,KAAKu/C,WAAWpD,OAAOO,IAG3B6E,EAAArhD,UAAAi/C,sBAAA,SAAsB98B,GAClBriB,KAAKukD,0BAA0BliC,IAKnCk/B,EAAArhD,UAAAskD,sBAAA,SAAsBniC,GAAtB,IAAAja,EAAApI,KACSA,KAAK8iD,QACN9iD,KAAKykD,eAETzkD,KAAKojD,oBACLxhC,YAAW,WACPxZ,EAAKm3C,WAAWpD,OAAO95B,EAAMhhB,OAAOyB,WAI5Cy+C,EAAArhD,UAAAwkD,wBAAA,SAAwBriC,GACpBriB,KAAK2kD,4BAA4BtiC,IAKrCk/B,EAAArhD,UAAA0kD,sBAAA,SAAsBviC,GAClBriB,KAAKgjD,cAAe,EACpBhjD,KAAKw8C,iBACLx8C,KAAK2jD,eAAc,IAKvBpC,EAAArhD,UAAA2kD,sBAAA,SAAsBp/B,GAClBzlB,KAAKgjD,cAAe,EACpBhjD,KAAK8kD,eAAer/B,IAMxB87B,EAAArhD,UAAA6kD,KAAA,WACI/kD,KAAKykD,gBAGTlD,EAAArhD,UAAAg+C,MAAA,WACIl+C,KAAK2jD,iBAGTpC,EAAArhD,UAAA8kD,MAAA,WACIhlD,KAAKw8C,kBAGT+E,EAAArhD,UAAAo8C,OAAA,SAAOx5C,GAAP,IAAAsF,EAAApI,KACIA,KAAKu/C,WAAWrD,kBAAkBp5C,GAAO6G,SAAQ,SAAC8b,GAC9Crd,EAAKi8C,aAAa5+B,MAEtBzlB,KAAKilD,gBAKT1D,EAAArhD,UAAAglD,WAAA,SAAWpiD,GACP9C,KAAK8C,MAAQA,GAGjBy+C,EAAArhD,UAAAilD,iBAAA,SAAiBC,GACbplD,KAAKkjD,SAAWkC,GAGpB7D,EAAArhD,UAAAmlD,kBAAA,SAAkBD,GACdplD,KAAKmjD,UAAYiC,GAGrB7D,EAAArhD,UAAAolD,iBAAA,SAAiBzC,GACb7iD,KAAKmkB,SAAW0+B,GAKpBrjD,OAAAqC,eAAI0/C,EAAArhD,UAAA,QAAK,KAAT,WACI,OAA2B,IAAvBF,KAAKyiD,OAAO9hD,OACL,GAEAX,KAAKu8C,SAAWv8C,KAAKyiD,OAASziD,KAAKyiD,OAAO,QAIzD,SAAUr+C,GACN,GAAI,MAAOA,GAAyC,KAANA,EAC1CA,EAAI,QACD,GAAiB,iBAANA,EACdA,EAAI,CAACA,QACF,IAAKzE,MAAMqS,QAAQ5N,GACtB,MAAM,IAAIE,UAAU,uCAGnBm3C,WAAWI,YAAYz3C,EAAGpE,KAAKyiD,UAChCziD,KAAKu/C,WAAWz8C,MAAQsB,EACxBpE,KAAKilD,iDAIL1D,EAAArhD,UAAA+kD,aAAR,WACIjlD,KAAKyiD,OAASziD,KAAKu/C,WAAWz8C,MAE9B9C,KAAK69C,YAAc79C,KAAKyiD,OAAO9hD,OAAS,EACxCX,KAAK+iD,gBAAkB/iD,KAAK69C,YAAc,GAAK79C,KAAKoiD,YACpDpiD,KAAKojD,oBAELpjD,KAAKkjD,SAASljD,KAAK8C,QAKfy+C,EAAArhD,UAAAmjD,kBAAR,SAA0BkC,GACtB,IAAInhD,EAECmhD,IACDnhD,EAAIpE,KAAKu/C,WAAWz8C,OAGxB9C,KAAKu/C,WAAa,IAAI9D,WAAWz7C,KAAK8U,SAEjCywC,IACDvlD,KAAKu/C,WAAWz8C,MAAQsB,EACxBpE,KAAKilD,iBAML1D,EAAArhD,UAAA6jD,eAAR,WACS/jD,KAAK6iD,aACN7iD,KAAK8iD,OAAS9iD,KAAK2jD,eAAc,GAAQ3jD,KAAKykD,iBAI9ClD,EAAArhD,UAAAukD,aAAR,WACSzkD,KAAK8iD,SACN9iD,KAAK6jD,cACL7jD,KAAKwlD,iBACLxlD,KAAK8iD,QAAS,EACV9iD,KAAKu8C,UAAYv8C,KAAK8+C,eACtB9+C,KAAK++C,YAAYC,cAAcj9B,QAEnC/hB,KAAKqiD,OAAOn8B,KAAK,QAIjBq7B,EAAArhD,UAAAyjD,cAAR,SAAsB5hC,QAAA,IAAAA,IAAAA,GAAA,GACd/hB,KAAK8iD,SACL9iD,KAAK8/C,mBACL9/C,KAAK8iD,QAAS,EACV/gC,GACA/hB,KAAK+hB,QAET/hB,KAAKsiD,OAAOp8B,KAAK,QAMjBq7B,EAAArhD,UAAAmkD,aAAR,SAAqB5+B,GACZA,EAAOoB,WACR7mB,KAAKu/C,WAAWjD,OAAO72B,EAAQzlB,KAAKu8C,UACpCv8C,KAAKilD,eACLjlD,KAAK6mB,SAASX,KAAKT,EAAOqB,qBAU1By6B,EAAArhD,UAAA4kD,eAAR,SAAuBr/B,GAAvB,IAAArd,EAAApI,KACQylB,EAAOoB,WACP7mB,KAAKu/C,WAAW9C,SAASh3B,GACzBzlB,KAAKilD,eACLjlD,KAAKuiD,WAAWr8B,KAAKT,EAAOqB,mBAC5BlF,YAAW,WACHxZ,EAAKm0C,WAELn0C,EAAKo9C,iBACLp9C,EAAKm3C,WAAW3D,YACZxzC,EAAK06C,QACL16C,EAAKq9C,SAAS5G,gCAO1B0C,EAAArhD,UAAAs8C,eAAR,WACI,IAAMJ,EAA2Bp8C,KAAKu/C,WAAWnD,UAC7CA,EAAUz7C,OAAS,IACnBX,KAAKu/C,WAAW/C,iBAChBx8C,KAAKilD,eAEoB,IAArB7I,EAAUz7C,OACVX,KAAKuiD,WAAWr8B,KAAKk2B,EAAU,GAAGt1B,mBAElC9mB,KAAKuiD,WAAWr8B,KAAKk2B,EAAU9jC,KAAI,SAACmN,GAChC,OAAOA,EAAOqB,wBAMtBy6B,EAAArhD,UAAAkkD,mBAAR,SAA2B3+B,GACvBA,EAAOoB,SACH7mB,KAAK8kD,eAAer/B,GAAUzlB,KAAKqkD,aAAa5+B,IAGhD87B,EAAArhD,UAAAwlD,wBAAR,WACI,IAAMjgC,EAAiBzlB,KAAKu/C,WAAW9B,kBACxB,OAAXh4B,IACAzlB,KAAKqkD,aAAa5+B,GAClBzlB,KAAK2jD,eAAc,KAInBpC,EAAArhD,UAAAylD,aAAR,WACI,IAAMC,EAAqB5lD,KAAKu/C,WAAWnD,UAE3C,GAAIwJ,EAAIjlD,OAAS,EAAG,CAChB,IAAM8kB,EAAiBmgC,EAAIA,EAAIjlD,OAAS,GACxCX,KAAK8kD,eAAer/B,GACpBzlB,KAAK6lD,uBAAuBpgC,EAAO9hB,MAAQ,OAM3C49C,EAAArhD,UAAA4/C,iBAAR,WACQ9/C,KAAKu8C,UAAYv8C,KAAK8+C,cACtB9+C,KAAK++C,YAAYC,cAAcl8C,MAAQ,GAEvC9C,KAAKylD,SAAS3F,oBAIdyB,EAAArhD,UAAA2lD,uBAAR,SAA+B/iD,GACvB9C,KAAK8+C,gBACL9+C,KAAK++C,YAAYC,cAAcl8C,MAAQA,IAKvCy+C,EAAArhD,UAAAgkD,6BAAR,SAAqC7hC,GAArC,IAAAja,EAAApI,KACUsB,EAAM+gB,EAAMyjC,MAEd9lD,KAAK8iD,OACDxhD,IAAQtB,KAAKyhD,KAAKI,KACjBvgD,IAAQtB,KAAKyhD,KAAKM,IAAM1/B,EAAM0jC,OAC/B/lD,KAAK2jD,eAAc,GACZriD,IAAQtB,KAAKyhD,KAAKE,IACzB3hD,KAAK2jD,gBACEriD,IAAQtB,KAAKyhD,KAAKG,MACzB5hD,KAAK0lD,0BACEpkD,IAAQtB,KAAKyhD,KAAKM,IACzB/hD,KAAKu/C,WAAW/B,0BAChBx9C,KAAKylD,SAAS5G,0BACT7+C,KAAK8+C,eACNz8B,EAAMu+B,kBAEHt/C,IAAQtB,KAAKyhD,KAAKO,OACzBhiD,KAAKu/C,WAAWnC,sBAChBp9C,KAAKylD,SAAS5G,0BACT7+C,KAAK8+C,eACNz8B,EAAMu+B,mBAIVt/C,IAAQtB,KAAKyhD,KAAKG,OAAStgD,IAAQtB,KAAKyhD,KAAKK,OAC5CxgD,IAAQtB,KAAKyhD,KAAKO,MAAQ3/B,EAAM0jC,SAQjCnkC,YAAW,WAAQxZ,EAAKq8C,mBAM5BlD,EAAArhD,UAAAykD,4BAAR,SAAoCtiC,GACpBA,EAAMyjC,QAEN9lD,KAAKyhD,KAAKC,WACd1hD,KAAK69C,aAAe79C,KAAK8+C,eACgB,KAAzC9+C,KAAK++C,YAAYC,cAAcl8C,OAC/B9C,KAAK2lD,gBAKTpE,EAAArhD,UAAAqkD,0BAAR,SAAkCliC,GAC9B,IAAM/gB,EAAM+gB,EAAMyjC,MAEdxkD,IAAQtB,KAAKyhD,KAAKI,KAAOvgD,IAAQtB,KAAKyhD,KAAKE,KACxCrgD,IAAQtB,KAAKyhD,KAAKM,IAAMzgD,IAAQtB,KAAKyhD,KAAKO,MAC1C1gD,IAAQtB,KAAKyhD,KAAKG,OACrB5hD,KAAKkkD,6BAA6B7hC,IAM1Ck/B,EAAArhD,UAAA6hB,MAAA,WACI/hB,KAAK2iD,UAAW,EACZ3iD,KAAKu8C,UAAYv8C,KAAK8+C,cACtB9+C,KAAK++C,YAAYC,cAAcj9B,QAE/B/hB,KAAKgmD,cAAchH,cAAcj9B,SAIzCw/B,EAAArhD,UAAA+lD,KAAA,WACIjmD,KAAK2iD,UAAW,EAChB3iD,KAAKgmD,cAAchH,cAAciH,QAGrC1E,EAAArhD,UAAA2jD,YAAA,WACI7jD,KAAKkmD,MAAQlmD,KAAKgmD,cAAchH,cAAcmH,aAGlD5E,EAAArhD,UAAAslD,eAAA,WACI,IAAMzkD,EAAIf,KAAKgmD,cAAchH,cAC7Bh/C,KAAKomD,KAAOrlD,EAAEslD,WACdrmD,KAAKsmD,IAAMvlD,EAAEwlD,UAAYxlD,EAAEk/C,cAG/BsB,EAAArhD,UAAAkjD,kBAAA,WACI,QAAgC,IAArBpjD,KAAK++C,YAA6B,CACzC,IAAMj8C,EAAgB9C,KAAK++C,YAAYC,cAAcl8C,MACrD9C,KAAK0iD,iBAAoC,IAAjB5/C,EAAMnC,OAC1B,EAAkC,GAA9BX,KAAK+iD,gBAAgBpiD,OAAc,EAAmB,GAAfmC,EAAMnC,SAndpDkiB,WAAAA,CAARC,KAAAA,iCAAiBnjB,sCAETkjB,WAAAA,CAARC,KAAAA,2EACQD,WAAAA,CAARC,KAAAA,yEACQD,WAAAA,CAARC,KAAAA,+EACQD,WAAAA,CAARC,KAAAA,mFACQD,WAAAA,CAARC,KAAAA,yEACQD,WAAAA,CAARC,KAAAA,yEACQD,WAAAA,CAARC,KAAAA,4EACQD,WAAAA,CAARC,KAAAA,4EAESD,WAAAA,CAAT0D,KAAAA,kCAAiBV,KAAAA,4CACRhD,WAAAA,CAAT0D,KAAAA,kCAAiBV,KAAAA,4CACRhD,WAAAA,CAAT0D,KAAAA,kCAAmBV,KAAAA,8CACVhD,WAAAA,CAAT0D,KAAAA,kCAAqBV,KAAAA,gDACZhD,WAAAA,CAAT0D,KAAAA,kCAAgBV,KAAAA,2CAGwBhD,WAAAA,CAAxCg+B,KAAAA,UAAU,YAAa,CAACC,QAAQ,0EACOj+B,WAAAA,CAAvCg+B,KAAAA,UAAU,WAAY,CAACC,QAAQ,6BAAkB7C,yDACPp7B,WAAAA,CAA1Cg+B,KAAAA,UAAU,cAAe,CAACC,QAAQ,wEAlC1BS,EAAepgD,WAAA,CAR3B4hB,KAAAA,UAAU,CACPC,SAAU,YACVC,SAAA,syEAEAujC,UAAW,CAACtF,uBACZH,cAAeC,KAAAA,kBAAkBC,aAFxBv6B,UAKA66B,GAAb,2BCbA,SAAAkF,KAA2B,OAAdA,EAAYtlD,WAAA,CAbxBulD,KAAAA,SAAS,CACNC,aAAc,CACVpF,gBACAtD,yBAEJt5C,QAAS,CACL48C,iBAEJqF,QAAS,CACLC,OAAAA,aACAC,MAAAA,gBAGKL,MCAbM,WAAA,WAWI,SAAAA,EACYC,EACAC,GADAjnD,KAAAgnD,KAAAA,EACAhnD,KAAAinD,UAAAA,EAZJjnD,KAAAknD,aAAoB,KACpBlnD,KAAAmnD,qBAA4B,KAC5BnnD,KAAAonD,cAA8B,KAC9BpnD,KAAAqnD,KAAwB,KAGxBrnD,KAAAsnD,QAAgC,IAAIC,KAAAA,gBAAgB,MACpDvnD,KAAAkD,OAA0BlD,KAAKsnD,QAAQngD,eACvCnH,KAAAwnD,sBAAsC,KAuFlD,OAhFIT,EAAA7mD,UAAAunD,YAAA,WACQznD,KAAKonD,eACLpnD,KAAK0nD,YAIbX,EAAA7mD,UAAAynD,UAAA,SAAUC,EAAaC,GACnB7nD,KAAK6nD,QAAUA,EACf,IAAMl1C,EAAM3S,KAAK8nD,kBAAkBF,GACnC,OAAO5nD,KAAK+nD,eAAep1C,IAGvBo0C,EAAA7mD,UAAA4nD,kBAAR,SAA0BF,GAA1B,IAAAI,EAAAhoD,KACI,OAAK4nD,GAID5nD,KAAKioD,cAAgBL,IACrB5nD,KAAKioD,YAAcL,EACnB5nD,KAAKwnD,sBAAwBxnD,KAAK6nD,QAAQD,GACrCt/C,WAAU,SAAA5D,GACP,IAAMwjD,EAAYF,EAAKf,UAAUkB,uBAAuBzjD,GACxDsjD,EAAKV,QAAQtkD,KAAKklD,OAIvBloD,KAAKkD,QAZDlD,KAAKkD,QAeZ6jD,EAAA7mD,UAAA6nD,eAAR,SAAuBp1C,GACnB,OAAK3S,KAAKqnD,KAON10C,IAAQ3S,KAAKqnD,MACbrnD,KAAK0nD,WACE1nD,KAAK+nD,eAAep1C,IAE3B3S,KAAKknD,eAAiBlnD,KAAKmnD,qBACpBnnD,KAAKmnD,sBAEhBnnD,KAAKmnD,qBAAuBnnD,KAAKknD,aAC1BkB,KAAAA,aAAaC,KAAKroD,KAAKknD,gBAdtBv0C,GACA3S,KAAKsoD,WAAW31C,GAEpB3S,KAAKmnD,qBAAuBnnD,KAAKknD,aAC1BlnD,KAAKknD,eAaZH,EAAA7mD,UAAAooD,WAAR,SAAmB31C,GACf,IAAMvK,EAAQpI,KACdA,KAAKqnD,KAAO10C,EAEZ3S,KAAKonD,cAAgBz0C,EAAIrK,UAAU,CAC/BtF,KAAM,SAAUF,GACZ,OAAOsF,EAAMmgD,mBAAmB51C,EAAK7P,IACtCkC,MAAO,SAACjE,GAAa,MAAMA,MAI9BgmD,EAAA7mD,UAAAwnD,SAAR,WACQ1nD,KAAKonD,eACLpnD,KAAKonD,cAAcoB,cAEnBxoD,KAAKwnD,uBACLxnD,KAAKwnD,sBAAsBgB,cAG/BxoD,KAAKwnD,sBAAwB,KAC7BxnD,KAAKknD,aAAe,KACpBlnD,KAAKmnD,qBAAuB,KAC5BnnD,KAAKonD,cAAgB,KACrBpnD,KAAKqnD,KAAO,MAGRN,EAAA7mD,UAAAqoD,mBAAR,SAA2BE,EAAY3lD,GAC/B2lD,IAAUzoD,KAAKqnD,OACfrnD,KAAKknD,aAAepkD,EACpB9C,KAAKgnD,KAAK0B,0DAjFAC,KAAAA,yBACKC,gBAAAA,gBAbd7B,EAAU5lD,WAAA,CAJtB0nD,KAAAA,KAAK,CACF/iC,KAAM,SACNgjC,MAAM,oCAcYH,KAAAA,kBACKC,gBAAAA,gBAbd7B,GAAb,2BCJA,SAAAgC,KAA2B,OAAdA,EAAY5nD,WAAA,CAZxBulD,KAAAA,SAAS,CACNC,aAAc,CACVI,YAEJH,QAAS,CAAEC,OAAAA,cACXliD,QAAS,CACLoiD,YAEJP,UAAW,CACPvnC,gBAGK8pC,qCCsBT,SAAAC,EAAoBC,GAAAjpD,KAAAipD,SAAAA,EAfpBjpD,KAAAkpD,WAAY,EACZlpD,KAAAmpD,SAAW,KACXnpD,KAAAopD,aAAc,EACdppD,KAAAqpD,eAAgB,EAkERrpD,KAAAspD,gBAAkB,SAAC5lD,WAqB/B,SA3FaslD,EAQTxpD,OAAAqC,eAAWmnD,EAAA9oD,UAAA,aAAU,KAArB,WACI,OAAOF,KAAKupD,iBAEhB,SAAsBnlD,GAClBpE,KAAKupD,YAAcnlD,mCAMvB4kD,EAAA9oD,UAAA2f,SAAA,WACQ7f,KAAKmpD,UACLnpD,KAAKwpD,iBAINR,EAAA9oD,UAAAupD,aAAP,SAAoBC,eAChB,IAAmB,IAAAC,EAAA5L,SAAA2L,GAAQE,EAAAD,EAAA3mD,QAAA4mD,EAAAzmD,KAAAymD,EAAAD,EAAA3mD,OAAE,CAAxB,IAAM6mD,EAAID,EAAA9mD,MACX9C,KAAKoiB,OAAOynC,uGAGpBb,EAAA9oD,UAAAkiB,OAAA,SAAO0nC,GAAP,IAAA1hD,EAAApI,KACQA,KAAK+e,aACL/e,KAAKkpD,WAAY,EACjBlpD,KAAK+e,WAAWgrC,WAAWD,GAAMxhD,WAAU,SAACpF,GACxCkF,EAAK+gD,SAAWjmD,EAAO8mD,MACvB5hD,EAAKohD,gBACLphD,EAAKkhD,gBAAgBlhD,EAAK+gD,UAC1B/gD,EAAK8gD,WAAY,KAClB,SAAClkD,GACAoD,EAAK8gD,WAAY,OAMtBF,EAAA9oD,UAAAglD,WAAP,SAAkBpiD,GACVA,IAAU9C,KAAKmpD,WACfnpD,KAAKmpD,SAAWrmD,EAChB9C,KAAKwpD,kBAKNR,EAAA9oD,UAAAilD,iBAAP,SAAwBC,GACpBplD,KAAKspD,gBAAkBlE,GAIpB4D,EAAA9oD,UAAAmlD,kBAAP,aAEA2D,EAAA9oD,UAAAgjD,SAAA,SAAS7gC,GACLriB,KAAKspD,gBAAgBjnC,EAAM/T,KAYxB06C,EAAA9oD,UAAA+pD,WAAP,WACIjqD,KAAKmpD,SAAW,KAChBnpD,KAAKopD,aAAc,EACnBppD,KAAKkqD,OAAS,KACdlqD,KAAKspD,gBAAgBtpD,KAAKmpD,WAGvBH,EAAA9oD,UAAAiqD,UAAP,SAAiBhB,GAAjB,IAAA/gD,EAAApI,KACIA,KAAK+e,WAAWqrC,UAAUjB,EAAU,OAAO7gD,WAAU,SAACuhD,GAClDzhD,EAAKghD,aAAc,EACnBhhD,EAAK8hD,OAASL,EAAKQ,0CAGpBrB,EAAA9oD,UAAAspD,cAAP,YAEsC,IAA9BxpD,KAAKmpD,SAASmB,OADP,UAEPtqD,KAAKmqD,UAAUnqD,KAAKmpD,oDAxEEoB,KAAAA,aAR9B1nC,WAAAA,CADCC,KAAAA,kHAPQkmC,EAAmBwB,EAAArpD,WAAA,CAd/B4hB,KAAAA,UAAU,CACPC,SAAU,kBACVC,SAAA,mUACAujC,UAAW,CACP,CACIrF,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAAkJ,KAC9BhJ,OAAO,YAEN,gHAqBqB+I,KAAAA,aAhBrBvB,wCCJb,SAAAyB,KAAsC,OAAzBA,EAAsBtpD,WAAA,CANlCulD,KAAAA,SAAS,CACNE,QAAS,CAACC,OAAAA,aAAcJ,aAAcK,MAAAA,YAAaiC,aAAc2B,UAAAA,aAAcC,gBAAAA,uBAC/EhmD,QAAS,CAACqkD,qBACVrC,aAAc,CAACqC,qBACfxC,UAAW,MAEFiE,MCXPr6C,SAASC,QAgBfu6C,oBAAA,WAwBE,SAAAA,IAnBgB5qD,KAAA6qD,OAAS,KACT7qD,KAAA8qD,WAAa,KACb9qD,KAAA+qD,aAAe,KACd/qD,KAAAgrD,mBAAqB,IAAInlC,KAAAA,aACzB7lB,KAAAirD,aAAe,IAAIplC,KAAAA,aAO7B7lB,KAAAkrD,iBAAkB,EAClBlrD,KAAAmrD,gBAAiB,EACjBnrD,KAAAorD,kBAAoB,EAGpBprD,KAAAqrD,YAA6Bj7C,SAAOi7C,cAwK7C,OAlKST,EAAA1qD,UAAA2f,SAAP,WAAA,IAAAzX,EAAApI,KACEA,KAAKsrD,YAEL9lC,OAAAA,KAAOxlB,KAAKurD,eAAe,SAACnnD,EAAG5D,GAC7B4H,EAAKojD,YAAcpjD,EAAKqjD,aAAaC,QAAQC,QAAQ,QAAQC,QACxB,IAAjCxnD,EAAEpD,QAAQoH,EAAKojD,eACjBpjD,EAAKgjD,kBAAoB5qD,MAG7BR,KAAK6rD,iBAAmB7rD,KAAKurD,cAAcvrD,KAAKorD,mBAChDprD,KAAK8rD,oBAGAlB,EAAA1qD,UAAA6rD,KAAP,WACM/rD,KAAKmrD,gBACPnrD,KAAKorD,oBACDprD,KAAKorD,kBAAoB,IAC3BprD,KAAKorD,kBAAoB,GAE3BprD,KAAK6rD,iBAAmB7rD,KAAKurD,cAAcvrD,KAAKorD,oBAEhDprD,KAAKyrD,aAAezrD,KAAKyrD,aAAaC,QAAQM,SAAS,EAAG,KAE5DhsD,KAAK8rD,oBAGAlB,EAAA1qD,UAAA+rD,mBAAP,WACEjsD,KAAKkrD,iBAAkB,EACvBlrD,KAAKmrD,gBAAiB,GAGjBP,EAAA1qD,UAAAgsD,kBAAP,WACElsD,KAAKmrD,gBAAiB,EACtBnrD,KAAKkrD,iBAAkB,GAGlBN,EAAA1qD,UAAA8C,KAAP,WACMhD,KAAKmrD,gBACPnrD,KAAKorD,oBACDprD,KAAKorD,mBAAqBprD,KAAKurD,cAAc5qD,SAC/CX,KAAKorD,kBAAoBprD,KAAKurD,cAAc5qD,OAAS,GAEvDX,KAAK6rD,iBAAmB7rD,KAAKurD,cAAcvrD,KAAKorD,sBAEhDprD,KAAKyrD,aAAezrD,KAAKyrD,aAAaC,QAAQS,IAAI,EAAG,KAEvDnsD,KAAK8rD,oBAGAlB,EAAA1qD,UAAAksD,UAAP,SAAiBC,GACf,IAAMC,EAAiBD,EAAIE,KAAKvsD,KAAKyrD,aAAaC,QAAQC,QAAQ,QAAS,QAC3EU,EAAMrsD,KAAKyrD,aAAaC,QAAQS,IAAIG,EAAgB,KACpD,IAAME,EAAcxsD,KAAKysD,wBAAwBJ,GACjDrsD,KAAKirD,aAAa/kC,KAAKsmC,GACvBxsD,KAAK0sD,oBAIA9B,EAAA1qD,UAAAysD,YAAP,SAAmBC,GACjB5sD,KAAKyrD,aAAezrD,KAAKyrD,aAAaC,QAAQkB,MAAMA,GACpD5sD,KAAKkrD,iBAAkB,EACvBlrD,KAAK8rD,oBAGAlB,EAAA1qD,UAAA2sD,WAAP,SAAkBjB,GAChB5rD,KAAKyrD,aAAezrD,KAAKyrD,aAAaC,QAAQE,KAAKA,GACnD5rD,KAAKmrD,gBAAiB,EACtBnrD,KAAK8rD,oBAGAlB,EAAA1qD,UAAA4sD,YAAP,WACE,IAAMC,EAAQ/sD,KAAKysD,wBAAwBr8C,YAC3CpQ,KAAKirD,aAAa/kC,KAAK6mC,GACvB/sD,KAAK0sD,oBAIA9B,EAAA1qD,UAAA8sD,cAAP,WACEhtD,KAAKirD,aAAa/kC,KAAK,MACvBlmB,KAAK0sD,oBAIA9B,EAAA1qD,UAAAwsD,iBAAP,WACE1sD,KAAKgrD,mBAAmB9kC,MAAK,IAIrB0kC,EAAA1qD,UAAA+sD,cAAV,WAKE,IAJA,IAAMzB,EAAcp7C,WAASw7C,OAGvBsB,EAAQ,GACLtB,EAHO5rD,KAAKyrD,aAAaC,QAAQM,SAAS,IAAK,KAAKJ,OAGpCA,GAAQJ,EAAaI,IAC5CsB,EAAM1oD,KAAKonD,GAGb5rD,KAAKurD,cAAgB4B,OAAAA,MAAQD,EAAO,KAG5BtC,EAAA1qD,UAAAorD,UAAV,WAGEl7C,SAAOy6C,OAAO7qD,KAAK6qD,QAEnB7qD,KAAK+sD,MAAQ38C,WAASu7C,QAAQ,QAC9B3rD,KAAKotD,aAAeptD,KAAKqrD,YAAYj7C,WAASw8C,SAC9C5sD,KAAKwrD,YAAcp7C,WAASw7C,OAG5B5rD,KAAKqtD,SAAWj9C,SAAOk9C,eAAc,GAGjCttD,KAAKutD,UACPvtD,KAAKyrD,aAAqC,WAAtBzrD,KAAK+qD,aAA4B36C,SAAOpQ,KAAKutD,SAAUvtD,KAAK8qD,YAC9E16C,SAAOpQ,KAAKutD,UACdvtD,KAAKwtD,aAAextD,KAAKyrD,aAAaC,QAAQC,QAAQ,SAEtD3rD,KAAKyrD,aAAer7C,WAEtBpQ,KAAKitD,iBAGGrC,EAAA1qD,UAAA4rD,iBAAV,WACE9rD,KAAKytD,aAAe,GAKpB,IAJA,IAAMC,EAAQ,GAAK1tD,KAAKyrD,aAAaC,QAAQC,QAAQ,SAASU,OAC5D,EAAIj8C,SAAOu9C,aAAaC,mBAAqB,EACzCC,EAAM,GAAKH,EAERltD,EAAIktD,EAAOltD,GAAKqtD,EAAKrtD,GAAK,EAAG,CACpC,IAAM6rD,EAAMrsD,KAAKyrD,aAAaC,QAAQC,QAAQ,SAASQ,IAAI3rD,EAAG,QAC9DR,KAAKytD,aAAajpD,KAAK6nD,KAIjBzB,EAAA1qD,UAAAusD,wBAAV,SAAkCJ,GAChC,OAAQrsD,KAAK+qD,cACX,IAAK,KACH,OAAOsB,EAAIyB,SAEb,IAAK,SACH,OAAOzB,EAAIlyC,OAAOna,KAAK8qD,YAEzB,IAAK,SACH,OAAOuB,EAET,IAAK,OACH,OAAOA,EAAI0B,SAEb,IAAK,QACH,OAAO1B,EAAI2B,UAEb,IAAK,MACH,OAAO3B,EAAI4B,cAEb,IAAK,SACH,OAAO5B,EAAI6B,WAEb,QACE,OAAO7B,IAtLJxpC,WAAAA,CAARC,KAAAA,yEACQD,WAAAA,CAARC,KAAAA,uEACQD,WAAAA,CAARC,KAAAA,2EACQD,WAAAA,CAARC,KAAAA,6EACSD,WAAAA,CAAT0D,KAAAA,oFACS1D,WAAAA,CAAT0D,KAAAA,8EATUqkC,EAAmBzpD,WAAA,CAN/B4hB,KAAAA,UAAU,CACTC,SAAU,cACVC,SAAA,05LAIW2nC,GAAb,GChBMx6C,SAASC,QAef89C,oBAAA,WAYI,SAAAA,IATSnuD,KAAAouD,YAAa,EACbpuD,KAAA8qD,WAAa,UACb9qD,KAAAquD,WAAY,EACZruD,KAAA+qD,aAAe,KACd/qD,KAAAsuD,aAAe,IAAIzoC,KAAAA,aACnB7lB,KAAAuuD,mBAAqB,IAAI1oC,KAAAA,aACnC7lB,KAAAwuD,WAAa,KAkGjB,OA5FIL,EAAAjuD,UAAA2f,SAAA,WACQ7f,KAAKquD,YACLruD,KAAKwuD,WAAa,MAEtBxuD,KAAKyuD,KAAOzuD,KAAK0uD,SAAWt+C,SAAOpQ,KAAK0uD,SAAU1uD,KAAK8qD,YAAc16C,WAGjEpQ,KAAK0uD,SACL1uD,KAAKyuD,KAA6B,WAAtBzuD,KAAK+qD,aAA4B36C,SAAOpQ,KAAK0uD,SAAU1uD,KAAK8qD,YACpE16C,SAAOpQ,KAAK0uD,UAEhB1uD,KAAKyuD,KAAOr+C,YAIpB+9C,EAAAjuD,UAAAyuD,aAAA,WACI3uD,KAAKyuD,KAAOzuD,KAAKyuD,KAAK/C,QAAQS,IAAI,EAAG,MAGzCgC,EAAAjuD,UAAA0uD,aAAA,WACI5uD,KAAKyuD,KAAOzuD,KAAKyuD,KAAK/C,QAAQM,SAAS,EAAG,MAG9CmC,EAAAjuD,UAAA2uD,eAAA,WACI7uD,KAAKyuD,KAAOzuD,KAAKyuD,KAAK/C,QAAQS,IAAI,EAAG,MAGzCgC,EAAAjuD,UAAA4uD,eAAA,WACI9uD,KAAKyuD,KAAOzuD,KAAKyuD,KAAK/C,QAAQM,SAAS,EAAG,MAG9CmC,EAAAjuD,UAAA6uD,eAAA,WACI/uD,KAAKyuD,KAAOzuD,KAAKyuD,KAAK/C,QAAQS,IAAI,EAAG,MAGzCgC,EAAAjuD,UAAA8uD,eAAA,WACIhvD,KAAKyuD,KAAOzuD,KAAKyuD,KAAK/C,QAAQM,SAAS,EAAG,MAG9CmC,EAAAjuD,UAAA+uD,WAAA,WACI,IAAMA,EAAajvD,KAAKysD,wBAAwBzsD,KAAKyuD,MACrDzuD,KAAKsuD,aAAapoC,KAAK+oC,GACvBjvD,KAAKkvD,oBAITf,EAAAjuD,UAAAivD,UAAA,WACI,IAAMF,EAAajvD,KAAKysD,wBAAwBr8C,YAChDpQ,KAAKsuD,aAAapoC,KAAK+oC,GACvBjvD,KAAKkvD,oBAITf,EAAAjuD,UAAAkvD,UAAA,WACIpvD,KAAKsuD,aAAapoC,KAAK,MACvBlmB,KAAKkvD,oBAITf,EAAAjuD,UAAAgvD,iBAAA,WACIlvD,KAAKuuD,mBAAmBroC,MAAK,IAIvBioC,EAAAjuD,UAAAusD,wBAAV,SAAkCgC,GAC9B,OAAQzuD,KAAK+qD,cACT,IAAK,KACD,OAAO0D,EAAKX,SAEhB,IAAK,SACD,OAAOW,EAAKt0C,OAAOna,KAAK8qD,YAE5B,IAAK,SACD,OAAO2D,EAEX,IAAK,OACD,OAAOA,EAAKV,SAEhB,IAAK,QACD,OAAOU,EAAKT,UAEhB,IAAK,MACD,OAAOS,EAAKR,cAEhB,IAAK,SACD,OAAOQ,EAAKP,WAEhB,QACI,OAAOO,IArGV5rC,WAAAA,CAARC,KAAAA,yEACQD,WAAAA,CAARC,KAAAA,2EACQD,WAAAA,CAARC,KAAAA,2EACQD,WAAAA,CAARC,KAAAA,0EACQD,WAAAA,CAARC,KAAAA,6EACSD,WAAAA,CAAT0D,KAAAA,8EACS1D,WAAAA,CAAT0D,KAAAA,oFARQ4nC,EAAmBhtD,WAAA,CAN/B4hB,KAAAA,UAAU,CACPC,SAAU,cACVC,SAAA,kuJAISkrC,GAAb,GCEAkB,eAAA,WAII,SAAAA,IAFUrvD,KAAAsvD,eAAiB,IAAIzpC,KAAAA,aAWnC,OANIwpC,EAAAnvD,UAAA2f,SAAA,aAGAwvC,EAAAnvD,UAAAqvD,WAAA,WACIvvD,KAAKsvD,eAAeppC,MAAK,IATnBrD,WAAAA,CAAT0D,KAAAA,gFAFQ8oC,EAAcluD,WAAA,CAT1B4hB,KAAAA,UAAU,CACPC,SAAU,eACVC,SAAA,6NAEAusC,gBAAiBC,KAAAA,wBAAwBC,OACzCC,WAAY,sWAIHN,GAAb,yBCfA,SAAAO,KAIA,OAHIA,EAAA1vD,UAAAynD,UAAA,SAAUv3C,EAAgB+J,GACtB,OAAOA,EAAS/J,EAAO+J,OAAOA,GAAU/J,EAAO+J,OAAO,iBAFjDy1C,EAAUzuD,WAAA,CAFtB0nD,KAAAA,KAAK,CAAC/iC,KAAM,YAEA8pC,MCLPC,OAASx/C,QAcfy/C,wBAAA,WAYI,SAAAA,IAVS9vD,KAAA+vD,UAAW,EACX/vD,KAAAgwD,UAAW,EACXhwD,KAAAiwD,WAAY,EACZjwD,KAAAkwD,MAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IACtClwD,KAAAmwD,aAAe,IAAItqC,KAAAA,aACtB7lB,KAAAowD,gBAAiB,EACjBpwD,KAAAqwD,gBAAiB,EACxBrwD,KAAAkjD,SAAgB,aAChBljD,KAAAmjD,UAAiB,mBA2ErB,SArFa2M,EAeTA,EAAA5vD,UAAA2f,SAAA,aAEAiwC,EAAA5vD,UAAAowD,cAAA,SAAcC,GACV,IAAMh5C,EAAM,IAAIlB,KACVm6C,EAAWj5C,EAAIk5C,QAAQl5C,EAAIm5C,UAAoB,EAARH,GAC7CvwD,KAAK8C,MAAQ+sD,OAAOW,GAAUr2C,UAElC21C,EAAA5vD,UAAAuwD,QAAA,SAAQl6C,GAEAvW,KAAK8C,MADLyT,GAAiB,KAATA,EACKs5C,OAAOt5C,GAAM4D,SAEb5D,GAKrBu5C,EAAA5vD,UAAAywD,QAAA,SAAQlC,GAEAzuD,KAAK8C,MADL2rD,GAAiB,KAATA,EACKoB,OAAOpB,GAAMt0C,SAEbs0C,GAKrBqB,EAAA5vD,UAAA0wD,iBAAA,SAAiBC,GACf7wD,KAAKowD,eAAiBS,GAcxBf,EAAA5vD,UAAA4wD,iBAAA,SAAiBD,GACb7wD,KAAKqwD,eAAiBQ,GAG1BrxD,OAAAqC,eAAIiuD,EAAA5vD,UAAA,QAAK,KAAT,WACI,OAAOF,KAAK+wD,gBAGhB,SAAUhnD,GACN/J,KAAK+wD,WAAahnD,EAClB/J,KAAKmwD,aAAajqC,KAAKnc,GACvB/J,KAAKkjD,SAASn5C,GACd/J,KAAKmjD,6CAGT2M,EAAA5vD,UAAAilD,iBAAA,SAAiBC,GACbplD,KAAKkjD,SAAWkC,GAGpB0K,EAAA5vD,UAAAmlD,kBAAA,SAAkBD,GACdplD,KAAKmjD,UAAYiC,GAGrB0K,EAAA5vD,UAAAglD,WAAA,SAAWpiD,GACHA,aAAiBuT,KACjBrW,KAAK8C,MAAQ+sD,OAAO/sD,GAAOqX,SAE3Bna,KAAK8C,MAAQA,GAjFZ+f,WAAAA,CAARC,KAAAA,2EACQD,WAAAA,CAARC,KAAAA,yEACQD,WAAAA,CAARC,KAAAA,yEACQD,WAAAA,CAARC,KAAAA,0EACQD,WAAAA,CAARC,KAAAA,qEACSD,WAAAA,CAAT0D,KAAAA,8EANQupC,EAAuBkB,EAAA7vD,WAAA,CAZnC4hB,KAAAA,UAAU,CACPC,SAAU,mBACVC,SAAA,i+EAEAujC,UAAW,CACP,CACIrF,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAA0P,KAC9BxP,OAAO,4JAINsO,GAAb,mCCaA,SAAAmB,KACA,OADaA,EAAoB9vD,WAAA,CAlBhCulD,KAAAA,SAAS,CACNE,QAAS,CAACC,OAAAA,aAAcC,MAAAA,aACxBH,aAAc,CACViE,oBACAuD,oBACAkB,eACAO,WACAE,yBAEJnrD,QAAS,CACLimD,oBACAuD,oBACAkB,eACAO,WACAE,yBAEJtJ,UAAW,MAEFyK,MCxBP7gD,SAASC,QAEF6gD,WAAa,CACtBC,MAAO,CACHC,UAAW,MAEf3uC,QAAS,CACL2uC,UAAW,KACXC,eAAgB,WAChBC,cAAe,KACfC,mBAAoB,cAkB5BC,2BAAA,WAdA,SAAAA,IAiBWxxD,KAAAyxD,aAAerhD,WAAS+J,SACxBna,KAAAwtD,aAAep9C,WAAS+J,SACxBna,KAAA0xD,aAAc,EAEd1xD,KAAAqwD,gBAAiB,EACfrwD,KAAAkwD,MAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAE1ClwD,KAAAgwD,UAAW,EACXhwD,KAAAiwD,WAAY,EACXjwD,KAAAmwD,aAAe,IAAItqC,KAAAA,aACtB7lB,KAAAkjD,SAAgB,aAChBljD,KAAAmjD,UAAiB,mBAgH5B,SA9HaqO,EAeFA,EAAAtxD,UAAA2f,SAAP,aAKO2xC,EAAAtxD,UAAAglD,WAAP,SAAkBpiD,GACd9C,KAAK8C,MAAQA,GAGV0uD,EAAAtxD,UAAAilD,iBAAP,SAAwBC,GACpBplD,KAAKkjD,SAAWkC,GAGboM,EAAAtxD,UAAAmlD,kBAAP,SAAyBD,KAIlBoM,EAAAtxD,UAAAyxD,aAAP,SAAoBxwC,GAChB,IAAMsvC,EAAUrgD,SAAOpQ,KAAKwtD,cACtBmD,EAAUxvC,EAChBnhB,KAAK4xD,YAAYnB,EAASE,IAGvBa,EAAAtxD,UAAA2xD,aAAP,SAAoB1wC,GAEhB,IAAMsvC,EAAUrgD,SAAO+Q,EAAOre,OACxB6tD,EAAU3wD,KAAKyxD,aACfK,EAAa9xD,KAAK4xD,YAAYnB,EAASE,GAExBxvC,EAAOre,MAC5B9C,KAAK8C,MAAQgvD,GAIVN,EAAAtxD,UAAA4wD,iBAAP,SAAwBD,GACpB7wD,KAAKqwD,eAAiBQ,GAKnBW,EAAAtxD,UAAA6xD,eAAP,WAEI,IAAMtB,EAAUrgD,SAAOpQ,KAAKwtD,cACtBwE,EAAc5hD,WAAS+J,OAAO,YACpCna,KAAK4xD,YAAYnB,EAASuB,IAGvBR,EAAAtxD,UAAA+xD,WAAP,SAAkB9wC,GACd,IAAM+wC,EAAY9hD,WAAS+J,SACrBg4C,EAAe/hD,SAAO8hD,GAAW/F,IAAIhrC,EAAOre,MAAO,SACnDsvD,EAAeF,EACrBlyD,KAAK4xD,YAAYO,EAAcC,IAG5BZ,EAAAtxD,UAAAmyD,gBAAP,SAAuBlxC,GACnBxP,QAAQ0N,IAAI,gBAAiB8B,IAI1BqwC,EAAAtxD,UAAAoyD,sBAAP,WACI,OAAItyD,KAAKgwD,SACE,sBAEJ,uBAGJwB,EAAAtxD,UAAAqyD,sBAAP,WACI,OAAIvyD,KAAKgwD,UAAYhwD,KAAKiwD,UACf,uBAGY,IAAnBjwD,KAAKiwD,UACE,uBAGW,IAAlBjwD,KAAKgwD,SACE,sBAEJ,wBAGJwB,EAAAtxD,UAAAsyD,sBAAP,WACI,OAAIxyD,KAAKgwD,UAAYhwD,KAAKiwD,UACf,uBAGY,IAAnBjwD,KAAKiwD,UACE,sBAEJ,uBAGJuB,EAAAtxD,UAAA0xD,YAAP,SAAmBnB,EAASE,GACxB,IACI8B,EADEx7C,EAAU7G,SAAOqgD,GAASt2C,OAAO,cAGnCs4C,EADAzyD,KAAKgwD,SACK5/C,SAAOugD,GAASx2C,OAAO,YAEvB,WAEd,IAAMu4C,EAActiD,SAAO6G,EAAU,GAAKw7C,EAAS,uBAC7CE,EAAiBviD,SAAOsiD,GAAav4C,SAM3C,OALAna,KAAKwtD,aAAemF,EACpB3yD,KAAKyxD,aAAekB,EACpB3yD,KAAK8C,MAAQ6vD,EACb3yD,KAAKkjD,SAASljD,KAAK8C,OAEZ6vD,GAlHF9vC,WAAAA,CAARC,KAAAA,qEACQD,WAAAA,CAARC,KAAAA,2EACQD,WAAAA,CAARC,KAAAA,yEACQD,WAAAA,CAARC,KAAAA,0EACSD,WAAAA,CAAT0D,KAAAA,8EAZQirC,EAA0BoB,EAAAzxD,WAAA,CAdtC4hB,KAAAA,UAAU,CACPC,SAAU,uBACVC,SAAA,u3CAEAujC,UAAW,CACP,CAAErF,QAAS0R,OAAAA,iBAAkBC,SAAU5B,YACvC,CAAE/P,QAAS4R,OAAAA,YAAaC,SAAUC,sBAAAA,mBAClC,CACI9R,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAAsR,KAC9BpR,OAAO,kLAINgQ,GAAb,sCCQA,SAAA0B,KACA,OADaA,EAAuB/xD,WAAA,CA1BnCulD,KAAAA,SAAS,CACNE,QAAS,CACLC,OAAAA,aACAC,MAAAA,YACAqM,MAAAA,oBACAC,WAAAA,oBACAC,UAAAA,mBACAC,SAAAA,oBACAC,SAAAA,eACAtC,qBAEAuC,OAAAA,iBAEJ7M,aAAc,CACV6K,4BAEJ7sD,QAAS,CACLyuD,WAAAA,oBACAC,UAAAA,mBACAC,SAAAA,oBACAC,SAAAA,eACA/B,4BAEJhL,UAAW,MAGF0M,eCtCT,SAAYp+C,GACR9U,KAAK2D,MAAQmR,EAAQnR,MACrB3D,KAAK8C,MAAQgS,EAAQhS,uCCG7B,SAAA2wD,IAsBEzzD,KAAA0zD,iBAAwB,GAExB1zD,KAAAqc,OAAc,GACdrc,KAAAspD,gBAAkB,SAAC5lD,WAiFrB,SA1Fa+vD,EAWXA,EAAAvzD,UAAAyzD,gBAAA,SAAgBtxC,GAAhB,IAAAja,EAAApI,KAEEA,KAAK4zD,QAAQvxC,GAAO/Z,WAAU,SAACwM,GAC7B1M,EAAKsrD,iBAAmB5+C,MAI5B2+C,EAAAvzD,UAAAglD,WAAA,SAAWvyC,KAGX8gD,EAAAvzD,UAAAilD,iBAAA,SAAiBC,GACfplD,KAAKspD,gBAAkBlE,GAIzBqO,EAAAvzD,UAAAmlD,kBAAA,SAAkBD,KAElBqO,EAAAvzD,UAAAw+C,YAAA,SAAYC,KAEZ8U,EAAAvzD,UAAA2f,SAAA,WAAA,IAAAzX,EAAApI,KACMA,KAAKiV,QACHjV,KAAKiV,OAAOD,eACdhV,KAAK6zD,sBAAsB7zD,KAAKiV,OAAOD,eAAe1M,WAAU,SAACmd,GAC/Drd,EAAK0rD,yBAA2BruC,MAQxCguC,EAAAvzD,UAAA0zD,QAAA,SAAQG,GAAR,IAAA3rD,EAAApI,KAqBE,OAnBAA,KAAKg0D,QAAU,IAAIzM,KAAAA,gBAA0B,IAEnBvnD,KAAK+e,WAAWk1C,cAAcF,GAEtCzrD,WAChB,SAACwM,GAIC,IAFA,IAAMo/C,EAA0B,IAAIv0D,MAE3Ba,EAAI,EAAGA,EAAIsU,EAAQnU,OAAQH,IAClC0zD,EAAc1vD,KAAK,IAAImiB,SAAO7R,EAAQtU,KAExC4H,EAAK4rD,QAAQhxD,KAAKkxD,MAEpB,SAAClvD,GACCoD,EAAK4rD,QAAQhvD,MAAMA,MAIhBhF,KAAKg0D,QAAQ7sD,gBAGtBssD,EAAAvzD,UAAAi0D,cAAA,SAAc9xC,KACdoxC,EAAAvzD,UAAA2zD,sBAAA,SAAsB/wD,GAAtB,IAAAsF,EAAApI,KAeE,OAbAA,KAAKo0D,cAAgB,IAAI7M,KAAAA,gBAAwB,MACxBvnD,KAAK+e,WAAWs1C,qBAAqBvxD,GAE7CwF,WACf,SAACmd,GAECrd,EAAKgsD,cAAcpxD,KAAKyiB,MAE1B,SAACzgB,GACCoD,EAAKgsD,cAAcpvD,MAAMA,MAItBhF,KAAKo0D,cAAcjtD,gBAG5BssD,EAAAvzD,UAAAo0D,aAAA,WACEt0D,KAAKg0D,QAAQhxD,KAAK,IAAIrD,QAnFfkjB,WAAAA,CAARC,KAAAA,2EACQD,WAAAA,CAARC,KAAAA,0EACQD,WAAAA,CAARC,KAAAA,uEALU2wC,EAAoBc,EAAApzD,WAAA,CAhBhC4hB,KAAAA,UAAU,CACTC,SAAU,gBACVC,SAAU,uQAOVujC,UAAW,CACT,CACErF,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAAiT,KAC9B/S,OAAO,OAGAiS,oCCrBX,SAAAe,KA2PF,OAvPSA,EAAAt0D,UAAAu0D,kBAAP,SAAyBC,EAAoBC,GAE3C,IAAMC,EAAmB50D,KAAK60D,mBAAmBH,EAAYC,GAC7D,GAAIG,OAAAA,QAAUF,GAAa,OAAOF,EAGlC,IAAMK,EAAe/0D,KAAKg1D,yBAAyBN,GACnD,OAAII,OAAAA,QAAUC,GAAwBL,GAGtC10D,KAAKi1D,wCAAwCL,EAAUG,GAChDL,IAIDF,EAAAt0D,UAAAg1D,iBAAR,SAAyBC,EAAyBC,GAChD,IAAIN,OAAAA,QAAUK,KAAgBL,OAAAA,QAAUM,GAAxC,CACA,IAAIC,EAAmB,GAMvB,OALA7vC,OAAAA,KAAO2vC,GAAa,SAAC/xC,GACfA,EAAO0C,OAASsvC,IAClBC,EAAcjyC,MAGXiyC,IAGDb,EAAAt0D,UAAAo1D,uBAAR,SAA+BlyC,EAAamyC,GAC1C,IAAIT,OAAAA,QAAU1xC,KAAW0xC,OAAAA,QAAUS,GAAnC,CACA,IAAIC,EAAoB,GAOxB,OANAhwC,OAAAA,KAAOpC,EAAOqyC,OAAO,SAACC,GAChBA,EAAK/xD,QAAU4xD,IACjBC,EAAYE,MAITF,IAGDhB,EAAAt0D,UAAAy1D,4CAAR,SACGvyC,EAAgBmyC,EAAmBK,GACpC,KAAId,OAAAA,QAAU1xC,IAAW0xC,OAAAA,QAAUS,IAAcT,OAAAA,QAAUc,IAA3D,CACA,IAAMJ,EAAiBx1D,KAAKs1D,uBAAuBlyC,EAAQmyC,GAC3D,IAAIT,OAAAA,QAAUU,GAAd,CACA,IAAIK,EAAuB,GAO3B,OANArwC,OAAAA,KAAOgwC,EAAUM,UAAU,SAACj0C,GACtBA,EAAQle,QAAUiyD,IACpBC,EAAeh0C,MAIZg0C,KAGDrB,EAAAt0D,UAAA61D,wBAAR,SAAgC3yC,EAAaO,GAC3C,IAAImxC,OAAAA,QAAU1xC,KAAW0xC,OAAAA,QAAUnxC,GAAnC,CACA,GAAIhkB,MAAMqS,QAAQoR,GAAS,CAEzB,IADA,IAAI7X,OAAQ,EACH/K,EAAI,EAAGA,EAAI4iB,EAAOziB,SACpBm0D,OAAAA,QAAU1xC,EAAO5iB,MACpB+K,EAAWvL,KAAK+1D,wBAAwB3yC,EAAO5iB,GAAImjB,IAEhDmxC,OAAAA,QAAUvpD,IAJkB/K,KAQnC,OAAO+K,EACF,GAAsB,iBAAX6X,OAAX,CACL,GAAIpjB,KAAKg2D,uBAAuB5yC,EAAQO,GACtC,OAAOP,EACF,GAAIpjB,KAAKi2D,4BAA4B7yC,GAAS,CACnD,IAAM8yC,EAAY9yC,EAAOqyC,OAASryC,EAAO0yC,UAAY1yC,EAAO5E,UAC5D,OAAOxe,KAAK+1D,wBAAwBG,EAAUvyC,OAS5C6wC,EAAAt0D,UAAAi2D,sCAAR,SAA8C/yC,EAAaO,GACzD,IAAImxC,OAAAA,QAAU1xC,KAAW0xC,OAAAA,QAAUnxC,GACnC,OAAO3jB,KAAKo2D,8BAA8BhzC,EAAQA,EAAQO,IAIpD6wC,EAAAt0D,UAAAk2D,8BAAR,SAAsCC,EAAaC,EAAa3yC,GAC9D,GAAIhkB,MAAMqS,QAAQskD,GAAS,CAEzB,IADA,IAAIC,OAAa,EACR/1D,EAAI,EAAGA,EAAI81D,EAAO31D,SACpBm0D,OAAAA,QAAUwB,EAAO91D,MACpB+1D,EAAgBv2D,KAAKo2D,8BAA8BE,EAAQA,EAAO91D,GAAImjB,IAEnEmxC,OAAAA,QAAUyB,IAJkB/1D,KASnC,OAAO+1D,EACF,GAAsB,iBAAXD,OAAX,CACL,GAAIt2D,KAAKg2D,uBAAuBM,EAAQ3yC,GACtC,OAAO0yC,EACF,GAAIr2D,KAAKi2D,4BAA4BK,GAAS,CACnD,IAAMJ,EAAYI,EAAOb,OAASa,EAAOR,UAAYQ,EAAO93C,UAC5D,OAAOxe,KAAKo2D,8BAA8BF,EAAUA,EAAUvyC,MAU5D6wC,EAAAt0D,UAAA+1D,4BAAR,SAAoCK,GAClC,GAAsB,iBAAXA,EAAqB,CAC9B,IAAME,EAAah3D,OAAOkS,KAAK4kD,GAC/B,GAAIG,OAAAA,SAAWD,EAAY,UACzBC,OAAAA,SAAWD,EAAY,aACvBC,OAAAA,SAAWD,EAAY,aACvB,OAAO,EAGX,OAAO,GAGDhC,EAAAt0D,UAAA81D,uBAAR,SAA+BM,EAAgBhoD,GAC7C,OAAOgoD,EAAW,KAAMhoD,GAIlBkmD,EAAAt0D,UAAA80D,yBAAR,SAAiC5xC,GAC/B,IAAMszC,EAAgC,GAEtC,OADA12D,KAAK22D,0BAA0BvzC,EAAQszC,GAChCA,GAGDlC,EAAAt0D,UAAAy2D,0BAAR,SAAkCC,EAAgBC,GAChD,IAAI/B,OAAAA,QAAU8B,GACd,GAAIj3D,MAAMqS,QAAQ4kD,GAChB,IAAK,IAAIp2D,EAAI,EAAGA,EAAIo2D,EAAUj2D,OAAQH,IAC/Bs0D,OAAAA,QAAU8B,EAAUp2D,KACvBR,KAAK22D,0BAA0BC,EAAUp2D,GAAIq2D,QAG5C,GAAyB,iBAAdD,EAChB,GAAK9B,OAAAA,QAAU8B,EAAUE,YAElB,GAAI92D,KAAKi2D,4BAA4BW,GAAY,CACtD,IAAMV,EAAYU,EAAUnB,OAASmB,EAAUd,UAAYc,EAAUp4C,UACrExe,KAAK22D,0BAA0BT,EAAUW,SAHzCA,EAAaryD,KAAKoyD,IAQhBpC,EAAAt0D,UAAA62D,sBAAR,SAA8BC,EAA2BC,GACvD,IAAK,IAAMC,KAAUD,EACfnC,OAAAA,QAAUkC,EAAkBE,MAC9BF,EAAkBE,GAAUD,EAAgBC,IAGhD,OAAOF,GAGDxC,EAAAt0D,UAAA+0D,wCAAR,SACGkC,EAA+BC,GADlC,IAAAhvD,EAAApI,KAcE,OAZAwlB,OAAAA,KAAO4xC,GAAmB,SAACC,GACzB,IAAMC,EACJlvD,EAAKmvD,oBAAoBF,EAAYP,UAAWK,GAE9CrC,OAAAA,QAAUwC,GACZ3lD,QAAQ3M,MAAM,gDAAiDqyD,EAAYP,YAE3EO,EAAcjvD,EAAK2uD,sBAAsBM,EAAaC,UACtDD,EAAcjvD,EAAKovD,uCAAuCH,IAC5B,cAG3BD,GAGD5C,EAAAt0D,UAAAu3D,sBAAR,SAA8B/kD,EAAmB4jD,GAC/C,IAAMoB,EAAgBhlD,EAAM1R,QAAQs1D,IACb,IAAnBoB,GAEJhlD,EAAMlJ,OAAOkuD,EAAe,IAGtBlD,EAAAt0D,UAAAs3D,uCAAR,SAA+CH,GAA/C,IAAAjvD,EAAApI,KAYE,OAXIL,MAAMqS,QAAQqlD,EAAYP,UAAUa,mBACtCnyC,OAAAA,KAAO6xC,EAAYP,UAAUa,kBAAkB,SAACC,GAC9C,IAAMC,EAA6BzvD,EAAK+tD,sCACtCkB,EAAaO,GAEf,GAAKj4D,MAAMqS,QAAQ6lD,GAAnB,CACA,IAAMtsD,EAAWnD,EAAK2tD,wBAAwB8B,EAAgBD,GAE9DxvD,EAAKqvD,sBAAsBI,EAAgBtsD,OAGxC8rD,GAGD7C,EAAAt0D,UAAAq3D,oBAAR,SAA4BO,EAAoBX,GAC9C,GAAIrC,OAAAA,QAAUgD,EAActsD,MAC1BmG,QAAQ3M,MAAM,iDAAkD8yD,OADlE,CAIA,IAAIhD,OAAAA,QAAUqC,EAAsBW,EAActsD,OAIlD,OAAKspD,OAAAA,QAAUgD,EAAcn0C,YAMxBmxC,OAAAA,QAAUgD,EAAcpC,OAAUZ,OAAAA,QAAUgD,EAAcj2C,SAO1DizC,OAAAA,QAAUgD,EAAcpC,WAM7B/jD,QAAQ3M,MAAM,2CAA4C8yD,EAAchB,WAL/D92D,KAAKs1D,uBACV6B,EAAsBW,EAActsD,MACpCssD,EAAcpC,MATT11D,KAAK21D,4CACVwB,EAAsBW,EAActsD,MACpCssD,EAAcpC,KACdoC,EAAcj2C,SATT7hB,KAAK+1D,wBACVoB,EAAsBW,EAActsD,MACpCssD,EAAcn0C,YANhBhS,QAAQ3M,MAAM,gDAAiD8yD,KAyB3DtD,EAAAt0D,UAAA20D,mBAAR,SAA2BH,EAAiBqD,GAA5C,IAAA3vD,EAAApI,KACQg4D,EAA8BtD,EAAWsD,gBAE/C,IAAIlD,OAAAA,QAAUkD,GAAd,CAEA,IAAMb,EAAgC,GAMtC,OAJA3xC,OAAAA,KAAOwyC,GAAiB,SAAClB,GACvBK,EAAsBL,EAAUmB,OAC9B7vD,EAAK8sD,iBAAiB6C,EAAwBjB,EAAUoB,aAErDf,IA1PE3C,EAAkBrzD,WAAA,CAD9B2F,KAAAA,iDACY0tD,oCCGT,SAAA2D,EAAYrjD,GAAZ,IAAA1M,EAEI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YACdoI,EAAKg6C,YAActtC,EAAQstC,aAAe,GAC1Ch6C,EAAK2V,YAAcnJ,QAAAA,eAAehC,iBAE1C,OATuCxG,UAAAA,EAAAA,GASvC+rD,GATuCtjD,gDCInC,SAAAujD,EAAYtjD,GAAZ,IAAA1M,EAEI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YACdoI,EAAKg6C,YAActtC,EAAQstC,aAAe,GAC1Ch6C,EAAK+X,WAAarL,EAAQqL,aAAc,EACxC/X,EAAKiwD,KAAOvjD,EAAQujD,MAAQ,GAC5BjwD,EAAK8M,cAAgB,WACrB9M,EAAK2V,YAAcnJ,QAAAA,eAAehC,iBAE1C,OAb2CxG,UAAAA,EAAAA,GAa3CgsD,GAb2CD,8CCKvC,SAAAG,EAAYxjD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YACdoI,EAAK8M,cAAgB,SACrB9M,EAAK0M,QAAUA,EAAQA,SAAW,GAClC1M,EAAK2V,YAAcnJ,QAAAA,eAAehC,eAClCxK,EAAK2W,WAAajK,EAAQiK,YAAc,KAGhD,OAboC3S,UAAAA,EAAAA,GAapCksD,GAboCzjD,2CCKhC,SAAA0jD,EAAYzjD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YACdoI,EAAK8M,cAAgB,YACrB9M,EAAK0M,QAAUA,EAAQA,SAAW,GAClC1M,EAAK2V,YAAcnJ,QAAAA,eAAehC,iBAG1C,OAZsCxG,UAAAA,EAAAA,GAYtCmsD,GAZsC1jD,uCCGlC,SAAA2jD,EAAY1jD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YAHlBoI,EAAA4nD,UAAW,EACX5nD,EAAAqwD,gBAAiB,EAGbrwD,EAAK8M,cAAgB,OACrB9M,EAAK2V,YAAcnJ,QAAAA,eAAehC,iBAE1C,OARkCxG,UAAAA,EAAAA,GAQlCosD,GARkC3jD,8CCI9B,SAAA6jD,EAAY5jD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YACdoI,EAAK8M,cAAgB,eACrB9M,EAAK0M,QAAUA,EAAQA,SAAW,GAClC1M,EAAK2V,YAAcnJ,QAAAA,eAAehC,iBAG1C,OAXyCxG,UAAAA,EAAAA,GAWzCssD,GAXyCJ,2CCCrC,SAAAK,EAAY7jD,UACR5I,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,KAEtB,OAL6CoM,UAAAA,EAAAA,GAK7CusD,GAL6C9jD,wCCOzC,SAAA+jD,EAAY9jD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YAHlBoI,EAAA+X,YAAa,EAIT/X,EAAK8M,cAAgB,QACrB9M,EAAKoW,UAAY1J,EAAQ0J,WAAa,GACtCpW,EAAK2V,YAAcnJ,QAAAA,eAAeN,eAE1C,OAVmClI,UAAAA,EAAAA,GAUnCwsD,GAVmCD,8CCG/B,SAAAE,EAAY/jD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YACdoI,EAAK8M,cAAgB,YACrB9M,EAAKoW,UAAY1J,EAAQ0J,WAAa,GACtCpW,EAAK2V,YAAcnJ,QAAAA,eAAeH,eAE1C,OATuCrI,UAAAA,EAAAA,GASvCysD,GATuCF,6CCEnC,SAAAG,EAAYhkD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YACdoI,EAAK8M,cAAgB,WACrB9M,EAAK0M,QAAUA,EAAQA,SAAW,GAClC1M,EAAK2V,YAAcnJ,QAAAA,eAAehC,iBAG1C,OAXsCxG,UAAAA,EAAAA,GAWtC0sD,GAXsCjkD,6CCIlC,SAAAkkD,EAAYjkD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YAJlBoI,EAAA4nD,UAAW,EACX5nD,EAAAqwD,gBAAiB,EAIbrwD,EAAK8M,cAAgB,OACrB9M,EAAK2W,WAAajK,EAAQiK,WAC1B3W,EAAK2V,YAAcnJ,QAAAA,eAAehC,iBAE1C,OAVwCxG,UAAAA,EAAAA,GAUxC2sD,GAVwClkD,4CCMpC,SAAAmkD,EAAYlkD,GAAZ,IAAA1M,EACI8D,EAAAtL,KAAAZ,KAAM8U,IAAQ9U,YACdoI,EAAK8M,cAAgB,SACrB9M,EAAK6wD,UAAYnkD,EAAQmkD,UACzB7wD,EAAK8wD,iBAAmBpkD,EAAQokD,iBAChC9wD,EAAK0M,QAAUA,EAAQA,QACvB1M,EAAK+wD,iBAAmBrkD,EAAQqkD,iBAChC/wD,EAAKgxD,UAAYtkD,EAAQqkD,iBACzB/wD,EAAK2V,YAAcnJ,QAAAA,eAAehC,iBAE1C,OAhBuCxG,UAAAA,EAAAA,GAgBvC4sD,GAhBuCnkD,8CCErC,SAAAwkD,EAAYnsD,GAAZ,IAAA9E,EACE8D,EAAAtL,KAAAZ,KAAMkN,IAAYlN,YAHpBoI,EAAAsT,kBAAmB,EAKjBtT,EAAKsT,iBAAoD,SAAjCxO,EAAYwO,mBAExC,OATyCtP,UAAAA,EAAAA,GASzCitD,GATyC/rD,gDCIvC,SAAAgsD,EAAYpsD,GAAZ,IAAA9E,EACE8D,EAAAtL,KAAAZ,KAAMkN,IAAYlN,KACZ6W,EAAW3J,EAAY2J,WAC7BzO,EAAKyO,KAAOA,IAEhB,OATwCzK,UAAAA,EAAAA,GASxCktD,GATwChsD,gDCItC,SAAAisD,EAAYrsD,GAAZ,IAAA9E,EACE8D,EAAAtL,KAAAZ,KAAMkN,IAAYlN,KACZyW,EAAWvJ,EAAYuJ,WAC7BrO,EAAKqO,KAAOA,IAEhB,OATwCrK,UAAAA,EAAAA,GASxCmtD,GATwCjsD,iBCGxCksD,gBAAA,WAKE,SAAAA,IAFAx5D,KAAAy5D,mBAAoB,EAmHtB,OA/GED,EAAAt5D,UAAAm0D,qBAAA,SAAqBvxD,GACnB,IAAI42D,EAAgB15D,KAAK25D,aAWzBD,GATAA,EAAgBA,EAAcphD,KAAI,SAAU3F,GAK1C,OAJe,IAAIgU,SAAO,CACxBhjB,MAAOgP,EAAIhP,MACXb,MAAO6P,EAAIinD,cAMezd,QAC5B,SAAA12B,GAAU,OAAAA,EAAO3iB,QAAUA,KAG7B,IAAMsT,EAA6B,IAAImxC,KAAAA,gBAAqB,IAO5D,OANKvnD,KAAKy5D,kBAGRrjD,EAAKpR,MAAM,IAAIqV,MAAM,0BAFrBjE,EAAKpT,KAAK02D,EAAc,IAKnBtjD,EAAKjP,gBAEdqyD,EAAAt5D,UAAA6pD,WAAA,SAAWnC,GACT,OAAOiS,KAAAA,GAAG,CAAE7P,MAAO,MAErBwP,EAAAt5D,UAAAkqD,UAAA,SAAUxC,GACR,OAAOiS,KAAAA,GAAG,CAAE7P,MAAO,MAErBwP,EAAAt5D,UAAA+zD,cAAA,SAAcF,GACZ,IAAI2F,EAAgB15D,KAAK25D,aAWzBD,GATAA,EAAgBA,EAAcphD,KAAI,SAAU3F,GAK1C,OAJe,IAAIgU,SAAO,CACxBhjB,MAAOgP,EAAIhP,MACXb,MAAO6P,EAAIinD,cAMezd,QAC5B,SAAA12B,GAAU,OAAsC,IAAtCA,EAAO9hB,MAAM3C,QAAQ+yD,MAGjC,IAAM39C,EAA6B,IAAImxC,KAAAA,gBAAqB,IAO5D,OANKvnD,KAAKy5D,kBAGRrjD,EAAKpR,MAAM,IAAIqV,MAAM,0BAFrBjE,EAAKpT,KAAK02D,GAKLtjD,EAAKjP,gBAGdqyD,EAAAt5D,UAAAy5D,WAAA,WACE,MAAO,CACL,CACEC,QAAS,uCACTj2D,MAAO,QAET,CACEi2D,QAAS,uCACTj2D,MAAO,kBAET,CACEi2D,QAAS,uCACTj2D,MAAO,cAET,CACEi2D,QAAS,uCACTj2D,MAAO,mBAET,CACEi2D,QAAS,uCACTj2D,MAAO,uBAET,CACEi2D,QAAS,uCACTj2D,MAAO,6CAET,CACEi2D,QAAS,uCACTj2D,MAAO,0BAET,CACEi2D,QAAS,uCACTj2D,MAAO,0BAET,CACEi2D,QAAS,uCACTj2D,MAAO,WAET,CACEi2D,QAAS,uCACTj2D,MAAO,SAET,CACEi2D,QAAS,uCACTj2D,MAAO,UAET,CACEi2D,QAAS,uCACTj2D,MAAO,aAMf61D,EAtHA,GCDMppD,SAASC,QAGfypD,+BAAA,WAGE,SAAAA,IADA95D,KAAAqR,YAAmB,GA0LrB,OAtLEyoD,EAAA55D,UAAA65D,mBAAA,SAAmBj0C,EAAck0C,GAAjC,IAAA5xD,EAAApI,KACQi6D,EAAgB,CACpBnQ,KAAM,GACNoQ,SAAU,SAAC54D,EAAawK,QAAA,IAAAA,IAAAA,EAAA,GACtB,IAAMquD,EAAY74D,EAAImgB,MAAM,KAC5B,OAAI04C,EAAUx5D,OAAS,EACdyH,EAAKgyD,cAAcD,EAAWF,EAASnQ,KAAKh+C,IAE9CmuD,EAASnQ,KAAKh+C,GAAOxK,IAE9B+4D,cAAe,WACb,OAAOJ,EAASnQ,MAElBwQ,gBAAiB,SAACxuD,GAChB,YADgB,IAAAA,IAAAA,EAAA,GACTmuD,EAASnQ,KAAKh+C,KAIzB,GAAIwZ,OAAAA,QAAU00C,GAAa,CACzB,IAAMO,EAAoB,GAC1B/0C,OAAAA,KAAOw0C,GAAY,SAACQ,GAClBD,EAAM/1D,KAAK4D,EAAKqyD,oBAAoBD,OAItCP,EAASnQ,KAAO4Q,OAAAA,OAASH,EAAO,qBAAqBI,eAGrDV,EAASnQ,KAAKtlD,KAAKxE,KAAKy6D,oBAAoBT,IAG9Ch6D,KAAK46D,UAAU90C,EAAMm0C,IAIvBH,EAAA55D,UAAA06D,UAAA,SAAU90C,EAAMwwC,GACdt2D,KAAKqR,YAAYyU,GAAQwwC,GAG3BwD,EAAA55D,UAAA26D,UAAA,SAAU/0C,GACR,OAAO9lB,KAAKqR,YAAYyU,IAAS,MAGnCg0C,EAAA55D,UAAAk6D,cAAA,SAAc1rD,EAAqB4nD,GAEjC,IAAMwE,EAAU,GAIhB,GAFA96D,KAAK+6D,aAAarsD,EAAM4nD,EAAQwE,GAE5BA,EAAQn6D,OAAS,EACnB,MAAO,CACLmC,MAAOg4D,EAAQ,GACfx0C,UAAWlW,SAAOkmD,EAAO0E,mBAAmB7gD,OAAO,QAMzD2/C,EAAA55D,UAAA66D,aAAA,SAAarsD,EAAM4nD,EAAQwE,GAA3B,IAAA1yD,EAAApI,KACE,IAAIi7D,OAAAA,MAAQ3E,GAIZ,GAAI5nD,EAAK/N,QAAU,EACZs6D,OAAAA,MAAQ3E,EAAO5nD,EAAK,MACvBosD,EAAQt2D,KAAK8xD,EAAO5nD,EAAK,SAF7B,CAOA,IAAMwsD,EAAUxsD,EAAKlF,OAAO,GACtBlI,EAAMoN,EAAK,GAEb4W,OAAAA,QAAUgxC,EAAOh1D,KAASg1D,EAAOh1D,GAAKX,OAAS,EACjD6kB,OAAAA,KAAO8wC,EAAOh1D,IAAM,SAAC65D,GACnB/yD,EAAK2yD,aAAaG,EAAQlf,MAAM,GAAImf,EAAaL,MAGnD96D,KAAK+6D,aAAaG,EAAQlf,MAAM,GAAIsa,EAAOh1D,GAAMw5D,KAI7ChB,EAAA55D,UAAAu6D,oBAAR,SAA4BD,GAC1B,IAAIS,OAAAA,MAAQT,GAAZ,CAIA,IAAMY,EAAqB,CACzBJ,kBAAmBR,EAAUQ,mBAmB/B,GAhBIR,EAAUa,UAAYb,EAAUa,SAAStqD,OAC3CqqD,EAAcC,SAAWb,EAAUa,SAAStqD,MAG1CypD,EAAUc,SAAWd,EAAUc,QAAQvqD,OACzCqqD,EAAcE,QAAUd,EAAUc,QAAQvqD,MAGxCypD,EAAUhvD,MAAQgvD,EAAUhvD,KAAKuF,OACnCqqD,EAAc5vD,KAAOgvD,EAAUhvD,KAAKuF,MAGlCypD,EAAUe,eAAiBf,EAAUe,cAAcxqD,OACrDqqD,EAAcG,cAAgBf,EAAUe,cAAcxqD,MAGpDypD,EAAUgB,SAAU,CACtB,IAAMA,EAAWhB,EAAUgB,SAC3BJ,EAAcI,SAAWA,EAASzqD,KAIpC,GAAIypD,EAAUiB,IAAK,CACjB,IAAMC,EAAoB17D,KAAK27D,cAAcnB,EAAUiB,KAGvDG,OAAAA,OAASR,EAAeM,GAG1B,OAAON,IAGDtB,EAAA55D,UAAAy7D,cAAR,SAAsBF,GAAtB,IAAArzD,EAAApI,KAEE,IAAKy7D,EACH,OAAO,KAGT,IAAMI,EAAc,GACpB,GAAIv2C,OAAAA,QAAUm2C,GAIZ,OAHAj2C,OAAAA,KAAOi2C,GAAK,SAACK,GACX1zD,EAAK2zD,aAAaF,EAAQzzD,EAAKuzD,cAAcG,OAExCD,EACF,GAAIJ,EAAIO,aAAc,CAC3B,IAAMC,EAAa,GAWnB,OAVAz2C,OAAAA,KAAOi2C,EAAIO,cAAc,SAAC9E,GACxB9uD,EAAK2zD,aAAaE,EAAO7zD,EAAKuzD,cAAczE,OAI1C2E,EAAOJ,EAAI7B,QAAQ7oD,OAASuU,OAAAA,QAAUu2C,EAAOJ,EAAI7B,QAAQ7oD,OAC3D8qD,EAAOJ,EAAI7B,QAAQ7oD,MAAMvM,KAAKy3D,GAE9BJ,EAAOJ,EAAI7B,QAAQ7oD,MAAQ,CAACkrD,GAEvBJ,EAOP,OALIJ,EAAI34D,iBAAiBtD,OACvBq8D,EAAOJ,EAAI7B,QAAQ7oD,MAAQ0qD,EAAI34D,MAAMiO,KAErC8qD,EAAOJ,EAAI7B,QAAQ7oD,MAAQ0qD,EAAI34D,MAE1B+4D,GAKH/B,EAAA55D,UAAA67D,aAAR,SAAqBG,EAAeC,GAClC,IAAK,IAAM76D,KAAO66D,EAChB,GAAIC,OAAAA,IAAMF,EAAU56D,GAAM,CAExB,IAAKgkB,OAAAA,QAAU42C,EAAS56D,IAAO,CAC7B,IAAM+6D,EAAOH,EAAS56D,GACtB46D,EAAS56D,GAAO,CAAC+6D,GAIf/2C,OAAAA,QAAU62C,EAAM76D,IAClB3B,MAAMO,UAAUsE,KAAK3D,MAAMq7D,EAAS56D,GAAM66D,EAAM76D,IAEhD46D,EAAS56D,GAAKkD,KAAK23D,EAAM76D,SAG3B46D,EAAS56D,GAAO66D,EAAM76D,GAG1B,OAAO46D,GAxLEpC,EAA8B34D,WAAA,CAD1C2F,KAAAA,iDACYgzD,GAAb,GCCAwC,wBAAA,WAEE,SAAAA,KAkCF,OA/BSA,EAAAp8D,UAAAq8D,SAAP,SAAgBC,EAAcnrD,EAAkBorD,GAC9C,IAAMC,EAAK,IAAI5C,+BACf4C,EAAG3C,mBAAmB,UAAW1oD,EAAwB,YACzD,IAAMsrD,EAAY,CAChBD,GAAIA,GAGN,GAAID,EACF,IAAK,IAAM53D,KAAK43D,EACVA,EAAsB53D,KACxB83D,EAAK93D,GAAK43D,EAAsB53D,IAKtC,IAAM4L,EAAS,IAAIgH,mBACbpQ,EAA0B,IAAIuL,eAIpC,OAHiC,IAAItC,kBACHC,YAAYisD,EAAMn1D,EAASoJ,EAAOiK,gBAAiBiiD,GAErE9rD,OAGXyrD,EAAAp8D,UAAA08D,qBAAP,SAA4BJ,EAAcnrD,EAAkBgU,GAC1D,IAAMw3C,EAAkB,CACtBC,UAAWz3C,GAGb,OAAOrlB,KAAKu8D,SAASC,EAAMnrD,EAAawrD,IAjC/BP,EAAuBn7D,WAAA,CADnC2F,KAAAA,iDACYw1D,GAAb,GCLMlsD,SAASC,QAEf0sD,gBAAA,WA2BE,SAAAA,IAFA/8D,KAAAqR,YAAmB,GACnBrR,KAAAg9D,wBAAmD,IAAIV,wBAy2BzD,OAr2BES,EAAA78D,UAAA+8D,oBAAA,SAAoBvI,EAAiBlpD,GACnC,GAAIA,EAAM,CACR,IAAM6F,EAAc7F,EAAK4F,qBAAqBC,YAC9CrR,KAAKqR,YAAcA,EAErB,OAAOrR,KAAKk9D,oBAAoBxI,IAGlCqI,EAAA78D,UAAAi9D,iBAAA,SAAiBC,GACf,IAAM7xD,EAAW,IAAI+sD,eAAe,CAAExjD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,KAClEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAASuJ,QAAUsoD,EAAeC,gBAAgBvC,QAAQxiD,KAAI,SAAU3F,GACtE,MAAO,CACLhP,MAAOgP,EAAIhP,MACXb,MAAO6P,EAAIinD,YAIMruD,EAASuJ,QACtBtL,OAAO,EAAG,EAAG,CACnB7F,MAAO,GACPb,MAAO,KAGTyI,EAAS2J,cAAgBkoD,EAAeC,gBAAgBjE,UACxD7tD,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAalB,OALAp9D,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAA09D,kBAAA,SAAkBR,GAChB,IAAM7xD,EAAW,IAAI4sD,kBAAkB,CAAE/V,YAAa,GAAIj1C,KAAM,GAAI7L,IAAK,KACzEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,SACzB3J,EAAS62C,YAAcgb,EAAeC,gBAAgBjb,YACtD72C,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAAS62C,YAAcgb,EAAeC,gBAAgBjb,aAAe,GAYrE,OALApiD,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAA29D,iBAAA,SAAiBT,GACf,IAAM7xD,EAAW,IAAI4sD,kBAAkB,CAAE/V,YAAa,GAAIj1C,KAAM,GAAI7L,IAAK,KACzEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,SACzB3J,EAAS62C,YAAcgb,EAAeC,gBAAgBjb,aAAe,GACrE72C,EAAS0J,OAASmoD,EAclB,OANAp9D,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CA,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzCp9D,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAA49D,eAAA,SAAeV,GACb,GAA4B,sBAAxBA,EAAejwD,KACjB,OAAOnN,KAAK+9D,4BAA4BX,GAE1C,IAAM7xD,EAAW,IAAIitD,aAAa,CAAErrD,KAAM,GAAI7L,IAAK,KACnDiK,EAAS2J,cAAgB,OACzB3J,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASykD,SAAWoN,EAAeC,gBAAgBrN,SACnDzkD,EAASktD,iBAAiB2E,EAAeC,gBAAgBW,UAczD,OALAh+D,KAAKu9D,eAPiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAIwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAA69D,4BAAA,SAA4BX,GAC1B,IAAM7xD,EAAW,IAAIitD,aAAa,CAAErrD,KAAM,GAAI7L,IAAK,KACnDiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAAS2J,cAAgB,OACzB3J,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASktD,iBAAiB2E,EAAeC,gBAAgBW,UAczD,OAPAzyD,EAASykD,UAAW,EAEpBhwD,KAAKu9D,eAPiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAIwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAA+9D,mBAAA,SAAmBb,GACjB,IAAM7xD,EAAW,IAAIutD,iBAAiB,CAAEhkD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,KACpEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS0J,OAASmoD,EAClB7xD,EAASuJ,QAAUsoD,EAAeC,gBAAgBvC,QAAQxiD,KAAI,SAAC3F,GAC7D,MAAO,CACLhP,MAAOgP,EAAIhP,MACXb,MAAO6P,EAAIinD,YAGfruD,EAASuJ,QAAQtL,OAAO,EAAG,GAE3B+B,EAAS2J,cAAgBkoD,EAAeC,gBAAgBjE,UAWxD,OALAp5D,KAAKu9D,eALiB,CACpB55D,MAAO,QACP2K,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAITwxD,EAAA78D,UAAAg+D,wBAAA,SAAwBd,GACtB,IAAM7xD,EAAW,IAAImtD,oBAAoB,CAAEyF,WAAY,GAAIrpD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,KACvFiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAASuJ,QAAUsoD,EAAeC,gBAAgBvC,QAAQxiD,KAAI,SAAU3F,GACtE,MAAO,CACLhP,MAAOgP,EAAIhP,MACXb,MAAO6P,EAAIinD,YAGfruD,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAASwT,WAAa,IAAIy6C,gBAC1BjuD,EAAS0J,OAASmoD,EAalB,OALAp9D,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAk+D,mBAAA,SAAmBhB,GACjB,IAAM7xD,EAAW,IAAI6sD,sBAAsB,CACzCj4C,YAAY,EAAOk4C,KAAM,GACzBjW,YAAa,GAAIj1C,KAAM,GAAI7L,IAAK,KAElCiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS62C,YAAcgb,EAAeC,gBAAgBjb,YACtD72C,EAAS4U,WAAai9C,EAAej9C,WACrC5U,EAAS8sD,KAAO+E,EAAeC,gBAAgBhF,KAC/C9sD,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAAS62C,YAAcgb,EAAeC,gBAAgBjb,aAAe,GAarE,OALApiD,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAm+D,eAAA,SAAejB,GACb,IAAM7xD,EAAW,IAAI4sD,kBAAkB,CAAE/V,YAAa,GAAIj1C,KAAM,GAAI7L,IAAK,KACzEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,OACzB3J,EAAS62C,YAAcgb,EAAeC,gBAAgBjb,YACtD72C,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAAS62C,YAAcgb,EAAeC,gBAAgBjb,aAAe,GAYrE,OALApiD,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAo+D,qBAAA,SAAqBlB,GACnB,IAAM7xD,EAAW,IAAIwtD,mBAAmB,CAAE5rD,KAAM,GAAI7L,IAAK,KACzDiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,OACzB3J,EAASwT,WAAa,OACtBxT,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAalB,OALAp9D,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAq+D,eAAA,SAAenB,GACb,IAAM7xD,EAAW,IAAI+sD,eAAe,CAAExjD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,KAClEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,gBACzB3J,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASwT,WAAa,OAYtB,OALA/e,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAs+D,kBAAA,SAAkBpB,GAChB,IAAM7xD,EAAW,IAAI+sD,eAAe,CAAExjD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,KAClEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,gBACzB3J,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASwT,WAAa,UAYtB,OALA/e,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAu+D,sBAAA,SAAsBrB,GACpB,IAAM7xD,EAAW,IAAI+sD,eAAe,CAAExjD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,KAClEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,gBACzB3J,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASwT,WAAaq+C,EAAeC,gBAAgBt+C,YAAc,iBACnExT,EAAS+U,kBAAoB,CAC3Bs5C,QAASwD,EAAeC,gBAAgBzD,SAa1C,OALA55D,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAw+D,oBAAA,SAAoBtB,GAClB,IAAM7xD,EAAW,IAAIstD,kBAAkB,CAAEr6C,UAAW,GAAIrR,KAAM,GAAI7L,IAAK,KAOvE,GANAiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASiT,UAAYxe,KAAK2+D,0BAA0BvB,EAAe5+C,WACnEjT,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAEU,cAAxBA,EAAejwD,KAAsB,CACvC,IAAMyxD,EAAY5+D,KAAK6+D,oBAAoBzB,GACrC0B,EAAS,GAAIA,EAAOt6D,KAAKo6D,GAC/BrzD,EAASiT,UAAYsgD,EAcvB,OALA9+D,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAA6+D,gBAAA,SAAgB3B,GACd,IAAM7xD,EAAW,IAAIqtD,cAAc,CAAEp6C,UAAW,GAAIrR,KAAM,GAAI7L,IAAK,KACnEiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASiT,UAAYxe,KAAK2+D,0BAA0BvB,EAAe5+C,WACnEjT,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAalB,OALAp9D,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAA8+D,eAAA,SAAe5B,GAAf,IAAAh1D,EAAApI,KACQuL,EAAW,IAAIqtD,cAAc,CAAEp6C,UAAW,GAAIrR,KAAM,GAAI7L,IAAK,KASnE,OARAiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAez5D,MAC9B4H,EAAS2J,cAAgB,OACzB3J,EAASwS,YAAcnJ,QAAAA,eAAeqsC,KACtC11C,EAASiT,UAAY,GACrB4+C,EAAetH,SAASnsD,SAAQ,SAAAoG,GAC9BxE,EAASiT,UAAUha,KAAK4D,EAAK62D,kBAAkBlvD,OAE1CxE,GAGTwxD,EAAA78D,UAAAg9D,oBAAA,SAAoBE,GAApB,IAAAh1D,EAAApI,KACQuL,EAAW,IAAIqtD,cAAc,CAAEp6C,UAAW,GAAIrR,KAAM,GAAI7L,IAAK,KAWnE,OAVAiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAez5D,MAC9B4H,EAAS2J,cAAgB,OACzB3J,EAASwS,YAAcnJ,QAAAA,eAAeN,aACtC/I,EAAS0J,OAASmoD,EAClB7xD,EAASiT,UAAY,GACrB4+C,EAAe3H,MAAM9rD,SAAQ,SAAAoG,GAC3BxE,EAASiT,UAAUha,KAAK4D,EAAK42D,eAAejvD,OAGvCxE,GAGTwxD,EAAA78D,UAAA++D,kBAAA,SAAkB7B,GAChB,IAAM7xD,EAAW,IAAIqtD,cAAc,CAAEp6C,UAAW,GAAIrR,KAAM,GAAI7L,IAAK,KAOnE,OANAiK,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAez5D,MAC9B4H,EAAS2J,cAAgB,UACzB3J,EAASwS,YAAcnJ,QAAAA,eAAeqsC,KACtC11C,EAAS4U,WAA2C,SAA9Bi9C,EAAej9C,WACrC5U,EAASiT,UAAYxe,KAAKk/D,mBAAmB9B,EAAe5+C,WACrDjT,GAGTwxD,EAAA78D,UAAAi/D,0BAAA,SAA0B/B,GACxB,IAAM7xD,EAAW,IAAIgtD,iBAAiB,CACpCzjD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,GAAI89D,eAAgB,aAChDC,gBAAiB,eAInB9zD,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,gBACzB3J,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASwT,WAAa,kBActB,OANA/e,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAo/D,4BAAA,SAA4BlC,GAC1B,IAAM7xD,EAAW,IAAIgtD,iBAAiB,CACpCzjD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,GAAI89D,eAAgB,aAChDC,gBAAiB,eAInB9zD,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgB,gBACzB3J,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASwT,WAAa,WAatB,OALA/e,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAAq/D,mBAAA,SAAmBnC,GACjB,IAAMoC,EAAWx/D,KAAK++D,gBAAgB3B,GAEtC,OADAoC,EAAStqD,cAAgB,YAClBsqD,GAGTzC,EAAA78D,UAAAu/D,4BAAA,SAA4BrC,GAC1B,IAAM7xD,EAAW,IAAIgtD,iBAAiB,CACpCzjD,QAAS,GAAI3H,KAAM,GAAI7L,IAAK,GAAI89D,eAAgB,aAChDC,gBAAiB,eAInB9zD,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAAS2J,cAAgBkoD,EAAejwD,KACxC5B,EAAS2J,cAAgB,gBACzB3J,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASwT,WAAa,WAatB,OALA/e,KAAKu9D,eANiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAGwB8uD,EAAgB7xD,GAC9CvL,KAAKw9D,yBAAyBJ,EAAgB7xD,GAC9CvL,KAAKy9D,iBAAiBL,EAAgB7xD,GACtCvL,KAAK09D,yBAAyBN,EAAgB7xD,GAC9CvL,KAAK29D,sBAAsBP,EAAgB7xD,GACpCA,GAGTwxD,EAAA78D,UAAA2+D,oBAAA,SAAoBzB,GAElB,IAAM7xD,EAAW,IAAIytD,kBAAkB,CACrC7rD,KAAM,GAAI7L,IAAK,GAAI23D,UAAW,GAAIC,iBAAkB,GACpDC,iBAAkB,GAAIx1D,MAAO,GAAIy1D,UAAW,KAG9C7tD,EAAS5H,MAAQy5D,EAAez5D,MAChC4H,EAASjK,IAAM87D,EAAe9uD,GAC9B/C,EAASuE,WAAa9P,KAAKs9D,cAAcF,GACzC7xD,EAAS0J,OAASmoD,EAClB7xD,EAASuJ,QAAUsoD,EAAeC,gBAAgBnE,iBAAiB5gD,KAAI,SAAU3F,GAC/E,MAAO,CACLhP,MAAOgP,EAAIhP,MACXb,MAAO6P,EAAIinD,YAUf,OADA55D,KAAKu9D,eALiB,CACpB55D,MAAO,QACPkM,SAAU,WACVvB,GAAI,OAEwB8uD,EAAgB7xD,GACvCA,GAGTwxD,EAAA78D,UAAAg/D,mBAAA,SAAmB97C,GACjB,IAAMs8C,EAAgB,IAAI//D,MAE1B,OADAK,KAAK2/D,aAAav8C,EAAQs8C,GACnBA,GAGT3C,EAAA78D,UAAAy/D,aAAA,SAAav8C,EAAaw8C,GAIxB,GAHKjgE,MAAMqS,QAAQ4tD,KACjBA,EAAa,IAEXjgE,MAAMqS,QAAQoR,GAEhB,IAAK,IAAM7G,KAAY6G,EACjBA,EAAOvjB,eAAe0c,IACxBvc,KAAK2/D,aAAav8C,EAAO7G,GAAWqjD,GAK1C,GAAIx8C,IAAWzjB,MAAMqS,QAAQoR,IAA6B,iBAAXA,EAC7C,GAAIA,EAAOi6C,gBACgC,UAArCj6C,EAAOi6C,gBAAgBjE,WACY,cAArCh2C,EAAOi6C,gBAAgBjE,UAEvBwG,EAAWp7D,KAAKxE,KAAK6/D,QAAQz8C,EAAQA,EAAOi6C,gBAAgBjE,YACd,cAArCh2C,EAAOi6C,gBAAgBjE,WAEhCwG,EAAWp7D,KAAKxE,KAAK6/D,QAAQz8C,EAAQA,EAAOi6C,gBAAgBjE,iBAG9D,IAAK,IAAMv0D,KAAKue,EACVA,EAAOvjB,eAAegF,IACxB7E,KAAK2/D,aAAav8C,EAAOve,GAAI+6D,IAQvC7C,EAAA78D,UAAAy+D,0BAAA,SAA0Bv7C,GACxB,IAAM3W,EAAW,GAEjB,OADAzM,KAAK2/D,aAAav8C,EAAQ3W,GACnBA,GAITswD,EAAA78D,UAAA2/D,QAAA,SAAQz8C,EAAa+6C,GAenB,OAdmB,uBAAfA,IACFA,EAAa/6C,EAAOjW,MAEjBiW,EAAO9U,KACV8U,EAAW,GAAIpjB,KAAK8/D,WAAW,MAG7B18C,EAAOi6C,kBAC4B,IAApCj6C,EAAOi6C,gBAAgBtN,UACc,SAApC3sC,EAAOi6C,gBAAgBtN,WACzB3sC,EAASpjB,KAAK+/D,gDAAgD38C,GAC9D+6C,EAAa,aAGPA,GACN,IAAK,SAEL,IAAK,gBAEL,IAAK,eACH,OAAOn+D,KAAKm9D,iBAAiB/5C,GAC/B,IAAK,UACH,OAAOpjB,KAAK49D,kBAAkBx6C,GAChC,IAAK,SACH,OAAOpjB,KAAK69D,iBAAiBz6C,GAC/B,IAAK,oBACH,OAAOpjB,KAAK+9D,4BAA4B36C,GAC1C,IAAK,OACH,OAAOpjB,KAAK89D,eAAe16C,GAC7B,IAAK,gBACH,OAAOpjB,KAAKk+D,wBAAwB96C,GACtC,IAAK,OACH,OAAOpjB,KAAKu+D,eAAen7C,GAC7B,IAAK,UACH,OAAOpjB,KAAKw+D,kBAAkBp7C,GAChC,IAAK,QACH,OAAOpjB,KAAK++D,gBAAgB37C,GAC9B,IAAK,YACH,OAAOpjB,KAAKu/D,mBAAmBn8C,GACjC,IAAK,YACH,OAAOpjB,KAAK0+D,oBAAoBt7C,GAClC,IAAK,kBACH,OAAOpjB,KAAKm/D,0BAA0B/7C,GACxC,IAAK,OACH,OAAOpjB,KAAKq+D,eAAej7C,GAC7B,IAAK,WAEL,IAAK,WACH,OAAOpjB,KAAKo+D,mBAAmBh7C,GACjC,IAAK,yBACH,OAAOpjB,KAAKy+D,sBAAsBr7C,GACpC,IAAK,oBACH,OAAOpjB,KAAKy/D,4BAA4Br8C,GAC1C,IAAK,oBACH,OAAOpjB,KAAK+9D,4BAA4B36C,GAC1C,IAAK,oBACH,OAAOpjB,KAAKs/D,4BAA4Bl8C,GAC1C,IAAK,QAEL,IAAK,WACH,OAAOpjB,KAAKi+D,mBAAmB76C,GACjC,IAAK,oBACH,OAAOpjB,KAAKs/D,4BAA4Bl8C,GAC1C,IAAK,OACH,OAAOpjB,KAAKs+D,qBAAqBl7C,GACnC,QAEE,OADAzR,QAAQC,KAAK,0CAA4CusD,GAClDn+D,KAAKq+D,eAAej7C,KAKjC25C,EAAA78D,UAAA6/D,gDAAA,SAAgD3C,GAC9C,IAAM4C,EAAiB,CACvB7yD,KAAiB,eACjB6yD,EAAUr8D,MAAQy5D,EAAez5D,MACjCq8D,EAAU1xD,GAAK,WAAa8uD,EAAe9uD,GAC3C0xD,EAAU3C,gBAAkB,GAC5B2C,EAAU3C,gBAAgBzD,QAAUwD,EAAeC,gBAAgBzD,QACnEoG,EAAU3C,gBAAgBjE,UAAY,YACtC4G,EAAUxhD,UAAY,GACtBwhD,EAAUlwD,WAAa,GAEvB,IAAMmwD,EAAiBC,KAAK/O,MAAM+O,KAAKC,UAAU/C,IACjD6C,EAAU9yD,KAAO,2BACV8yD,EAAU5C,gBAAgBtN,gBAC1BkQ,EAAU5C,gBAAgB+C,iBACjCH,EAAU5C,gBAAgBgD,SAAW,QAErC,IAAMC,EAAiB,CACvBnzD,KAAiB,qBACjBmzD,EAAU38D,MAAQ,WAAas8D,EAAUt8D,MACzC28D,EAAUhyD,GAAK,QAAU2xD,EAAU3xD,GACnCgyD,EAAUjD,gBAAkB,GAC5BiD,EAAUjD,gBAAgBzD,QAAUwD,EAAeC,gBAAgBzD,QACnE0G,EAAUjD,gBAAgBjE,UAAY,OACtCkH,EAAUjD,gBAAgBgD,SAAW,cACrC,IAAME,EAAoB/gE,OAAea,OAAO,GAC9C+8D,EAAeC,gBAAgB+C,kBAQjC,OAPAE,EAAUxwD,WAAaywD,EAAYzwD,WACnCwwD,EAAUtwD,KAAOuwD,EAAYvwD,KAG7BgwD,EAAUxhD,UAAUha,KAAKy7D,GACzBD,EAAUxhD,UAAUha,KAAK87D,GAElBN,GAGTjD,EAAA78D,UAAAq9D,eAAA,SAAeiD,EAAeC,EAAaC,GAEzC,IAAK,IAAMnkD,KAAYkkD,EACjBD,EAAS3gE,eAAe0c,IAAamkD,EAAY7gE,eAAe2gE,EAASjkD,MAC3EmkD,EAAYF,EAASjkD,IAAakkD,EAAOlkD,KAK/CwgD,EAAA78D,UAAAo9D,cAAA,SAAcF,GAEZ,IAAMttD,EAAqC,GAEvCstD,EAAettD,YAGjB6I,OAAAA,QAAUykD,EAAettD,YAAY,SAACgD,GACpC,OAAQA,EAAU3F,MAChB,IAAK,OACH2C,EAAWtL,KAAK,IAAI60D,oBAAoBvmD,IACxC,MACF,IAAK,gBACHhD,EAAWtL,KAAK,IAAI4I,4BAA4B0F,IAChD,MACF,IAAK,sBACHhD,EAAWtL,KAAK,IAAI+I,2BAA2BuF,IAC/C,MACF,QACEhD,EAAWtL,KAAK,IAAI8I,gBAAgBwF,QAM5C,IAAMuqD,EAAkBD,EAAeC,gBAEvC,OADsBA,EAAkBA,EAAgBjE,UAAY,IAElE,IAAK,SAECiE,EAAgBxmD,KAAOwmD,EAAgB5mD,MACzC3G,EAAWtL,KAAK,IAAI80D,mBAAmB,CACrCnsD,KAAM,MACN0J,IAAKwmD,EAAgBxmD,OAEvB/G,EAAWtL,KAAK,IAAI+0D,mBAAmB,CACrCpsD,KAAM,MACNsJ,IAAK4mD,EAAgB5mD,QAU7B,GAAuC,iBAA5B2mD,EAAevtD,SAAuB,CAE/C,IAAMA,EAAgButD,EAAevtD,SAEf,wBAAlBA,EAAS1C,MAEX2C,EAAWtL,KAAK,IAAI+I,2BAA2B,CAC7CC,oBAAqBqC,EAASrC,oBAC9BC,yBAA0BoC,EAASpC,yBACnCN,KAAM0C,EAAS1C,KACfzC,QAASmF,EAASnF,WAKxB,OAAOoF,GAGTitD,EAAA78D,UAAAw9D,yBAAA,SAAyBN,EAAqB7xD,GAC5C,GAAI6xD,EAAeuD,sBAAwBvD,EAAeuD,qBAAqBhgE,OAAS,EAAG,CACzF4K,EAAS6J,oBAAmB,QACuBI,IAA/C4nD,EAAe9nD,4BACjB/J,EAAS+J,4BACyC,SAA/C8nD,EAAe9nD,6BAElB/J,EAAS+J,8BAEX,IAAMsrD,EAAY5gE,KAAKg9D,wBAAwBT,SAASa,EAAeuD,qBACrE3gE,KAAKqR,iBAAamE,GAMpB,GALAjK,EAAS4J,oBAAsByrD,EAK3BxD,EAAeyD,gCAAkCD,EAOnD,YANmB5gE,KAAKg9D,wBAAwBJ,qBAAqBQ,EAAeyD,+BAClF7gE,KAAKqR,YAAauvD,KAGlBr1D,EAASwJ,aAAe6rD,EAAU99D,QAKtC,GAAIs6D,EAAe0D,uBAAyBF,EAAW,CAIrD,IAAMG,EAAU3wD,SAAOwwD,EAAUt6C,WAC3B06C,EAAmB5wD,WAASm8C,KAAKwU,EAAS,QAC5CE,OAAOC,UAAU9D,EAAe+D,iCAC9BH,GAAoB5D,EAAe+D,kCACrC51D,EAASwJ,aAAe6rD,EAAU99D,OAGpCyI,EAASwJ,aAAe6rD,EAAU99D,SAM1Ci6D,EAAA78D,UAAAy9D,sBAAA,SAAsBP,EAAqB7xD,GAErC6xD,EAAeC,iBACmC,iBAA7CD,EAAeC,gBAAgB+D,YACtC71D,EAAS2E,oBAAsBktD,EAAeC,gBAAgB+D,UAAUlxD,sBAK5E6sD,EAAA78D,UAAAu9D,iBAAA,SAAiBL,EAAqB7xD,GAChC6xD,EAAe/yD,QACjBkB,EAASlB,MAAQ+yD,EAAe/yD,QASpC0yD,EAAA78D,UAAAs9D,yBAAA,SAAyBJ,EAAqB7xD,GAEtC6xD,EAAel0D,UACnBqC,EAASrC,QAAUk0D,EAAel0D,SAGE,iBAA3Bk0D,EAAel0D,UACxBqC,EAASrC,QAAUk0D,EAAel0D,QAAQ8T,uBAGtCogD,EAAeptD,OACnBzE,EAASyE,KAAOotD,EAAeptD,MAEE,iBAAxBotD,EAAeptD,MAEpBotD,EAAeptD,KAAKmN,qBACtB5R,EAASyE,KAAOotD,EAAeptD,KAAKmN,qBAIlC4/C,EAAA78D,UAAA4/D,WAAR,SAAmBvnD,GAEjB,IADA,IAAIhY,EAAI,IACDA,EAAEI,OAAS4X,GAAKA,EAAI,GAAG,CAC5B,IAAM9W,EAAI4/D,KAAKC,SACf/gE,GAAMkB,EAAI,GAAM4/D,KAAKE,MAAU,IAAJ9/D,GACzB+/D,OAAOC,aAAaJ,KAAKE,MAAU,GAAJ9/D,IAAWA,EAAI,GAAM,GAAK,KAE7D,MAAO,IAAMlB,GAEjBw8D,EAn4BA,0BCkBI,SAAA2E,EAAmBC,EACRC,EAAyCC,GADjC7hE,KAAA2hE,eAAAA,EACR3hE,KAAA4hE,gBAAAA,EAAyC5hE,KAAA6hE,wBAAAA,EAP7C7hE,KAAA8hE,GAAU,CACb5H,SAAU,WACN,OAAO,KAsInB,OA9HIwH,EAAAxhE,UAAA6hE,WAAA,SAAW3+C,EAAarE,GACpB,IAAMvT,EAAa,IAAI2X,KAAKC,EAAQpjB,KAAMA,KAAK4hE,iBAC/C,GAAI7iD,EACA,IAAK,IAAMzd,KAAOyd,EACVA,EAAWlf,eAAeyB,IAC1BkK,EAAK4F,qBAAqB+N,mBAAmB7d,EAAKyd,EAAWzd,IAAM,GAI/E,IAAMiK,EAAWvL,KAAK4hE,gBAAgB3E,oBAAoB75C,EAAQ5X,GAMlE,OALAA,EAAKoC,SAAW5N,KAAKgiE,WAAWz2D,EAAU,KAAM,KAAMC,GAEtDxL,KAAK2N,eAAenC,EAAKoC,UACzBpC,EAAK8Y,0CACL9Y,EAAKgZ,6BACEhZ,GAGXk2D,EAAAxhE,UAAAyN,eAAA,SAAeC,GAEX2M,YAAYC,+BAAgC,EAC5Cxa,KAAK6hE,wBAAwBl0D,eAAeC,GAG5C2M,YAAYC,+BAAgC,GAGhDknD,EAAAxhE,UAAA8hE,WAAA,SAAWz2D,EACP02D,EAAwB91D,EAA8BX,GAWtD,OATID,aAAoBotD,eAChBptD,aAAoBstD,kBACb74D,KAAKkiE,gBAAgB32D,EAAU02D,EAAY91D,EAAeX,GAE1DxL,KAAKmiE,gBAAgB52D,EAAU02D,EAAY91D,EAAeX,GAG9DxL,KAAKoiE,eAAe72D,EAAU02D,EAAY91D,EAAeX,IAKxEk2D,EAAAxhE,UAAAkiE,eAAA,SAAe72D,EACX02D,EAAuB91D,EAA8BX,GACrD,IAAM62D,EAAeriE,KAAK2hE,eAAe/jD,qBAAqBrS,EAAUY,GAAe,EAAOX,GAC9F,OAAO,IAAIS,SAASV,EAAU82D,EAAc,KAAM72D,EAC9Cy2D,EAAaA,EAAWvzD,UAAO8G,IAGvCksD,EAAAxhE,UAAAiiE,gBAAA,SAAgB52D,EAA0B02D,EACtC91D,EAA8BX,GAC9B,IAAM62D,EAAeriE,KAAK2hE,eAAe/jD,qBAAqBrS,EAAUY,GAAe,EAAOX,GACxF6Y,EAAY,IAAIhY,UAAUd,EAAU82D,EAAc,KACpD72D,EAAMy2D,EAAaA,EAAWvzD,UAAO8G,GAEzC,OADAxV,KAAKsiE,mBAAmB/2D,EAAU8Y,EAAYg+C,GAAgBl2D,EAAgBX,GACvE6Y,GAGXq9C,EAAAxhE,UAAAgiE,gBAAA,SAAgB32D,EAA0B02D,EACtC91D,EAA8BX,GADlC,IAAApD,EAAApI,KAEUqiE,EAAeriE,KAAK2hE,eAAe/jD,qBAAqBrS,EAAUY,GAAe,EAAOX,GACxFyG,EAAY,IAAIvF,UAAUnB,EAAU82D,EAAcl2D,EACpDnM,KAAMwL,EAAMy2D,EAAaA,EAAWvzD,UAAO8G,GAU/C,OATAvD,EAAUpF,gBAAkB7M,KAAKuiE,qBACjCtwD,EAAUlF,gBAAkB/M,KAAKwiE,qBAEjCvwD,EAAUjF,6BAA4B,SAACR,GAEnC+N,YAAYC,+BAAgC,EAC5CpS,EAAKy5D,wBAAwB5zD,wBAAwBzB,GACrD+N,YAAYC,+BAAgC,KAEzCvI,GAGXyvD,EAAAxhE,UAAAoiE,mBAAA,SAAmB/2D,EAA0BiB,EACzCL,EAA8BX,GADlC,IAAApD,EAAApI,KAMI,OAJAuL,EAASiT,UAAU7U,SAAQ,SAAAoG,GACvB,IAAM3B,EAAQhG,EAAK45D,WAAWjyD,EAASvD,EAAML,EAAeX,GAC5DgB,EAAKD,SAASwD,EAAQzO,IAAK8M,MAExB5B,EAAKC,UAIhBi1D,EAAAxhE,UAAAqiE,qBAAA,SAAqBh3D,EACjBiB,EAAiBi2D,GAEbA,MAAAA,IACAA,EAAUziE,MAEd,IAAM0iE,EACF,IAAI9J,cAAc,CACdt3D,IAAKkL,EAAKkC,KAAO,IAAMlC,EAAKC,SAAS9L,OACrCwM,KAAM,QAAS8H,OAAQ1J,EAAS0J,OAAQtR,MAAO,GAAI6a,UAAWjT,EAASiT,YAG3EjT,EAASwS,cAAgBnJ,QAAAA,eAAeqsC,OACxCyhB,EAAc3kD,YAAcxS,EAASwS,aAGzC,IAAM4kD,EAAQF,EAAQN,gBAAgBO,EAAe,KAAM,KAAMl2D,EAAKhB,MAGtE,GAFAgB,EAAKC,SAASjI,KAAKm+D,GAEfn2D,EAAKnF,mBAAmBoN,aAAc,CACtC,IAAMmuD,EAAcp2D,EAAKnF,QACzBu7D,EAAYtkD,WAAWskD,EAAYruD,SAAS5T,OAAQgiE,EAAMt7D,SAG9D,OAAOs7D,GAGXjB,EAAAxhE,UAAAsiE,qBAAA,SAAqB12D,EAAeU,GAChC,IAAMq2D,EAAer2D,EAAKC,SAASX,GAGnC,GADAU,EAAKC,SAASjD,OAAOsC,EAAO,IACP,OAAjBU,EAAKnF,cAAqCmO,IAAjBhJ,EAAKnF,UAC1BmF,EAAKnF,mBAAmBoN,aAAc,CACtC,IAAMpN,EAAUmF,EAAKnF,QACfy7D,EAAuBz7D,EAAQkN,SAASvT,QAAQ6hE,EAAax7D,SAC/Dy7D,GAAwB,GACxBz7D,EAAQwE,SAASi3D,8CA7HEtlD,0BACPu/C,uBAAiDrvD,2BARpEg0D,EAAWvgE,WAAA,CADvB2F,KAAAA,6CAQsC0W,mBACPu/C,gBAAiDrvD,2BARpEg0D,MCbPtxD,SAASC,QAEf0yD,iBAAA,WAGI,SAAAA,KA2jBJ,OAvjBIA,EAAA7iE,UAAA8iE,wBAAA,SAAwBx2D,EAAgBy2D,GAAxC,IAAA76D,EAAApI,KACUyjB,EAAQ,GAEd,IAAKzjB,KAAKkjE,UAAU12D,GAChB,OAAOiX,EAGX,GAAIjX,aAAgBP,UACfO,aAAgBH,WACiB,gBAA9BG,EAAKjB,SAAS0J,OAAO9H,KAQzB,OAPAqY,OAAAA,KAAOy9C,GAAU,SAAChpD,GACVA,EAAK2/C,SACL3/C,EAAK2/C,QAAQ7oD,OAASvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,SAC3Dn2C,EAAMjf,KAAKyV,MAIZwJ,EAKX,IAAM0/C,EAAsBnjE,KAAKojE,8BAA8B52D,GAa/D,OAZI22D,EAAoBxiE,OAAS,GAC7B6kB,OAAAA,KAAOy9C,GAAU,SAACxH,GACVA,EAAI7B,SACJ6B,EAAI7B,QAAQ7oD,OAASvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,SAC1Dj6D,MAAMqS,QAAQypD,EAAIO,eAClB5zD,EAAKi7D,WAAWF,EACZ/6D,EAAKk7D,4BAA4B7H,KACrCh4C,EAAMjf,KAAKi3D,MAKhBh4C,GAGXs/C,EAAA7iE,UAAAkjE,8BAAA,SAA8B52D,GAC1B,IAAMiX,EAAQ,GAWd,OATIjX,EAAKjB,SAAS0J,QAAUzI,EAAKjB,SAAS0J,OAAOuJ,WAC7CgH,OAAAA,KAAOhZ,EAAKjB,SAAS0J,OAAOuJ,WAAW,SAACjT,GAChCA,EAAS8xD,iBACT9xD,EAAS8xD,gBAAgBzD,SACzBn2C,EAAMjf,KAAK+G,EAAS8xD,gBAAgBzD,YAKzCn2C,GAGXs/C,EAAA7iE,UAAAojE,4BAAA,SAA4BC,GACxB,IAAM9/C,EAAQ,GASd,OAPI9jB,MAAMqS,QAAQuxD,EAAoBvH,eAClCx2C,OAAAA,KAAO+9C,EAAoBvH,cACvB,SAAC9E,GACGzzC,EAAMjf,KAAK0yD,EAAO0C,QAAQ7oD,SAI/B0S,GAGXs/C,EAAA7iE,UAAAgjE,UAAA,SAAU12D,GACN,OAAOA,EAAKjB,SAAS0J,SACc,QAA9BzI,EAAKjB,SAAS0J,OAAO9H,MACY,aAA9BX,EAAKjB,SAAS0J,OAAO9H,MACS,gBAA9BX,EAAKjB,SAAS0J,OAAO9H,MACS,sBAA9BX,EAAKjB,SAAS0J,OAAO9H,OAGjC41D,EAAA7iE,UAAAmjE,WAAA,SAAWG,EAA2BC,GAClC,OAA2B,IAAvBA,EAAY9iE,QAAyC,IAAzB6iE,EAAc7iE,QAGvC8iE,EAAYhjD,OAAM,SAAC1Q,GACtB,OAAOyzD,EAAcxiE,QAAQ+O,IAAY,MAIjDgzD,EAAA7iE,UAAAwjE,sBAAA,SAAsBl3D,EAAgBivD,GAClC,GAAIjvD,GAAQivD,EAAI96D,OAAS,EAAG,CACxB,IAAMgjE,EAAWlI,EAAI,GAGrBjvD,EAAKo3D,aAAeD,GAEf3jE,KAAK4Z,QAAQ+pD,EAAS7gE,QAAU6gE,EAAS7gE,MAAMiO,KAEhD/Q,KAAK6jE,wBAAwBr3D,EAAMm3D,EAAS7gE,MAAMiO,MAC1C/Q,KAAK4Z,QAAQ+pD,EAAS7gE,QAC9B9C,KAAK6jE,wBAAwBr3D,EAAMm3D,EAAS7gE,SAKxDigE,EAAA7iE,UAAA4jE,2BAAA,SAA2Bt3D,EAAgBivD,WACvC,GAAIjvD,GAAQivD,EAAI96D,OAAS,EAAG,CACxB6L,EAAKo3D,aAAenI,EAEpB,IAAMsI,EAAW,OACjB,IAAgB,IAAAC,EAAAjmB,SAAA0d,GAAGwI,EAAAD,EAAAhhE,QAAAihE,EAAA9gE,KAAA8gE,EAAAD,EAAAhhE,OAAE,CAAhB,IAAM0B,EAACu/D,EAAAnhE,MACRihE,EAASv/D,KAAKE,EAAE5B,MAAMiO,wGAG1B/Q,KAAK6jE,wBAAwBr3D,EAAMu3D,KAI3ChB,EAAA7iE,UAAAgkE,uBAAA,SAAuB13D,EAAgBivD,GACnC,GAAIjvD,GAAQivD,EAAI96D,OAAS,EAAG,CACxB,IAAIwjE,OAAU,EACV7D,OAAS,EAEPv8C,EAAevX,EAErB,IAAK,IAAM3H,KAAKkf,EAAYtX,SAC+D,UAAlFsX,EAAYtX,SAAS5H,GAAgB0G,SAAS0J,OAAOooD,gBAAgBgD,WACtE8D,EAAapgD,EAAYtX,SAAS5H,IAGiD,gBAAlFkf,EAAYtX,SAAS5H,GAAgB0G,SAAS0J,OAAOooD,gBAAgBgD,WACtEC,EAAYv8C,EAAYtX,SAAS5H,IAKzC7E,KAAKokE,aAAaD,EAAY1I,GAC9BjvD,EAAKo3D,aAAeO,EAAWP,aAG/BtD,EAAUsD,aAAeO,EAAWP,aACpC5jE,KAAK6jE,wBAAwBvD,EAAW6D,EAAWP,aAAaS,eAIxEtB,EAAA7iE,UAAAokE,qBAAA,SAAqB93D,EAAgBivD,GACjC,GAAIjvD,GAAQivD,EAAI96D,OAAS,EAAG,CACxB,IAAM0jB,EAAY7X,EAGlB,IAAK,IAAM3H,KAFXwf,EAAUu/C,aAAenI,EAAI,GAEbp3C,EAAU5X,SACtBzM,KAAKokE,aAAa//C,EAAU5X,SAAS5H,GAAI42D,EAAI,GAAGO,gBAK5D+G,EAAA7iE,UAAAqkE,8BAAA,SAA8B/3D,EAAgBivD,GAC1C,GAAIjvD,GAAQivD,EAAI96D,OAAS,EAAG,CACxB,IAAMsR,EAAYzF,EAClByF,EAAU2xD,aAAenI,EAEzB,IAAK,IAAIj7D,EAAI,EAAGA,EAAIi7D,EAAI96D,OAAQH,IAAK,CACjC,IAAMgkE,EAAcvyD,EAAUlG,kBAC9B/L,KAAKskE,qBAAqBE,EAAa,CAAC/I,EAAIj7D,QAKxDuiE,EAAA7iE,UAAAkkE,aAAA,SAAa53D,EAAgBivD,GACzB,OAAQz7D,KAAKykE,eAAej4D,IACxB,IAAK,UACD,GAAIA,aAAgBH,UAAW,CAC3B,IAAMgY,EAAY7X,EAElB,IAAK,IAAM3H,KAAKwf,EAAU5X,SACtBzM,KAAKokE,aAAa//C,EAAU5X,SAAS5H,GAAI42D,GAE7C,MAEJ,GAAIjvD,aAAgBE,UAAW,CAE3B,IADA,IAAMuF,EAAYzF,EACThM,EAAI,EAAGA,EAAIyR,EAAUxF,SAAS9L,OAAQH,IAC3CR,KAAKokE,aAAanyD,EAAUxF,SAASjM,GAAIi7D,GAE7C,MAEJ,MACJ,IAAK,SAED,IAAMiJ,EAAe1kE,KAAKgjE,wBAAwBx2D,EAAMivD,GAGxDz7D,KAAK0jE,sBAAsBl3D,EAAMk4D,GACjC,MAEJ,IAAK,cAED,IAAMC,EAAiB3kE,KAAKgjE,wBAAwBx2D,EAAMivD,GAG1Dz7D,KAAK8jE,2BAA2Bt3D,EAAMm4D,GACtC,MAGJ,IAAK,UAED,IAAMC,EAAa5kE,KAAKgjE,wBAAwBx2D,EAAMivD,GAGtDz7D,KAAKkkE,uBAAuB13D,EAAMo4D,GAClC,MAEJ,IAAK,QACD,IAAMC,EAAW7kE,KAAKgjE,wBAAwBx2D,EAAMivD,GAEhDoJ,EAASlkE,OAAS,GAClBX,KAAKskE,qBAAqB93D,EAAMq4D,GAGpC,MACJ,IAAK,iBACD,IAAMC,EAAoB9kE,KAAKgjE,wBAAwBx2D,EAAMivD,GAEzDqJ,EAAkBnkE,OAAS,GAC3BX,KAAKukE,8BAA8B/3D,EAAMs4D,GAG7C,MACJ,QACInzD,QAAQ3M,MAAM,mBAAoBwH,KAK9Cu2D,EAAA7iE,UAAA2jE,wBAAA,SAAwBr3D,EAAgB1J,GACpC0J,EAAKnF,QAAQiM,SAASxQ,GAKlB0J,EAAKjB,SAAS8J,4BAA+CG,IAAtBhJ,EAAKo3D,cAC5Cp3D,EAAKjB,SAAS6J,oBAAmB,IAIzC2tD,EAAA7iE,UAAAukE,eAAA,SAAej4D,GACX,OAAIxM,KAAKkjE,UAAU12D,GACXA,aAAgBP,WACqC,kBAAnDO,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,WACY,aAAnD5sD,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,WACc,iBAAnD5sD,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,WAC9B,cAGP5sD,aAAgBP,SACT,SAGPO,aAAgBH,WACc,gBAA9BG,EAAKjB,SAAS0J,OAAO9H,KACd,UAGPX,aAAgBE,WACc,aAA9BF,EAAKjB,SAAS0J,OAAO9H,MAC8B,cAAnDX,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,UAC9B,iBAGP5sD,aAAgBH,WACc,aAA9BG,EAAKjB,SAAS0J,OAAO9H,KACd,QAGJ,aAEJ,WAIX41D,EAAA7iE,UAAA6kE,oBAAA,SAAoBv4D,GAEhB,GAAIxM,KAAK4Z,QAAQpN,EAAKnF,QAAQvE,OAC1B,OAAI0J,EAAKo3D,aAEE,CACH7yD,KAAMvE,EAAKo3D,aAAa7yD,KACxBi0D,QAAQ,GAGT,KAIX,GAAIx4D,EAAKo3D,eAAiB5jE,KAAKilE,uBAAuBz4D,GAClD,OAAO,KAKX,IAAMivD,EAAW,CACb7B,QAASptD,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,QAC9C92D,MAAO0J,EAAKnF,QAAQvE,OAcxB,MAVuD,SAAnD0J,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,YACrCqC,EAAI34D,MAAQ9C,KAAKklE,wBAAwB14D,EAAKnF,QAAQvE,QAGtD0J,EAAKo3D,sBAEEnI,EAAI7B,QACX6B,EAAI1qD,KAAOvE,EAAKo3D,aAAa7yD,MAG1B0qD,GAGXsH,EAAA7iE,UAAAilE,qBAAA,SAAqB34D,GACjB,IAAI23D,EACA7D,EAEEv8C,EAAevX,EAErB,IAAK,IAAM3H,KAAKkf,EAAYtX,SAC+D,UAAlFsX,EAAYtX,SAAS5H,GAAgB0G,SAAS0J,OAAOooD,gBAAgBgD,WACtE8D,EAAapgD,EAAYtX,SAAS5H,IAGiD,gBAAlFkf,EAAYtX,SAAS5H,GAAgB0G,SAAS0J,OAAOooD,gBAAgBgD,WACtEC,EAAYv8C,EAAYtX,SAAS5H,IAIzC,IAAMugE,EAAeplE,KAAKqlE,kBAAkBlB,GAI5C,GAHAxyD,QAAQ0N,IAAI,eAAgB+lD,GAGxBA,EAAazkE,OAAS,EAEtB,OADAykE,EAAa,GAAGf,YAAcrkE,KAAKklE,wBAAwB5E,EAAUj5D,QAAQvE,OACtEsiE,EAAa,GACjB,GAA4B,IAAxBA,EAAazkE,QAAgB6L,EAAKo3D,eAEpC5jE,KAAKslE,cAAc94D,EAAKo3D,aAAaS,YAAa/D,EAAUj5D,QAAQvE,OAAQ,CAC7E,IAAMyiE,EAAe,CACjBx0D,KAAMvE,EAAKo3D,aAAa7yD,MAG5B,OADAw0D,EAAQlB,YAAcrkE,KAAKklE,wBAAwB5E,EAAUj5D,QAAQvE,OAC9DyiE,EAGf,OAAO,MAGXxC,EAAA7iE,UAAAslE,yBAAA,SAAyBh5D,GACrB,IAAM+4D,EAAsB,GAEtBE,EAAgB,GAmCtB,OAhCI9lE,MAAMqS,QAAQxF,EAAKo3D,eACnBp+C,OAAAA,KAAOhZ,EAAKo3D,cAAc,SAAC3pD,GACvBwrD,EAAcjhE,KAAKyV,EAAKnX,MAAMiO,MAC1BpR,MAAMqS,QAAQxF,EAAKnF,QAAQvE,OACvB0J,EAAKnF,QAAQvE,MAAM9B,QAAQiZ,EAAKnX,MAAMiO,MAAQ,GAC9Cw0D,EAAQ/gE,KAAK,CACTuM,KAAMkJ,EAAKlJ,KACXi0D,QAAQ,IAKhBO,EAAQ/gE,KAAK,CACTuM,KAAMkJ,EAAKlJ,KACXi0D,QAAQ,OAOpBrlE,MAAMqS,QAAQxF,EAAKnF,QAAQvE,QAC3B0iB,OAAAA,KAAOhZ,EAAKnF,QAAQvE,OAAO,SAACmX,GACpBwrD,EAAczkE,QAAQiZ,GAAQ,GAC9BsrD,EAAQ/gE,KAAK,CACTo1D,QAASptD,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,QAC9C92D,MAAOmX,OAMhBsrD,GAGXxC,EAAA7iE,UAAAwlE,gBAAA,SAAgBl5D,GAAhB,IAAApE,EAAApI,KACU+jB,EAAyBvX,EAE3Bm5D,EAAkB,GAQtB,GAPAngD,OAAAA,KAAOzB,EAAYtX,UAAU,SAAC2B,GAC1B,IAAMm3D,EAAUn9D,EAAKi9D,kBAAkBj3D,GACnCm3D,EAAQ5kE,OAAS,IACjBglE,EAAkBA,EAAgBzgE,OAAOqgE,OAIlB,IAA3BI,EAAgBhlE,OAChB,OAAO,KAGX,IAAMilE,EAAoB,CACtB5J,aAAc2J,GAUlB,OAPI5hD,EAAY6/C,aACZgC,EAAa70D,KAAOgT,EAAY6/C,aAAa7yD,KAG7C60D,EAAahM,QAAU71C,EAAYxY,SAAS0J,OAAOooD,gBAAgBzD,QAGhEgM,GAGX7C,EAAA7iE,UAAA2lE,yBAAA,SAAyBr5D,GAAzB,IAAApE,EAAApI,KACU8lE,EAAyBt5D,EAE3Bm5D,EAAkB,GAEhBI,EAA2B,GAyBjC,OAxBAvgD,OAAAA,KAAOsgD,EAAYr5D,UAAU,SAAC2B,GAC1B,IAAMm3D,EAAUn9D,EAAKi9D,kBAAkBj3D,GACnCm3D,EAAQ5kE,OAAS,IACjBglE,EAAkBA,EAAgBzgE,OAAOqgE,IAEzCn3D,EAAMw1D,cAAgBx1D,EAAMw1D,aAAa7yD,MACzCg1D,EAAyBvhE,KAAK4J,EAAMw1D,aAAa7yD,SAMrD+0D,EAAYlC,cAAgBjkE,MAAMqS,QAAQ8zD,EAAYlC,eACtDp+C,OAAAA,KAAOsgD,EAAYlC,cAAc,SAACnI,GAC9B,GAAIsK,EAAyB/kE,QAAQy6D,EAAI1qD,MAAQ,EAAG,CAChD,IAAMi1D,EAAc,CAChBj1D,KAAM0qD,EAAI1qD,KACVi0D,QAAQ,GAEZW,EAAgBnhE,KAAKwhE,OAK7BL,EAAgBhlE,QAAU,EACnB,KAEJglE,GAIX5C,EAAA7iE,UAAAmlE,kBAAA,SAAkB74D,GACd,IAAI+4D,EAAU,GAEd,OAAQvlE,KAAKykE,eAAej4D,IACxB,IAAK,UACD,GAAIA,aAAgBH,UAAW,CAC3B,IAAMgY,EAAY7X,EAElB,IAAK,IAAM3H,KAAKwf,EAAU5X,SAAU,CAChC,IAAMw5D,EAAkBjmE,KAAKqlE,kBAAkBhhD,EAAU5X,SAAS5H,IAC9DlF,MAAMqS,QAAQi0D,IAAoBA,EAAgBtlE,OAAS,IAC3D4kE,EAAUA,EAAQrgE,OAAO+gE,IAGjC,MAEJ,GAAIz5D,aAAgBE,UAAW,CAE3B,IADA,IAAMuF,EAAYzF,EACThM,EAAI,EAAGA,EAAIyR,EAAUxF,SAAS9L,OAAQH,IAAK,CAChD,IAAM0lE,EAAmBlmE,KAAKqlE,kBAAkBpzD,EAAUxF,SAASjM,IAC/Db,MAAMqS,QAAQk0D,IAAqBA,EAAiBvlE,OAAS,IAC7D4kE,EAAUA,EAAQrgE,OAAOghE,IAGjC,MAEJ,MACJ,IAAK,SACD,IAAMC,EAAYnmE,KAAK+kE,oBAAoBv4D,GACzB,OAAd25D,GACAZ,EAAQ/gE,KAAK2hE,GAEjB,MAEJ,IAAK,cACD,IAAMxB,EAAiB3kE,KAAKwlE,yBAAyBh5D,GAEjD7M,MAAMqS,QAAQ2yD,IAAmBA,EAAehkE,OAAS,IACzD4kE,EAAUA,EAAQrgE,OAAOy/D,IAE7B,MAEJ,IAAK,UACD,IAAMC,EAAa5kE,KAAKmlE,qBAAqB34D,GAC1B,OAAfo4D,GACAW,EAAQ/gE,KAAKogE,GAEjB,MAEJ,IAAK,QACD,IAAMwB,EAAapmE,KAAK0lE,gBAAgBl5D,GACpC45D,GAA6B,OAAfA,GACdb,EAAQ/gE,KAAK4hE,GAEjB,MACJ,IAAK,iBACD,IAAMC,EAAsBrmE,KAAK6lE,yBAAyBr5D,GACtD7M,MAAMqS,QAAQq0D,IAAwBA,EAAoB1lE,OAAS,IACnE4kE,EAAUA,EAAQrgE,OAAOmhE,IAOrC,OAAOd,GAGXxC,EAAA7iE,UAAA+kE,uBAAA,SAAuBz4D,GACnB,QAAIA,EAAKo3D,eACDp3D,EAAKo3D,aAAa9gE,OAAS0J,EAAKo3D,aAAa9gE,MAAMiO,KAE5CvE,EAAKnF,QAAQvE,QAAU0J,EAAKo3D,aAAa9gE,MAAMiO,KAGH,SAAnDvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,WAC7Bp5D,KAAKslE,cAAc94D,EAAKnF,QAAQvE,MAAO0J,EAAKo3D,aAAa9gE,OAE9D0J,EAAKnF,QAAQvE,QAAU0J,EAAKo3D,aAAa9gE,QAKxDigE,EAAA7iE,UAAAolE,cAAA,SAAcgB,EAAOC,GACjB,OAAOn2D,SAAOk2D,GAAOE,OAAOD,IAGhCxD,EAAA7iE,UAAA0Z,QAAA,SAAQ9W,GACJ,MAAc,KAAVA,GAAAA,MACAA,GAURigE,EAAA7iE,UAAAglE,wBAAA,SAAwBuB,GACpB,IAAIzmE,KAAK4Z,QAAQ6sD,GAAjB,CAII,IACM18D,EADeqG,SAAOq2D,GAAUtsD,SACbxL,UAAU,EAAG,IAAIoK,QAAQ,IAAK,KACvD,OAAO/Y,KAAK4Z,QAAQ7P,QAAOyL,EAAYzL,IAKnDg5D,EA9jBA,8BCQI,SAAA2D,EAAoBj2D,GAAAzQ,KAAAyQ,OAAAA,EAyfxB,OAvfIi2D,EAAAxmE,UAAAymE,oBAAA,SAAoBn7D,GAChB,OAAOxL,KAAKyQ,OAAO40D,kBAAkB75D,EAAKoC,WAU9C84D,EAAAxmE,UAAA0mE,aAAA,SAAap7D,EAAY+5D,GACrBvlE,KAAKyQ,OAAO2zD,aAAa54D,EAAKoC,SAAU23D,IAc5CmB,EAAAxmE,UAAA2mE,UAAA,SAAU53D,EAAOs2D,EAAUuB,WACvB,GAAI73D,EAAO,gBACIzC,GACP,GAAIA,aAAgBP,SAChB8C,EAAKg4D,YAAYv6D,EAAM+4D,GACnB/4D,EAAKjB,SAAS8J,4BAA+CG,IAAtBhJ,EAAKo3D,cAC5Cp3D,EAAKjB,SAAS6J,oBAAmB,QAGlC,GAAI5I,EAAKjB,UAAYiB,EAAKjB,SAAS0J,QAA0C,UAAhCzI,EAAKjB,SAAS2J,eAA6B4xD,EAAY,CACvG,IAAMjC,EAAWmC,OAAAA,KAAOzB,GAAS,SAAC1gE,GAC9B,OAAOA,EAAE+0D,QAAQ7oD,OAASvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,SAAW/0D,EAAEm3D,gBAE5E6I,IACIr4D,EAAKA,OACLA,EAAKA,KAAmB,aAAIq4D,GAGhC91D,EAAK83D,UAAUr6D,EAAKwvD,aAAc6I,EAAS7I,eAE3C8K,GAAct6D,EAAK+4D,SACnBx2D,EAAK83D,UAAUr6D,EAAKwvD,aAAcxvD,EAAK+4D,QAAQvJ,mBAIhD,GAAIxvD,aAAgBH,WAA2C,gBAA9BG,EAAKjB,SAAS0J,OAAO9H,KACzD4B,EAAKk4D,mBAAmBz6D,EAAM+4D,OAC3B,CAAA,IAAI/4D,EAAKjB,WAAYiB,EAAKjB,SAAS0J,QAA0C,cAAhCzI,EAAKjB,SAAS2J,eAAkC4xD,EAIhG,MAAM,IAAIzsD,MAAM,mBAHhBtL,EAAKm4D,wBAAwB16D,EAAM+4D,GACnC/4D,EAAKA,KAAKnF,QAAQW,sCA3B1B,IAAmB,IAAAm/D,EAAAppB,SAAA9uC,GAAKm4D,EAAAD,EAAAnkE,QAAAokE,EAAAjkE,KAAAikE,EAAAD,EAAAnkE,OAAA,GAATokE,EAAAtkE,4GAmCvB4jE,EAAAxmE,UAAA6mE,YAAA,SAAYv6D,EAAM+4D,GACd,GAAI/4D,EAAKjB,UAAYiB,EAAKjB,SAAS0J,SACA,QAA9BzI,EAAKjB,SAAS0J,OAAO9H,MACS,sBAA9BX,EAAKjB,SAAS0J,OAAO9H,MAC4B,UAAlDX,EAAKjB,SAAS0J,OAAOooD,gBAAgBgD,WACc,kBAAnD7zD,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,WACc,aAAnD5sD,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,WACc,iBAAnD5sD,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,UAA8B,CACnE,IAAMqC,EAAMuL,OAAAA,KAAOzB,GAAS,SAAC1gE,GACzB,OAAOA,EAAE+0D,QAAQ7oD,OAASvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,WAE/D6B,IACIA,EAAI34D,iBAAiBtD,QACrBgN,EAAKnF,QAAQiM,SAASmoD,EAAI34D,MAAMiO,MAChCvE,EAAKnF,QAAQW,2BAEbwE,EAAKnF,QAAQiM,SAASmoD,EAAI34D,OAC1B0J,EAAKnF,QAAQW,0BAEjBwE,EAAmB,aAAI,CAAE66D,QAAS5L,EAAI1qD,KAAMjO,MAAO24D,EAAI34D,YAExD,CACH,IAAMwkE,EAAWluD,OAAAA,OAASmsD,GAAS,SAAC1gE,GAChC,OAAOA,EAAE+0D,QAAQ7oD,OAASvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,WAE/D0N,GAAYA,EAAS3mE,OAAS,IAC9B6L,EAAKnF,QAAQiM,SAAStT,KAAKunE,qBAAqBD,IAChD96D,EAAKnF,QAAQW,yBACbwE,EAAmB,aAAI86D,KAKnCZ,EAAAxmE,UAAA+mE,mBAAA,SAAmBz6D,EAAM+4D,GACrB,IAAIpB,EACA7D,EAGJ,IAAK,IAAMz7D,KAAK2H,EAAKC,SAC+D,UAA3ED,EAAKC,SAAS5H,GAAgB0G,SAAS0J,OAAOooD,gBAAgBgD,WAC/D8D,EAAa33D,EAAKC,SAAS5H,IAGiD,gBAA3E2H,EAAKC,SAAS5H,GAAgB0G,SAAS0J,OAAOooD,gBAAgBgD,WAC/DC,EAAY9zD,EAAKC,SAAS5H,IAIlC7E,KAAK+mE,YAAY5C,EAAYoB,GAG7B,IAAM9J,EAAMuL,OAAAA,KAAOzB,GAAS,SAAC1gE,GACzB,OAAOA,EAAE+0D,QAAQ7oD,OAASvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,WAG/D6B,IACA6E,EAAwB,aAAI,CAAE+G,QAAS5L,EAAI1qD,KAAMjO,MAAO24D,EAAI4I,aAC3D/D,EAAuBj5D,QAAQiM,SAASmoD,EAAI4I,aAC5C/D,EAAuBj5D,QAAQW,2BAIxC0+D,EAAAxmE,UAAAqnE,qBAAA,SAAqBD,WACX90D,EAAS,OACf,IAAgB,IAAAg1D,EAAAzpB,SAAAupB,GAAQG,EAAAD,EAAAxkE,QAAAykE,EAAAtkE,KAAAskE,EAAAD,EAAAxkE,OAAE,CAArB,IAAM0B,EAAC+iE,EAAA3kE,MACR0P,EAAOhO,KAAKE,EAAE5B,MAAMiO,wGAExB,OAAOyB,GAGXk0D,EAAAxmE,UAAAgnE,wBAAA,SAAwB16D,EAAM+4D,WACpBmC,EAAoBtuD,OAAAA,OAASmsD,GAAS,SAAC1gE,GACzC,IAAM4e,EAAQ5e,EAAE+0D,QAAQ7oD,OAASvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,QAClE+N,GAAY,EAChB,GAAIlkD,GAAS5e,EAAEm3D,aAAc,CACzB,IAAMP,EAAM52D,EAAEm3D,aAAa1jD,KAAI,SAAChT,GAC5B,OAAOA,EAAEs0D,QAAQ7oD,QAGf62D,EAAkBp7D,EAAKjB,SAASiT,UAAUlG,KAAI,SAAChT,GACjD,OAAOA,EAAE2P,OAAOooD,gBAAgBzD,WAGpC+N,EAAaE,OAAAA,aAAepM,EAAKmM,GAAiBjnE,OAAS,EAE/D,OAAO8iB,GAASkkD,KAEpB,GAAID,EAAkB/mE,OAAS,EAAG,CAC9B6L,EAAKA,KAAmB,aAAIk7D,EAC5B,IAAK,IAAIlnE,EAAI,EAAGA,EAAIknE,EAAkB/mE,OAAQH,IAC1CgM,EAAKA,KAAKT,kBAGlB,IAAM+7D,EAAS,GACXh8D,EAAQ,aACDsC,GACP,IAAM3B,EAAWjN,OAAOkS,KAAKtD,EAAM3B,UAAU6L,KAAI,SAAUhX,GAAO,OAAO8M,EAAM3B,SAASnL,MAClFskE,EAAe8B,EAAkB57D,GACvCg8D,EAAOtjE,KAAK,CAAE+G,SAAUiB,EAAKjB,SAAUywD,aAAcvvD,EAAU84D,QAASK,IACxE95D,SAJJ,IAAoB,IAAAgyC,EAAAC,SAAAvxC,EAAKA,KAAKC,UAAQuxC,EAAAF,EAAA96C,QAAAg7C,EAAA76C,KAAA66C,EAAAF,EAAA96C,OAAA,GAAtBg7C,EAAAl7C,yGAMhB9C,KAAK6mE,UAAUiB,EAAQJ,GAAmB,IAG9ChB,EAAAxmE,UAAA6nE,iBAAA,SAAiBtS,eAEPuS,EAAS,OACf,IAAmB,IAAAC,EAAAlqB,SAAA0X,GAAKyS,EAAAD,EAAAjlE,QAAAklE,EAAA/kE,KAAA+kE,EAAAD,EAAAjlE,OAAE,CAArB,IAAM0yD,EAAIwS,EAAAplE,UACX,IAAsB,IAAAk7C,GAAAmqB,OAAA,EAAApqB,SAAA2X,EAAKA,OAAI0S,EAAApqB,EAAAh7C,QAAAolE,EAAAjlE,KAAAilE,EAAApqB,EAAAh7C,OAAE,CAA5B,IAAM6e,EAAOumD,EAAAtlE,MACdklE,EAAOxjE,KAAKqd,EAAQA,8MAG5B,MAPe,GAOD3c,OAAOrE,MAAM,GAAImnE,IAGnCtB,EAAAxmE,UAAAmoE,eAAA,SAAep5D,WACLuwD,EAAW,OACjB,IAAmB,IAAA8I,EAAAvqB,SAAA9uC,GAAKs5D,EAAAD,EAAAtlE,QAAAulE,EAAAplE,KAAAolE,EAAAD,EAAAtlE,OAAE,CAArB,IAAMwJ,EAAI+7D,EAAAzlE,MACX08D,EAASh7D,KAAK,CAAE+G,SAAUiB,EAAKjB,SAAUywD,aAAch8D,KAAKwoE,SAASh8D,uGAEzE,OAAOgzD,GAGXkH,EAAAxmE,UAAAuoE,aAAA,SAAahN,EAAKiN,GACd,GAAIjN,EAAIlwD,UAAYkwD,EAAIlwD,SAAS0J,QAA4D,UAAlDwmD,EAAIlwD,SAAS0J,OAAOooD,gBAAgBjE,UAAuB,CAClG,IAAMt/C,EAAUV,OAAAA,OAASpZ,KAAK2oE,cAAclN,EAAIO,eAAe,SAACn3D,GAC5D,MAAmB,KAAZA,EAAE/B,SAGP8lE,EAAgB9uD,EAAQxB,KAAI,SAAChT,GAC/B,OAAOA,EAAE0/D,UAETlrD,EAAQnZ,OAAS,GAAKioE,EAAcnoD,MAAMooD,SAC1CH,EAAWlkE,KAAK,CACZuM,KAAM0qD,EAAIjvD,KAAKo3D,aAAa7yD,KAC5Bi0D,QAAQ,IAELlrD,EAAQnZ,OAAS,IACpB86D,EAAIjvD,KAAKo3D,aACT8E,EAAWlkE,KAAK,CACZuM,KAAM0qD,EAAIjvD,KAAKo3D,aAAa7yD,KAC5BirD,aAAcliD,IAGlB4uD,EAAWlkE,KAAK,CACZo1D,QAAS6B,EAAIlwD,SAAS0J,OAAOooD,gBAAgBzD,QAC7CoC,aAAcliD,OAOlC4sD,EAAAxmE,UAAA4oE,gBAAA,SAAgBnG,WACRoG,EAAU,OACd,IAAqB,IAAAjrB,EAAAC,SAAA4kB,EAAM3G,cAAYhe,EAAAF,EAAA96C,QAAAg7C,EAAA76C,KAAA66C,EAAAF,EAAA96C,OAAE,CAApC,IAAMk0D,EAAMlZ,EAAAl7C,MACTA,EAAa,GACbo0D,EAAOp0D,iBAAiBtD,OACxBsD,EAAQo0D,EAAOp0D,MAAMiO,KACdmmD,EAAOp0D,MACdA,EAAQo0D,EAAOp0D,MACRo0D,EAAO8E,cAAgB9E,EAAO8E,aAAar7D,OAAS,IAC3DooE,EAAU/oE,KAAK8oE,gBAAgBnG,IAEnCoG,EAAQ7R,EAAO0C,QAAQ7oD,KAAO,IAAMjO,GAASA,oGAEjD,OAAOimE,GAGXrC,EAAAxmE,UAAA8oE,cAAA,SAAcx8D,EAAM1J,GAChB,IAAMimE,EAAU,GAChB,IAAK,IAAMznE,KAAOwB,EACd,GAAIA,EAAMjD,eAAeyB,GAAM,CAC3B,IAAMohE,EAAqBsE,OAAAA,KAAOx6D,EAAKjB,SAASiT,UAAW,CAAEld,IAAKA,IAC5DyvD,EAAajuD,EAAMxB,GACrByvD,aAAsBvxD,QACA,KAAfuxD,IACPgY,EAAQrG,EAAcztD,OAAOooD,gBAAgBzD,QAAU,IACjD7I,GAAcA,GAKhC,OAAOgY,GAGXrC,EAAAxmE,UAAA+oE,uBAAA,SAAuBz8D,EAAMk8D,uBACnBQ,EAAgB,GACtB,GAAI18D,EAAKA,KAAKo3D,iBACV,IAAoB,IAAAuF,EAAAprB,SAAAvxC,EAAKA,KAAKo3D,cAAYwF,EAAAD,EAAAnmE,QAAAomE,EAAAjmE,KAAAimE,EAAAD,EAAAnmE,OAAE,CAAvC,IAAM2/D,EAAKyG,EAAAtmE,MACZomE,EAAc1kE,KAAK,CAAEuM,KAAM4xD,EAAM5xD,KAAMjO,MAAO9C,KAAK8oE,gBAAgBnG,uGAG3E,IAAM0G,EAAiB,OACvB,IAAoB,IAAAC,EAAAvrB,SAAAvxC,EAAKA,KAAKnF,QAAQvE,OAAKymE,EAAAD,EAAAtmE,QAAAumE,EAAApmE,KAAAomE,EAAAD,EAAAtmE,OAAE,CAAxC,IAAMF,EAAKymE,EAAAzmE,MACZumE,EAAe7kE,KAAK,CAAE1B,MAAO9C,KAAKgpE,cAAcx8D,EAAM1J,uGAE1D,IAAM0mE,EAAUxpE,KAAKypE,oBAAoBP,EAAeG,GAClDK,EAAS1pE,KAAKypE,oBAAoBJ,EAAgBH,GAClDS,EAAen9D,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,QACtDgQ,EAAgB,GACpB,GAAIJ,EAAQ7oE,OAAS,EAAG,CACpB,IAAMkpE,EAAa7pE,KAAK8pE,sBAAsBN,OAC9C,IAAgB,IAAAO,EAAAhsB,SAAA8rB,GAAUG,EAAAD,EAAA/mE,QAAAgnE,EAAA7mE,KAAA6mE,EAAAD,EAAA/mE,OAAE,CAAvB,IAAM1D,EAAC0qE,EAAAlnE,MACR4lE,EAAWlkE,KAAKlF,qGAEhBoqE,EAAO/oE,OAAS,IAChBipE,EAAgB5pE,KAAKiqE,kBAAkBP,EAAQC,SAGnDC,EAAgB5pE,KAAKiqE,kBAAkBP,EAAQC,GAGnD,GAAIC,EAAcjpE,OAAS,MACvB,IAAgB,IAAAupE,EAAAnsB,SAAA6rB,GAAaO,EAAAD,EAAAlnE,QAAAmnE,EAAAhnE,KAAAgnE,EAAAD,EAAAlnE,OAAE,CAA1B,IAAMpD,EAACuqE,EAAArnE,MACR4lE,EAAWlkE,KAAK5E,uGAK5B8mE,EAAAxmE,UAAAupE,oBAAA,SAAoBW,EAAOC,GAMvB,OALeD,EAAMjuB,QAAO,SAAUxpC,GAClC,OAAQ03D,EAAOzsB,MAAK,SAAU0sB,GAC1B,OAAOC,OAAAA,QAAU53D,EAAI7P,MAAOwnE,EAAKxnE,cAM7C4jE,EAAAxmE,UAAA+pE,kBAAA,SAAkB1E,EAASoE,WACjBa,EAAa,OACnB,IAAkB,IAAAC,EAAA1sB,SAAAwnB,GAAOmF,EAAAD,EAAAznE,QAAA0nE,EAAAvnE,KAAAunE,EAAAD,EAAAznE,OAAE,CAAtB,IAAMy4D,EAAGiP,EAAA5nE,MACJ8iE,EAAe,GAErB,IAAK,IAAItkE,KAAOm6D,EAAI34D,MAAO,CACvB,IAAI82D,EAAUt4D,EAAImgB,MAAM,KAAK,GACzB3e,EAAQxB,EAAImgB,MAAM,KAAK,GAC3BmkD,EAAaphE,KAAK,CAAEo1D,QAASA,EAAS92D,MAAOA,IAEjD0nE,EAAWhmE,KAAK,CAAEo1D,QAAS+P,EAAc3N,aAAc4J,sGAG3D,OAAO4E,GAGX9D,EAAAxmE,UAAA4pE,sBAAA,SAAsBvE,WACZsE,EAAa,OACnB,IAAgB,IAAAc,EAAA5sB,SAAAwnB,GAAOqF,EAAAD,EAAA3nE,QAAA4nE,EAAAznE,KAAAynE,EAAAD,EAAA3nE,OAAE,CAApB,IAAM1D,EAACsrE,EAAA9nE,MACR+mE,EAAWrlE,KAAK,CAAEuM,KAAMzR,EAAEyR,KAAMi0D,QAAQ,sGAE5C,OAAO6E,GAGXnD,EAAAxmE,UAAA2qE,aAAA,SAAapE,GACT,OAAOA,EAAS93D,UAAU,EAAG,IAAIoK,QAAQ,IAAK,MAGlD2tD,EAAAxmE,UAAA4qE,WAAA,SAAWrP,EAAKiN,GACZ,GAAIjN,EAAIp0D,SAAWo0D,EAAIlwD,SAAS0J,OAAQ,CACpC,IAAM81D,EAAW,CACbnR,QAAS6B,EAAIlwD,SAAS0J,OAAOooD,gBAAgBzD,QAC7C92D,MAA0D,SAAlD24D,EAAIlwD,SAAS0J,OAAOooD,gBAAgBjE,WAAyBp5D,KAAK4Z,QAAQ6hD,EAAIp0D,QAAQvE,OACnD24D,EAAIp0D,QAAQvE,MAAnD9C,KAAK6qE,aAAapP,EAAIp0D,QAAQvE,QAGtC,GAAsD,kBAAlD24D,EAAIlwD,SAAS0J,OAAOooD,gBAAgBjE,WACU,aAAlDqC,EAAIlwD,SAAS0J,OAAOooD,gBAAgBjE,WACc,iBAAlDqC,EAAIlwD,SAAS0J,OAAOooD,gBAAgBjE,UAA8B,CAC9D,IAAM4R,EAAShrE,KAAKirE,mBAAmBxP,EAAIlwD,SAAS0J,OAAOooD,gBAAgBzD,QAAS6B,EAAIp0D,QAAQvE,OAChG,GAAI24D,EAAImI,aAAc,CAClB,IAAMsH,EAAgBzP,EAAImI,aAAatrD,KAAI,SAAChT,GACxC,MAAO,CAAEyL,KAAMzL,EAAEyL,KAAMjO,MAAO,CAAE82D,QAASt0D,EAAEs0D,QAAQ7oD,KAAMjO,MAAOwC,EAAExC,MAAMiO,UAEtEo6D,EAAgBH,EAAO1yD,KAAI,SAAChT,GAC9B,MAAO,CAAExC,MAAOwC,MAEdukE,EAAa7pE,KAAKypE,oBAAoByB,EAAeC,GACrDzB,EAAS1pE,KAAKypE,oBAAoB0B,EAAeD,GACvDlrE,KAAKorE,6BAA6BvB,EAAYnB,GAC9C1oE,KAAKqrE,yBAAyB3B,EAAQhB,QAEtC1oE,KAAKqrE,yBAAyBL,EAAQtC,QAGtCjN,EAAImI,cAAgBnI,EAAImI,aAAa9gE,OAASioE,EAC9C/qE,KAAKsrE,gBAAgBP,EAAUtP,EAAImI,aAAc8E,GACvB,KAAnBqC,EAASjoE,OAAmC,OAAnBioE,EAASjoE,OACzC4lE,EAAWlkE,KAAKumE,KAMhCrE,EAAAxmE,UAAAqrE,kBAAA,SAAkB/+D,EAAMk8D,GACpB,IAAIvE,EACA7D,EAGJ,IAAK,IAAMz7D,KAAK2H,EAAKC,SAC+D,UAA3ED,EAAKC,SAAS5H,GAAgB0G,SAAS0J,OAAOooD,gBAAgBgD,WAC/D8D,EAAa33D,EAAKC,SAAS5H,IAGiD,gBAA3E2H,EAAKC,SAAS5H,GAAgB0G,SAAS0J,OAAOooD,gBAAgBgD,WAC/DC,EAAY9zD,EAAKC,SAAS5H,IAIlC,GAAIs/D,EAAY,CAEZnkE,KAAK8qE,WAAW3G,EAAYuE,GAG5B,IAAM8C,EAAiB9C,EAAW/nE,OAAS,EAAI+nE,EAAWA,EAAW/nE,OAAS,QAAK6U,EAC/Eg2D,IACEA,EAAe5R,SAAW4R,EAAe5R,UAAYptD,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,SACvFuK,EAAWP,cAAgB4H,EAAez6D,OAASozD,EAAWP,aAAayD,UAC5E/G,EAAUsD,cAAgBtD,EAAUj5D,QAAQvE,QAAUw9D,EAAUsD,aAAa9gE,QAC7E0oE,EAAenH,YAAc/D,EAAUj5D,QAAQvE,SAM/D4jE,EAAAxmE,UAAAkrE,6BAAA,SAA6B54D,EAAQk2D,eACjC,IAAoB,IAAA+C,EAAA1tB,SAAAvrC,GAAMk5D,EAAAD,EAAAzoE,QAAA0oE,EAAAvoE,KAAAuoE,EAAAD,EAAAzoE,OAAE,CAAvB,IAAMF,EAAK4oE,EAAA5oE,MACZ4lE,EAAWlkE,KAAK,CAAEuM,KAAMjO,EAAMiO,KAAMi0D,QAAQ,wGAIpD0B,EAAAxmE,UAAAmrE,yBAAA,SAAyB74D,EAAQk2D,eAC7B,IAAoB,IAAAiD,EAAA5tB,SAAAvrC,GAAMo5D,EAAAD,EAAA3oE,QAAA4oE,EAAAzoE,KAAAyoE,EAAAD,EAAA3oE,OAAE,CAAvB,IAAMw+C,EAAKoqB,EAAA9oE,MACR0+C,EAAM1+C,iBAAiBtD,OACvBkpE,EAAWlkE,KAAKg9C,EAAM1+C,OAEtB4lE,EAAWlkE,KAAKg9C,uGAK5BklB,EAAAxmE,UAAAorE,gBAAA,SAAgBP,EAAUnH,EAAc8E,GAChC1oE,KAAK4Z,QAAQmxD,EAASjoE,QAAU8gE,EAAa9gE,MAC7C4lE,EAAWlkE,KAAK,CAAEuM,KAAM6yD,EAAayD,QAASrC,QAAQ,KAC9ChlE,KAAK4Z,QAAQmxD,EAASjoE,QAAU8gE,EAAa9gE,OACrD4lE,EAAWlkE,KAAK,CAAEuM,KAAM6yD,EAAayD,QAASvkE,MAAOioE,EAASjoE,SAItE4jE,EAAAxmE,UAAA0Z,QAAA,SAAQ9W,GACJ,MAAc,KAAVA,GAAAA,MACAA,GAUR4jE,EAAAxmE,UAAAsoE,SAAA,SAAS3jE,EAAGsI,GACR,IAAMqR,EAAY,GAClB,GAAI3Z,EAAE4H,SAAU,CACZ,GAAI5H,EAAE4H,oBAAoB9M,MAEtB,OADiBK,KAAKqoE,eAAexjE,EAAE4H,UAG3C,GAAI5H,EAAE4H,oBAAoBjN,OACtB,IAAK,IAAM8B,KAAOuD,EAAE4H,SAChB,GAAI5H,EAAE4H,SAAS5M,eAAeyB,GAC1B,OAAQuD,EAAE4H,SAASnL,GAAKiK,SAAS2J,eAC7B,IAAK,OACD,IAAMwgD,EAAO11D,KAAKwoE,SAAS3jE,EAAE4H,SAASnL,IACtCkd,EAAUha,KAAK,CAAEkxD,KAAMA,EAAM/xD,MAAOkB,EAAE4H,SAASnL,GAAKiK,SAAS5H,QAC7D,MACJ,IAAK,UACD,IAAMke,EAAU7hB,KAAKwoE,SAAS3jE,EAAE4H,SAASnL,IACzCkd,EAAUha,KAAK,CAAEqd,QAASA,EAASrV,KAAM3H,EAAE4H,SAASnL,GAAMqC,MAAOkB,EAAE4H,SAASnL,GAAKiK,SAAS5H,QAC1F,MACJ,IAAK,QACD,IAAMkoE,EAAK7rE,KAAKwoE,SAAS3jE,EAAE4H,SAASnL,IACpCkd,EAAUha,KAAK,CAAEgI,KAAM3H,EAAE4H,SAASnL,GAAMiK,SAAU1G,EAAE4H,SAASnL,GAAKiK,SAAUywD,aAAc6P,IAC1F,MACJ,IAAK,YACD,IAAMC,EAAM9rE,KAAKqoE,eAAexjE,EAAE4H,SAASnL,GAAKmL,UAChD+R,EAAUha,KAAK,CAAEgI,KAAM3H,EAAE4H,SAASnL,GAAMiK,SAAU1G,EAAE4H,SAASnL,GAAKiK,SAAUywD,aAAc8P,IAC1F,MACJ,QACIttD,EAAUha,KAAKK,EAAE4H,SAASnL,KASlD,OAAOkd,GAGXkoD,EAAAxmE,UAAA+qE,mBAAA,SAAmBrR,EAASpnD,WAClBu5D,EAAiB,GACvB,GAAIv5D,GAAqB,OAAXA,MACV,IAAoB,IAAAw5D,EAAAjuB,SAAAvrC,GAAMy5D,EAAAD,EAAAhpE,QAAAipE,EAAA9oE,KAAA8oE,EAAAD,EAAAhpE,OAAE,CAAvB,IACKy4D,EAAM,CACR7B,QAASA,EACT92D,MAHQmpE,EAAAnpE,OAKZipE,EAAevnE,KAAKi3D,qGAG5B,OAAOsQ,GAIXrF,EAAAxmE,UAAAgsE,MAAA,SAAM1/D,GACF,MAAsC,QAA9BA,EAAKjB,SAAS0J,OAAO9H,MACK,aAA9BX,EAAKjB,SAAS0J,OAAO9H,MACS,gBAA9BX,EAAKjB,SAAS0J,OAAO9H,MAG7Bu5D,EAAAxmE,UAAAyoE,cAAA,SAAc15D,WACJy5D,EAAa,OACnB,IAAmB,IAAAyD,EAAApuB,SAAA9uC,GAAKm9D,EAAAD,EAAAnpE,QAAAopE,EAAAjpE,KAAAipE,EAAAD,EAAAnpE,OAAE,CAArB,IAAMwJ,EAAI4/D,EAAAtpE,MACP9C,KAAKksE,MAAM1/D,KACPA,EAAKwvD,aAAiE,UAAnDxvD,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,UAExDp5D,KAAKyoE,aAAaj8D,EAAMk8D,IAEjBl8D,EAAKwvD,aAAiE,cAAnDxvD,EAAKjB,SAAS0J,OAAOooD,gBAAgBjE,UAC/Dp5D,KAAKipE,uBAAuBz8D,EAAMk8D,GAC3Bl8D,aAAgBH,WAA0D,gBAA5CG,EAAmBjB,SAAS0J,OAAO9H,KACxEnN,KAAKurE,kBAAkB/+D,EAAMk8D,GAE7B1oE,KAAK8qE,WAAWt+D,EAAMk8D,uGAIlC,OAAOA,4CAvfiB3F,oBAFnB2D,EAAevlE,WAAA,CAD3B2F,KAAAA,6CAG+Bi8D,oBAFnB2D,mCCPb,SAAA2F,IAEIrsE,KAAAssE,eAAiB,GACTtsE,KAAAw7D,SAAW,GA0MvB,OAxMI6Q,EAAAnsE,UAAAymE,oBAAA,SAAoBn7D,GAIhB,OAHAxL,KAAKssE,eAAiB,GACtBtsE,KAAKusE,kBAAkB/gE,GACvBxL,KAAKwsE,4BAA4BhhE,EAAKoC,UAC/B5N,KAAKysE,qBAAqBzsE,KAAKssE,eAAgB9gE,IAG1D6gE,EAAAnsE,UAAA0mE,aAAA,SAAap7D,EAAY+5D,GACrB/5D,EAAK8X,eAAiBiiD,EACtBvlE,KAAKssE,eAAiB,GACtBtsE,KAAKwsE,4BAA4BhhE,EAAKoC,UACtC,IAAM0V,EAAiBtjB,KAAK0sE,mBAAmBlhE,GAC/CxL,KAAK2sE,gBAAgB3sE,KAAKssE,eAAgBhpD,IAGtC+oD,EAAAnsE,UAAAqsE,kBAAR,SAA0B/gE,GAClBA,EAAKwU,oBAAoB4sD,eACzB5sE,KAAKw7D,SAAWhwD,EAAKwU,oBAAoB4sD,eAIzCP,EAAAnsE,UAAAusE,qBAAR,SAA6BI,EAAYrhE,WAGjCshE,EAFEvH,EAAU,GACVwH,EAAiB,GAEjBzpD,EAAiBtjB,KAAK0sE,mBAAmBlhE,cACpCwhE,GACP,IAAMC,EAAkBD,EAAU3lE,QAAQvE,MACpCg8D,EAAS,GAQf,IAAK,IAAMoO,KAPP5pD,GACAA,EAAehL,KAAI,SAAU3F,GACzBmsD,EAAOnsD,EAAIinD,SAAWjnD,EAAIinD,WAKdqT,EAChB,GAAIA,EAAgBptE,eAAeqtE,GAAQ,CAEvC,IAAMC,EAAaF,EAAgBC,GAAOF,EAAUzhE,SAASjK,KAEvD8rE,EAAer+D,EAAKs+D,oBAAoBF,EAAYH,EAAUzhE,SAAS0J,QAEzE6pD,EAAOqO,KAAgBA,GAAuC,KAAzBC,EAAaxT,SAElD2L,EAAQ/gE,KAAK4oE,GAEjBL,EAAeI,GAAcA,EACI,KAA7BC,EAAaE,oBACNF,EAAaE,YAEE,KAAtBF,EAAar8D,aACNq8D,EAAar8D,kBA1BpC,IAAwB,IAAAw8D,EAAAxvB,SAAA8uB,GAAUW,EAAAD,EAAAvqE,QAAAwqE,EAAArqE,KAAAqqE,EAAAD,EAAAvqE,OAAA,GAAdwqE,EAAA1qE,yGAkCpB,OADAgqE,EAAgB9sE,KAAKytE,kBAAkBV,EAAgBzpD,GAChDtjB,KAAK0tE,2BAA2BZ,EAAevH,IAIlD8G,EAAAnsE,UAAAwsE,mBAAR,SAA2BlhE,GACvB,GAAIA,EAAK8X,gBAAkB9X,EAAK8X,eAAew7C,OAAQ,CACnD,IAAIx7C,EAAiB9X,EAAK8X,eAAew7C,OAAOxmD,KAAI,SAACzT,GACjD,MAAO,CACH+0D,QAAS/0D,EAAE+0D,QAAQ7oD,KACnBu8D,YAAazoE,EAAEyoE,YACfK,UAAW9oE,EAAEkM,KACbi0D,OAAQngE,EAAEmgE,OACV4I,WAAY/oE,EAAEgpE,UAAUD,eAIhC,OAAwBx0D,OAAAA,OAASkK,GAAgB,SAAC4pD,GAC9C,OAAqB,IAAjBA,EAAMlI,SAAmBkI,EAAMU,gBAYvCvB,EAAAnsE,UAAAysE,gBAAR,SAAwBngE,EAAM8W,WAC1BtjB,KAAKwsE,4BAA4BhgE,GAEjC,IAAMqgE,EAAa7sE,KAAKssE,mBACxB,IAAwB,IAAAwB,EAAA/vB,SAAA8uB,GAAUkB,EAAAD,EAAA9qE,QAAA+qE,EAAA5qE,KAAA4qE,EAAAD,EAAA9qE,OAAE,CAA/B,IAAMgqE,EAASe,EAAAjrE,MAChB9C,KAAKguE,oBAAoBhB,EAAW1pD,uGAIpC+oD,EAAAnsE,UAAAwtE,2BAAR,SAAmCZ,EAAevH,GAC9C,IAAK,IAAM2H,KAASJ,EACZA,EAAcjtE,eAAeqtE,IAC7B3H,EAAQ/gE,KAAK,CAAEuM,KAAM+7D,EAAcI,GAAQlI,QAAQ,IAG3D,OAAOO,GAGH8G,EAAAnsE,UAAAmtE,oBAAR,SAA4BY,EAAcC,GACtC,IAAMhB,EAAQ,CACVtT,QAAS,GACTzsD,KAAM,GACNghE,QAAS,GACTC,YAAa,IAYjB,OAVAlB,EAAMtT,QAAUqU,EAChBf,EAAM//D,KAAO+gE,EAAe7Q,gBAAgBpE,UAC5CiU,EAAMiB,QAAUnuE,KAAKw7D,SACrB0R,EAAMkB,YAAcF,EAAe7Q,gBAAgBlE,iBAG7B,KAAlB+T,EAAMiB,gBACCjB,EAAMiB,QAGVjB,GAGHb,EAAAnsE,UAAAutE,kBAAR,SAA0BV,EAAgBzpD,GACtC,IAAM+qD,EAAe,GACrB,GAAItB,EACA,IAAK,IAAMG,KAAS5pD,EAChB,GAAIA,EAAezjB,eAAeqtE,GAAQ,CACtC,IAAMoB,EAAuBhrD,EAAe4pD,GAAOtT,QAC7BmT,EAAeuB,KACfA,GAClBD,EAAa7pE,KAAK8e,EAAe4pD,GAAOS,WAMxD,OAAOU,GAGHhC,EAAAnsE,UAAA8tE,oBAAR,SAA4BxhE,EAAMsyD,WAC1BhzD,EAAQ,EACZU,EAAmB,aAAIsyD,MACvB,IAAoB,IAAAyP,EAAAxwB,SAAA+gB,GAAM0P,EAAAD,EAAAvrE,QAAAwrE,EAAArrE,KAAAqrE,EAAAD,EAAAvrE,OAAE,CAAvB,IAAMkqE,EAAKsB,EAAA1rE,MACZ0J,EAAKT,kBACL,IAAMjJ,EAAQ,GACdA,EAAM0J,EAAKjB,SAASjK,KAAO4rE,EAAMtT,QACjC,IAAM6U,EAAYjiE,EAAKC,SAASX,GAChC2iE,EAAUpnE,QAAQiM,SAASxQ,GAC3B2rE,EAAwB,aAAI3rE,EAC5B2rE,EAAuB,YAAIvB,EAAMI,YAEjCxhE,wGAIAugE,EAAAnsE,UAAAssE,4BAAR,SAAoCkC,GAEhC,GAAIA,EAASjiE,UACLiiE,EAASjiE,oBAAoBjN,OAC7B,IAAK,IAAM8B,KAAOotE,EAASjiE,SACvB,GAAIiiE,EAASjiE,SAAS5M,eAAeyB,GACjC,OAAQotE,EAASjiE,SAASnL,GAAKiK,SAAS2J,eACpC,IAAK,OAGL,IAAK,UAGL,IAAK,QACDlV,KAAKwsE,4BAA4BkC,EAASjiE,SAASnL,IAEnD,MACJ,IAAK,YACD,GAAIotE,EAASjiE,SAET,IAAK,IAAMD,KAAQkiE,EAASjiE,SAAU,CAClC,IAAMlB,EAAWmjE,EAASjiE,SAASD,GAAMjB,SACrCA,EAAS0J,QAAmC,cAAzB1J,EAAS0J,OAAO9H,MACnCnN,KAAKssE,eAAe9nE,KAAKkqE,EAASjiE,SAASD,OA3L1E6/D,EAAiBlrE,WAAA,CAD7B2F,KAAAA,cACYulE,MCMPj8D,SAASC,QAGfs+D,iBAAA,WAEI,SAAAA,EAAmBC,EAAyCC,GAAzC7uE,KAAA4uE,cAAAA,EAAyC5uE,KAAA6uE,WAAAA,EAuLhE,OArLIF,EAAAzuE,UAAA0mE,aAAA,SAAap7D,EAAY+5D,GACrBvlE,KAAK8uE,aAAatjE,EAAKoC,SAAU23D,GAE7B5lE,MAAMqS,QAAQuzD,EAAQzG,SACtB9+D,KAAK4uE,cAAchI,aAAap7D,EAAM+5D,GAEtC5lE,MAAMqS,QAAQuzD,EAAQ9J,MACtBz7D,KAAK6uE,WAAWjI,aAAap7D,EAAM+5D,EAAQ9J,MAInDkT,EAAAzuE,UAAA4uE,aAAA,SAAalhE,EAAoB23D,GAE7B,GAAIA,MAAAA,EACA,MAAM,IAAIlrD,MAAM,oBAGNra,KAAK+uE,kBAAkBnhE,GAE/BjE,SAAQ,SAAA6C,GACV,OAAQA,EAAKjB,SAAS0J,OAAO9H,MACzB,IAAK,oBACGo4D,EAA2B,oBAE3B/4D,EAAKnF,QAAQiM,SAASlD,SAAOm1D,EAA2B,mBAAGzX,UAC3DthD,EAAKo3D,aAAexzD,SAAOm1D,EAA2B,mBAAGzX,UAE7D,MACJ,IAAK,oBACD,GAAInuD,MAAMqS,QAAQuzD,EAA4B,qBAAMA,EAA4B,mBAAE5kE,OAAS,EAAG,CAC1F,IAAMquE,EAAqBzJ,EAA4B,mBAAE,GAAG/J,SACxDwT,GAAiBA,EAAcj+D,OAE/BvE,EAAKnF,QAAQiM,SAAS07D,EAAcj+D,MACpC6Q,YAAW,WACPpV,EAAKnF,QAAQiM,SAAS07D,EAAcj+D,SAExCvE,EAAKo3D,aAAeoL,EAAcj+D,MAG1C,MACJ,IAAK,oBACGw0D,EAAkB,UAAKA,EAAkB,SAAEx0D,OAC3CvE,EAAKnF,QAAQiM,SAASiyD,EAAkB,SAAEx0D,MAC1CvE,EAAKo3D,aAAe2B,EAAkB,SAAEx0D,WAS5D49D,EAAAzuE,UAAAymE,oBAAA,SAAoBn7D,GAChB,IAAM+5D,EAAUvlE,KAAKivE,oBAAoBzjE,EAAKoC,UAQ9C,OANA5N,KAAKkvE,2BAA2B1jE,EAAM+5D,GAEtCA,EAAa,IAAIvlE,KAAK6uE,WAAWlI,oBAAoBn7D,IAAS,GAE9D+5D,EAAgB,OAAIvlE,KAAK4uE,cAAcjI,oBAAoBn7D,IAAS,GAE7D+5D,GAGXoJ,EAAAzuE,UAAA+uE,oBAAA,SAAoBrhE,GAChB,IAAMqB,EAAQjP,KAAK+uE,kBAAkBnhE,GAC/B23D,EAAU,GA+BhB,OA7BAt2D,EAAMtF,SAAQ,SAAA6C,GACV,GAA2B,OAAvBA,EAAKnF,QAAQvE,YACU0S,IAAvBhJ,EAAKnF,QAAQvE,OACU,KAAvB0J,EAAKnF,QAAQvE,MACb,OAAQ0J,EAAKjB,SAAS0J,OAAO9H,MACzB,IAAK,oBACD,IAAMgiE,EAAY/+D,SAAO5D,EAAKnF,QAAQvE,OACjCssE,UAAUxhE,EAASpC,KAAKwU,oBAAoBovD,WAAa,SAC9D7J,EAA2B,kBAAI4J,EAAUh1D,OAAO,uBAChD,MACJ,IAAK,oBACD,GAAI3N,EAAKnF,QAAQvE,OAAgC,KAAvB0J,EAAKnF,QAAQvE,MAAc,CACjD,IAAM0jD,EAAY,GAClBA,EAAUhiD,KAAK,CACXg3D,SAAUhvD,EAAKnF,QAAQvE,MACvBusE,cAAe,yCAEnB9J,EAA4B,mBAAI/e,EAEpC,MACJ,IAAK,oBACD+e,EAAkB,SAAI/4D,EAAKnF,QAAQvE,UAQ5CyiE,GAGXoJ,EAAAzuE,UAAA6uE,kBAAA,SAAkBnhE,GACd,IAAMoW,EAA2B,GAEjC,OADAhkB,KAAKsvE,mBAAmB1hE,EAAUoW,GAC3BA,GAGX2qD,EAAAzuE,UAAAgvE,2BAAA,SAA2B1jE,EAAY+5D,GAC/B/5D,EAAKwU,oBAAoBuvD,aACzBvvE,KAAKwvE,sBAAsBjK,EAAS/5D,EAAKwU,oBAAoBuvD,aAG7D/jE,EAAKwU,oBAAoByvD,WACzBzvE,KAAK0vE,oBAAoBnK,EAAS/5D,EAAKwU,oBAAoByvD,WAG3DjkE,EAAKwU,oBAAoB2vD,mBACzB3vE,KAAK4vE,4BAA4BrK,EAAS/5D,EAAKwU,oBAAoB2vD,mBAGnEnkE,EAAKwU,oBAAoB6vD,UACzB7vE,KAAK8vE,mBAAmBvK,EAAS/5D,EAAKwU,oBAAoB6vD,UAG1DrkE,EAAKwU,oBAAoB+vD,eACzB/vE,KAAKgwE,wBAAwBzK,EAAS/5D,EAAKwU,oBAAoB+vD,gBAIvEpB,EAAAzuE,UAAAsvE,sBAAA,SAAsBjK,EAASgK,GAC3BhK,EAAiB,QAAIgK,GAGzBZ,EAAAzuE,UAAAwvE,oBAAA,SAAoBnK,EAASkK,GACzBlK,EAAe,MAAIkK,GAGvBd,EAAAzuE,UAAA0vE,4BAAA,SAA4BrK,EAASoK,GACjCpK,EAAuB,cAAIoK,GAG/BhB,EAAAzuE,UAAA4vE,mBAAA,SAAmBvK,EAASsK,GACxBtK,EAAc,KAAIsK,GAGtBlB,EAAAzuE,UAAA8vE,wBAAA,SAAwBzK,EAASwK,GAC7BxK,EAAc,KAAIwK,GAGdpB,EAAAzuE,UAAAovE,mBAAR,SAA2B1hE,EAAoB8E,GAA/C,IAAAtK,EAAApI,KAKI,GAJIA,KAAKiwE,iBAAiBriE,IACtB8E,EAAMlO,KAAKoJ,GAGXA,aAAoBvB,UAAW,CAC/B,IAAMG,EAAOoB,EAEb,IAAK,IAAM/I,KAAK2H,EAAKC,SACbD,EAAKC,SAAS5H,aAAcyG,UAC5BtL,KAAKsvE,mBAAmB9iE,EAAKC,SAAS5H,GAAI6N,GAKlD9E,aAAoBlB,YACdF,EAAOoB,GACRnB,SAAS9C,SAAQ,SAAAyE,GAClBhG,EAAKknE,mBAAmBlhE,EAAOsE,OAKnCi8D,EAAAzuE,UAAA+vE,iBAAR,SAAyBzjE,GACrB,SAAIA,EAAKjB,SAAS0J,QACiB,sBAA9BzI,EAAKjB,SAAS0J,OAAO9H,MACY,sBAA9BX,EAAKjB,SAAS0J,OAAO9H,MACS,sBAA9BX,EAAKjB,SAAS0J,OAAO9H,gDAlLCk/D,yBAAsC3F,mBAF/DiI,EAAgBxtE,WAAA,CAD5B2F,KAAAA,6CAGqCulE,kBAAsC3F,mBAF/DiI,GAAb,mCCNI,SAAAuB,KAwFJ,OAtFIA,EAAAhwE,UAAAymE,oBAAA,SAAoBn7D,GAChB,OAAOxL,KAAKivE,oBAAoBzjE,EAAKoC,WAGzCsiE,EAAAhwE,UAAA+uE,oBAAA,SAAoBrhE,GAChB,IAAMqB,EAAQjP,KAAKmwE,wBAAwBviE,GACrC23D,EAAU,GAqBhB,OApBAt2D,EAAMtF,SAAQ,SAAA6C,GACiB,OAAvBA,EAAKnF,QAAQvE,YACU0S,IAAvBhJ,EAAKnF,QAAQvE,OACU,KAAvB0J,EAAKnF,QAAQvE,OACb0J,EAAKo3D,eAAiBp3D,EAAKnF,QAAQvE,SAEwB,IAAvD0J,EAAKjB,SAAS0J,OAAOooD,gBAAgB+S,cACrC7K,EAAQ/gE,KAAK,CACT6rE,cAAe7jE,EAAKjB,SAAS0J,OAAOooD,gBAAgBgT,cACpDvtE,MAAO0J,EAAKnF,QAAQvE,QAGxByiE,EAAQ/gE,KAAK,CACT6rE,cAAe7jE,EAAKjB,SAAS0J,OAAOooD,gBAAgBgT,cACpDC,eAAgB9jE,EAAKnF,QAAQvE,YAMtCyiE,GAGX2K,EAAAhwE,UAAA0mE,aAAA,SAAap7D,EAAY+5D,GACrBvlE,KAAK8uE,aAAatjE,EAAKoC,SAAU23D,IAGrC2K,EAAAhwE,UAAA4uE,aAAA,SAAalhE,EAAoB23D,GAC7B,IAAK5lE,MAAMqS,QAAQuzD,GACf,MAAM,IAAIlrD,MAAM,mCAGNra,KAAKmwE,wBAAwBviE,GAErCjE,SAAQ,SAAA6C,GACV+4D,EAAQ57D,SAAQ,SAAAoG,GACRA,EAAQsgE,cAAct/D,OAClBvE,EAAKjB,SAAS0J,OAAOooD,gBAAgBgT,gBACrCtgE,EAAQjN,MAAMiO,MACdvE,EAAKnF,QAAQiM,SAASvD,EAAQjN,MAAMiO,MACpCvE,EAAKo3D,aAAe7zD,EAAQjN,MAAMiO,OAElCvE,EAAKnF,QAAQiM,SAASvD,EAAQjN,OAC9B0J,EAAKo3D,aAAe7zD,EAAQjN,eAOhDotE,EAAAhwE,UAAAiwE,wBAAA,SAAwBviE,GACpB,IAAMoW,EAA2B,GAEjC,OADAhkB,KAAKuwE,0BAA0B3iE,EAAUoW,GAClCA,GAGHksD,EAAAhwE,UAAAqwE,0BAAR,SAAkC3iE,EAAoB8E,GAAtD,IAAAtK,EAAApI,KAMI,GALI4N,EAASrC,SAAS0J,QACgB,oBAAlCrH,EAASrC,SAAS0J,OAAO9H,MACzBuF,EAAMlO,KAAKoJ,GAGXA,aAAoBvB,UAAW,CAC/B,IAAMG,EAAOoB,EAEb,IAAK,IAAM/I,KAAK2H,EAAKC,SACbD,EAAKC,SAAS5H,aAAcyG,UAC5BtL,KAAKuwE,0BAA0B/jE,EAAKC,SAAS5H,GAAI6N,GAKzD9E,aAAoBlB,YACdF,EAAOoB,GACRnB,SAAS9C,SAAQ,SAAAyE,GAClBhG,EAAKmoE,0BAA0BniE,EAAOsE,OArFzCw9D,EAAoB/uE,WAAA,CADhC2F,KAAAA,iDACYopE,uCCuCT,SAAAM,EAAoBvnB,GAAAjpD,KAAAipD,SAAAA,EA1BXjpD,KAAAoiD,YAAc,YAEvBpiD,KAAAywE,MAAQ,GACRzwE,KAAA8C,MAAQ,GACR9C,KAAA0wE,SAAU,EACV1wE,KAAA+zD,WAAa,GACb/zD,KAAAmiD,YAAc,iBACJniD,KAAAmD,KAA0B,IAAI0iB,KAAAA,aAExC7lB,KAAA2wE,WAAa,GA+HL3wE,KAAAspD,gBAAkB,SAACsnB,WAC/B,SA3IaJ,EAiBThxE,OAAAqC,eAAW2uE,EAAAtwE,UAAA,aAAU,KAArB,WACI,OAAOF,KAAKupD,iBAEhB,SAAsBnlD,GAClBpE,KAAKupD,YAAcnlD,EACfpE,KAAKupD,aAAevpD,KAAKupD,YAAYsnB,uBACrC7wE,KAAK8wE,oEAObN,EAAAtwE,UAAA2f,SAAA,aAIA2wD,EAAAtwE,UAAA4wE,iCAAA,WAAA,IAAA1oE,EAAApI,KACIA,KAAKupD,YAAYsnB,sBAAsBvoE,WAAU,SAAC0b,GAC1CA,EAAQrjB,OAAS,GACjByH,EAAKqoE,MAAQzsD,EACb5b,EAAK+5C,YAAc,GAEnB/5C,EAAK2oE,qBAAqB3oE,EAAK4oE,QAAQluE,MAAOkhB,KAE9C5b,EAAK+5C,YAAc,YACnB/5C,EAAKqoE,MAAQ,QAKlBD,EAAAtwE,UAAAsiD,MAAP,SAAa1/C,GACT9C,KAAKsqD,OAAOxnD,IAEhB0tE,EAAAtwE,UAAAoqD,OAAA,SAAOxnD,GAAP,IAAAsF,EAAApI,KACQA,KAAK+e,aACL/e,KAAK+zD,WAAajxD,EAClB9C,KAAKmiD,YAAc,mBACnBniD,KAAK+e,WAAWk1C,cAAcnxD,GACzBwF,WAAU,SAACpF,GACR,GAAIA,EAAOvC,OAAS,EAAG,CACnB,IACMuE,EADW+rE,OAAAA,IAAM7oE,EAAKtF,MAAOouE,OAAAA,OACXhsE,OAAOhC,GAC/BkF,EAAKqoE,MAAQU,OAAAA,OAASjsE,EAAQ,SAElCkD,EAAK+5C,YAAc,MACpB,SAACn9C,GACAoD,EAAK+5C,YAAc,eAKnCquB,EAAAtwE,UAAA6wE,qBAAA,SAAqBjuE,EAAOkhB,GAA5B,IAAA5b,EAAApI,KACQyjB,GAAQ,EACZ+B,OAAAA,KAAOxB,GAAS,SAAC/J,GACTA,EAAKnX,QAAUA,IACf8e,YAAW,WACPxZ,EAAK4oE,QAAQ10B,OAAOx5C,GACpBsF,EAAK4oE,QAAQluE,MAAQA,KAEzB2gB,GAAQ,MAGXA,GAED7B,YAAW,WACPxZ,EAAK4oE,QAAQ10B,OAAO,IACpBl0C,EAAK4oE,QAAQluE,MAAQ,OAKjC0tE,EAAAtwE,UAAAkxE,UAAA,SAAUrd,GACN,OAAQA,EAAWpzD,OAASX,KAAK+zD,WAAWpzD,QAAU,GACjDozD,EAAWpzD,OAASX,KAAK+zD,WAAWpzD,QAAU,GAAoB,KAAfozD,KAAwC,IAAjB/zD,KAAK0wE,SAIjFF,EAAAtwE,UAAAglD,WAAP,SAAkBpiD,GAAlB,IAAAsF,EAAApI,KACQ8C,GAAmB,KAAVA,GACL9C,KAAK+e,aACL/e,KAAK0wE,SAAU,EACf1wE,KAAK+e,WAAWs1C,qBAAqBvxD,GAAOwF,WAAU,SAACpF,GACnDkF,EAAKqoE,MAAQ,CAACvtE,GACd0e,YAAW,WACPxZ,EAAK4oE,QAAQ10B,OAAOp5C,EAAOJ,OAC3BsF,EAAK4oE,QAAQluE,MAAQI,EAAOJ,SAEhCsF,EAAKsoE,SAAU,KAChB,SAAC1rE,GACAoD,EAAKsoE,SAAU,OAOxBF,EAAAtwE,UAAAilD,iBAAP,SAAwBC,GACpBplD,KAAKspD,gBAAkBlE,GAIpBorB,EAAAtwE,UAAAmlD,kBAAP,aAEAmrB,EAAAtwE,UAAAgjD,SAAA,SAAS7gC,GACLriB,KAAKspD,gBAAgBjnC,EAAM/T,KAK/BkiE,EAAAtwE,UAAAmxE,QAAA,SAAQhvD,GACJ1Q,QAAQ0N,IAAI,WACZrf,KAAKspD,gBAAgB,KAEzBknB,EAAAtwE,UAAA2mB,SAAA,SAASxE,GACLriB,KAAKspD,gBAAgBjnC,EAAMvf,iDAxGDynD,KAAAA,aA1BrB1nC,WAAAA,CAARC,KAAAA,4EACQD,WAAAA,CAARC,KAAAA,4EAMSD,WAAAA,CAAT0D,KAAAA,kCAAeV,KAAAA,0CAG6BhD,WAAAA,CAA5Cg+B,KAAAA,UAAUU,gBAAiB,CAACT,QAAQ,6BAAyBS,gDAK9D1+B,WAAAA,CADCC,KAAAA,kHAhBQ0tD,EAAqBc,EAAAnwE,WAAA,CAVjC4hB,KAAAA,UAAU,CACPC,SAAU,gBACVC,SAAA,8VACAujC,UAAW,CACP,CACIrF,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAAgwB,KAC9B9vB,OAAO,sCA+Be+I,KAAAA,aA5BrBimB,oCCJb,SAAAe,KAAkC,OAArBA,EAAkBpwE,WAAA,CAN9BulD,KAAAA,SAAS,CACNE,QAAS,CAACC,OAAAA,aAAcJ,aAAcK,MAAAA,aACtCniD,QAAS,CAAC6rE,uBACV7pB,aAAc,CAAC6pB,uBACfhqB,UAAW,MAEF+qB,MCTPnhE,SAASC,QAOfmhE,8BAAA,WAQE,SAAAA,IANAxxE,KAAAyxE,kBAAmB,EACnBzxE,KAAA0xE,qBAAsB,EACtB1xE,KAAA2xE,0BAA2B,EAC3B3xE,KAAA4xE,oBAAqB,EACrB5xE,KAAA6xE,aAA2B,GAC3B7xE,KAAA+sD,MAAQ,GA2EV,OAvEEykB,EAAAtxE,UAAA2f,SAAA,aAGA2xD,EAAAtxE,UAAAw+C,YAAA,WAAA,IAAAt2C,EAAApI,KACEA,KAAKwM,KAAKnF,QAAQgB,aAAaC,WAAU,SAAClE,GACxCgE,EAAK0pE,kBACL,IAAMtlE,EAAOpE,EAAKoE,KAClB,GAAIA,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,UACc,yCAAjDptD,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,SACW,yCAAjDptD,EAAKjB,SAAS0J,OAAOooD,gBAAgBzD,WAEnCxxD,EAAKqpE,iBAAkB,CAC1BrpE,EAAKspE,qBAAsB,EAC3BtpE,EAAKqpE,kBAAmB,EACxB,IAAI1yD,OAAU,EACVvS,EAAKhB,MAAQgB,EAAKhB,KAAK4F,qBAAqBC,cAC9C0N,EAAavS,EAAKhB,KAAK4F,qBAAqBC,YAAY0gE,gCAE1D,IAAMC,EAAexlE,EAAKhB,KAAK4F,qBAAqBC,YAAY4gE,aAAalhE,KAC7E,GAAIgO,GAAcizD,EAAc,CAC9B,IAAME,EAAY9hE,SAAOhM,GAAGunD,QAAQ,QAAQQ,IAAI,EAAG,OAAOhyC,OAAO,cAC3Dg4D,EAAU/hE,SAAOhM,GAAGguE,MAAM,QAAQpmB,SAAS,EAAG,OAAO7xC,OAAO,cAClE/R,EAAK2kD,MAAQ38C,SAAOhM,GAAG+V,OAAO,cAO9B,IALA,IAAMk4D,EAAQ,GAIRC,EAHe,CAAC,uCAAwC,uCAC5D,uCAAwC,uCAAwC,uCAChF,uCAAwC,uCAAwC,wCAC3Cl1D,OAC9B5c,EAAI,EAAGA,GAAK,EAAGA,IACtB6xE,EAAM7tE,KAAK,CACT+R,KAAMnG,SAAOhM,GAAGunD,QAAQ,QAAQQ,IAAI3rD,EAAG,OAAO2Z,OAAO,cACrDo2C,MAAO,IAGXxxC,EAAWwzD,mBAAmB,CAC5BL,UAAWA,EACXC,QAASA,EACTK,MAAO,EACPC,cAAeT,EACfU,YAAaJ,IACZhqE,WAAU,SAACwhD,GACZ1hD,EAAKwpE,oBAAqB,EAC1BxpE,EAAKspE,qBAAsB,EAC3BW,EAAM/5D,KAAI,SAACq6D,EAAa7mE,GACtB6mE,EAAYpiB,WAAwB/6C,IAAhBs0C,EAAKh+C,GAAuBg+C,EAAKh+C,GAAOykD,MAAMqiB,UAAY,KAEhFxqE,EAAKypE,aAAeQ,KACnB,SAACrtE,GACFoD,EAAKspE,qBAAsB,EAC3BtpE,EAAKupE,0BAA2B,EAChCvpE,EAAKqpE,kBAAmB,EACxB9/D,QAAQ3M,MAAMA,WAGhBoD,EAAKqpE,kBAAmB,EACxBrpE,EAAKupE,0BAA2B,OAO1CH,EAAAtxE,UAAA4xE,gBAAA,WACE9xE,KAAK0xE,qBAAsB,EAC3B1xE,KAAK4xE,oBAAqB,EAC1B5xE,KAAK2xE,0BAA2B,EAChC3xE,KAAKyxE,kBAAmB,EACxBzxE,KAAK6xE,aAAe,GACpB7xE,KAAK+sD,MAAQ,IA/ENlqC,WAAAA,CAARC,KAAAA,iCAAc7W,sCADJulE,EAA6BrwE,WAAA,CALzC4hB,KAAAA,UAAU,CACTC,SAAU,wBACVC,SAAA,u8CAGWuuD,GAAb,GCNMqB,MAAQ,KACRC,QAAU,KAGhBC,uBAAA,WAEI,SAAAA,KA+GJ,OA9GWA,EAAA7yE,UAAAm0D,qBAAP,SAA4BvxD,KAGrBiwE,EAAA7yE,UAAA+zD,cAAP,SAAqBF,KAGdgf,EAAA7yE,UAAA6pD,WAAP,SAAkBD,KAGXipB,EAAA7yE,UAAAkqD,UAAP,SAAiBxC,KAIVmrB,EAAA7yE,UAAA8yE,+BAAP,SAAuCC,EAAoB7vD,GAA3D,IACQzf,EADRyE,EAAApI,KAoCI,OAlCIojB,EAAOqyC,OACP98C,OAAAA,QAAUyK,EAAOqyC,OAAO,SAACC,GACvB,IAAM7Y,EAAIz0C,EAAK4qE,+BAA+BC,EAAYvd,GACtD7Y,IAAKl5C,EAAQk5C,MAGnBz5B,EAAO0yC,UACPn9C,OAAAA,QAAUyK,EAAO0yC,UAAU,SAACj0C,GACxB,IAAMg7B,EAAIz0C,EAAK4qE,+BAA+BC,EAAYpxD,GACtDg7B,IAAKl5C,EAAQk5C,MAIrBz5B,EAAO5E,WACP7F,OAAAA,QAAUyK,EAAO5E,WAAW,SAACjT,GACxB,GAAIA,EAASiT,UAAW,CACrB,IAAMq+B,EAAIz0C,EAAK4qE,+BAA+BC,EAAY1nE,GACtDsxC,IAAKl5C,EAAQk5C,QAEbtxC,EAAS8xD,gBAAgBvC,QAC7BniD,OAAAA,QAAUpN,EAAS8xD,gBAAgBvC,SAAS,SAACoY,GACrCA,EAAOtZ,UAAYqZ,IACnBtvE,EAAQuvE,EAAOvvE,UAGhB4H,EAAS8xD,gBAAgBnE,kBAChCvgD,OAAAA,QAAUpN,EAAS8xD,gBAAgBnE,kBAAkB,SAACgU,GAC9CA,EAAMtT,UAAYqZ,IAActvE,EAAQupE,EAAMvpE,aAO3DA,GAKJovE,EAAA7yE,UAAAizE,UAAP,SAAiB3mE,GACb,IAAI4mE,GAAW,EAIf,OAHI5mE,EAAKo3D,eACLwP,GAAW,GAERA,GAGJL,EAAA7yE,UAAAmzE,kBAAP,SAAyB7mE,EAAW4mE,GAApC,IAAAhrE,EAAApI,KACUszE,EAAYF,GAAY,GAC9B,GAAoC,SAAhC5mE,EAAKjB,SAAS2J,cACdyD,OAAAA,QAAUnM,EAAKC,UAAU,SAACgiE,GACtBrmE,EAAKirE,kBAAkB5E,EAAW6E,UAEnC,CAAA,GAAoC,YAAhC9mE,EAAKjB,SAAS2J,cAShB,OAAOlV,KAAKmzE,UAAU3mE,GAR3BmM,OAAAA,QAAUnM,EAAKC,UAAU,SAACgiE,GACmB,UAArCA,EAAUljE,SAAS2J,cACpByD,OAAAA,QAAU81D,EAAUhiE,UAAU,SAAC2B,GAC3B,IAAMmlE,EAAMnrE,EAAKirE,kBAAkBjlE,EAAOklE,GACtCC,GAAOD,EAAU9uE,KAAK+uE,MAEtBnrE,EAAK+qE,UAAU1E,IAAc6E,EAAU9uE,MAAK,MAI/D,OAAI8uE,EAAU3yE,OAAS,GAIpBoyE,EAAA7yE,UAAAszE,OAAP,SAAczpE,GACV,QAAIsM,KAAK86C,MAAMpnD,IAMZgpE,EAAA7yE,UAAAuzE,YAAP,SAAmBC,GACf,IAAMpuE,EAAI,IAAI+Q,KAAKq9D,GAGb9nB,EAAOtmD,EAAEquE,cACT/mB,EAHS,CAAC,MAAO,MAAO,MAAO,MAAO,MAC5B,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAErCtnD,EAAEsuE,YACjBr9D,EAAOjR,EAAEorD,UACTmjB,EAAOvuE,EAAEwuE,WACTr9D,EAAMnR,EAAEyuE,aACFzuE,EAAE0uE,aAQd,OALa,IAATH,GAAsB,IAARp9D,EACPF,EAAO,IAAMq2C,EAAQ,IAAMhB,EAE3Br1C,EAAO,IAAMq2C,EAAQ,IAAMhB,EAAO,IAAMioB,EAAO,IAAMp9D,GALjDo9D,EAAO,GAAK,KAAO,MAK6C,UA5G1Ed,EAAsB5xE,WAAA,CADlC2F,KAAAA,iDACYisE,GAAb,uCCgCI,SAAAkB,EACYC,EACA7iE,GADArR,KAAAk0E,uBAAAA,EACAl0E,KAAAqR,YAAAA,EA2FhB,OA9Ga7R,OAAAqC,eAAIoyE,EAAA/zE,UAAA,OAAI,KAAR,SAAS0N,GACd5N,KAAK4N,SAAWA,mCAGXpO,OAAAqC,eAAWoyE,EAAA/zE,UAAA,SAAM,KAAjB,SAAkBkjB,GACvBpjB,KAAKm0E,QAAU/wD,mCAGV5jB,OAAAqC,eAAWoyE,EAAA/zE,UAAA,YAAS,KAApB,SAAqBk0E,GAC1Bp0E,KAAKo0E,IAAMA,mCAEN50E,OAAAqC,eAAIoyE,EAAA/zE,UAAA,OAAI,KAAR,SAASsL,GACdxL,KAAK4N,SAAWpC,EAAKoC,SACrB5N,KAAKm0E,QAAU3oE,EAAK4X,OACpBzR,QAAQ0N,IAAIrf,KAAK+nE,iBAAiB/nE,KAAKwoE,SAASxoE,KAAK4N,6CAOzDqmE,EAAA/zE,UAAA6nE,iBAAA,SAAiBtS,WAEPuS,EAAS,OACf,IAAmB,IAAAC,EAAAlqB,SAAA0X,GAAKyS,EAAAD,EAAAjlE,QAAAklE,EAAA/kE,KAAA+kE,EAAAD,EAAAjlE,OAAE,CAArB,IAAM0yD,EAAIwS,EAAAplE,MACXklE,EAAOxjE,KAAKkxD,EAAKA,wGAErB,MALe,GAKDxwD,OAAOrE,MAAM,GAAImnE,IAE5BiM,EAAA/zE,UAAA2f,SAAP,WACQ7f,KAAK4N,SAGL5N,KAAK4N,UAAY5N,KAAK4N,SAASrC,SAAS0J,QACI,SAAzCjV,KAAK4N,SAASrC,SAAS2J,cAC1BlV,KAAKq0E,eACDr0E,KAAKqR,YAAYA,YAAYrR,KAAK4N,SAASrC,SAASwT,YACjD/e,KAAK4N,UAAY5N,KAAK4N,SAASrC,SAAS0J,QACH,kBAAzCjV,KAAK4N,SAASrC,SAAS2J,cAC1BlV,KAAKs0E,iBACDt0E,KAAKqR,YAAYA,YAAYrR,KAAK4N,SAASrC,SAASwT,YAExD/e,KAAKu0E,iBAAmBv0E,KAAKk0E,wBAI9BD,EAAA/zE,UAAAmzE,kBAAP,SAAyB7mE,GAErB,OADkBxM,KAAKk0E,uBAAuBb,kBAAkB7mE,IAI7DynE,EAAA/zE,UAAAs0E,iBAAP,SAAwBhoE,GAEpB,OADiBxM,KAAKk0E,uBAAuBf,UAAU3mE,IAIpDynE,EAAA/zE,UAAAu0E,cAAP,SAAqBC,GACjB,OAAoC,IAAhCA,EAAc1zE,QAAQ,MAG9BizE,EAAA/zE,UAAAsoE,SAAA,SAAS3jE,EAAGsI,GACR,IAAMqR,EAAY,GAClB,GAAI3Z,EAAE4H,SAAU,CACZ,GAAI5H,EAAE4H,oBAAoB9M,MAEtB,OADiBK,KAAKqoE,eAAexjE,EAAE4H,UAG3C,GAAI5H,EAAE4H,oBAAoBjN,QACtB,IAAK,IAAM8B,KAAOuD,EAAE4H,SAChB,GAAI5H,EAAE4H,SAAS5M,eAAeyB,GAC1B,OAAQuD,EAAE4H,SAASnL,GAAKiK,SAAS2J,eAC7B,IAAK,OACD,IAAMwgD,EAAO11D,KAAKwoE,SAAS3jE,EAAE4H,SAASnL,IACtCkd,EAAUha,KAAK,CAAEkxD,KAAMA,IACvB,MACJ,IAAK,UACD,IAAM7zC,EAAU7hB,KAAKwoE,SAAS3jE,EAAE4H,SAASnL,IACzCkd,EAAUha,KAAK,CAAEqd,QAASA,IAC1B,MACJ,IAAK,QACD,IAAMgqD,EAAK7rE,KAAKwoE,SAAS3jE,EAAE4H,SAASnL,IACpCkd,EAAUha,KAAK,CAAEgI,KAAM3H,EAAE4H,SAASnL,GAAMiK,SAAU1G,EAAE4H,SAASnL,GAAKiK,SAAUywD,aAAc6P,IAC1F,MACJ,IAAK,YACD,IAAMC,EAAM9rE,KAAKqoE,eAAexjE,EAAE4H,SAASnL,GAAKmL,UAChD+R,EAAUha,KAAK,CAAEgI,KAAM3H,EAAE4H,SAASnL,GAAMiK,SAAU1G,EAAE4H,SAASnL,GAAKiK,SAAUywD,aAAc8P,IAC1F,MACJ,QACIttD,EAAUha,KAAKK,EAAE4H,SAASnL,UAO1CqQ,QAAQ0N,IAAI,cAAexa,GAInC,OAAO2Z,GAGXy1D,EAAA/zE,UAAAmoE,eAAA,SAAep5D,WACLuwD,EAAW,OACjB,IAAmB,IAAA2H,EAAAppB,SAAA9uC,GAAKm4D,EAAAD,EAAAnkE,QAAAokE,EAAAjkE,KAAAikE,EAAAD,EAAAnkE,OAAE,CAArB,IAAMwJ,EAAI46D,EAAAtkE,MACX08D,EAASh7D,KAAK,CAAE+G,SAAUiB,EAAKjB,SAAUywD,aAAch8D,KAAKwoE,SAASh8D,uGAEzE,OAAOgzD,4CAzFyBuT,8BACX9zD,eArBhB4D,WAAAA,CAARC,KAAAA,iCAA4BxO,iDACpBuO,WAAAA,CAARC,KAAAA,iCAAgCmxD,0CACxBpxD,WAAAA,CAARC,KAAAA,iCAA2BxX,0CAAAA,qCAInBuX,WAAAA,CAARC,KAAAA,8GAIQD,WAAAA,CAARC,KAAAA,iHAGQD,WAAAA,CAARC,KAAAA,4GApBQmxD,EAAwB9yE,WAAA,CALpC4hB,KAAAA,UAAU,CACPC,SAAU,mBACVC,SAAA,46JA8BoC8vD,uBACX9zD,eA5BhBg1D,MCAP7jE,SAASC,QAMfskE,0BAAA,WAYE,SAAAA,EACUT,EACAU,EACAvjE,GAFArR,KAAAk0E,uBAAAA,EACAl0E,KAAA40E,gBAAAA,EACA50E,KAAAqR,YAAAA,EAVHrR,KAAA60E,kBAAyB,CAC9Br2D,UAAW,CACTs2D,MAAO,IAETha,QAAS,WASX6Z,EAAAz0E,UAAA60E,SAAA,SAAStf,EAAYjqD,EAAYwpE,EAA6BC,eACtDC,EAAU,GACZC,EAAkB,OAEtB,IAAmB,IAAAlN,EAAAlqB,SAAA0X,GAAKyS,EAAAD,EAAAjlE,QAAAklE,EAAA/kE,KAAA+kE,EAAAD,EAAAjlE,OAAE,CAArB,IAAM0yD,EAAIwS,EAAAplE,MACb,GAAIkyE,EACFG,EAAkBA,EAAgBjwE,OAAOlF,KAAKo1E,YAAY1f,EAAKA,KAAMlqD,GAAM,EAAOypE,aAElF,IAAuB,IAAAj3B,GAAAq3B,OAAA,EAAAt3B,SAAAvyC,EAAKoC,SAASrC,SAASiT,YAAS4pD,EAAApqB,EAAAh7C,QAAAolE,EAAAjlE,KAAAilE,EAAApqB,EAAAh7C,OAAE,CAApD,IAAMuI,EAAQ68D,EAAAtlE,MACb4yD,EAAK/xD,QAAU6H,EAAKoC,SAASnB,SAASlB,EAASjK,KAAKiK,SAAS5H,OAC/D3D,KAAKk0E,uBAAuBb,kBAAkB7nE,EAAKoC,SAASnB,SAASlB,EAASjK,OAC9E4zE,EAAQ1wE,KAAK,CACXge,MAAO,eACP8yD,MAAO,CACLC,OAAQ,CAAC,KACTC,WAAY,EACZC,mBAAoB,EACpBnyE,KAAM,CACJ,CAAC,CAAE8iB,KAAMsvC,EAAK/xD,MAAO6e,MAAO,gBAC5B,CACE,CACEA,MAAO,eACP8yD,MAAO,CACLC,OAAQ,CAAC,KACTjyE,KAAMtD,KAAKo1E,YAAY1f,EAAKA,KAAMlqD,GAAM,EAAMypE,IAEhDS,OAAQ,YACRC,OAAQ,CAAC,EAAG,EAAG,EAAG,OAK1BD,OAAQ,CACNE,WAAY,SAASp1E,EAAGgM,GACtB,OAAc,IAANhM,GAAiBgM,EAAK8oE,MAAMhyE,KAAK3C,OAAU,IAErDk1E,WAAY,SAASr1E,EAAGgM,GACtB,OAAc,IAANhM,GAAiBgM,EAAK8oE,MAAMC,OAAO50E,OAAU,IAEvDm1E,WAAY,SAASt1E,EAAGgM,GACtB,OAAc,IAANhM,GAAiBgM,EAAK8oE,MAAMhyE,KAAK3C,OAAU,QAErDo1E,WAAY,SAASv1E,EAAGgM,GACtB,OAAc,IAANhM,GAAiBgM,EAAK8oE,MAAMhyE,KAAK3C,OAAU,gNAQjE,OAAOq0E,EAAoBG,EAAkBD,GAG/CP,EAAAz0E,UAAAk1E,YAAA,SAAYtf,EAAetqD,EAAY7I,EAAcsyE,eAArD7sE,EAAApI,KACQk1E,EAAU,GACVc,EAAmB,GACrBx3D,EAAoC,GAExCs3C,EAASx9C,KAAI,SAAA/X,GACP6H,EAAK8rE,uBAAuBb,kBAAkB9yE,EAAEiM,OAClDwpE,EAAiBxxE,KAAKjE,UAI1B,IAAsB,IAAA01E,EAAAl4B,SAAAi4B,GAAgBE,EAAAD,EAAAjzE,QAAAkzE,EAAA/yE,KAAA+yE,EAAAD,EAAAjzE,OAAE,CAAnC,IAAM6e,EAAOq0D,EAAApzE,MAChB0b,EAAYA,EAAUtZ,OAAOlF,KAAKm2E,qBAAqBt0D,EAAQA,4GAGjE,GAAIlf,GAAWsyE,EAAW,KACxB,IAAsB,IAAAmB,EAAAr4B,SAAAi4B,GAAgBK,EAAAD,EAAApzE,QAAAqzE,EAAAlzE,KAAAkzE,EAAAD,EAAApzE,OAAE,CAA7B6e,EAAOw0D,EAAAvzE,MAChBoyE,EAAQ1wE,KAAK,CACX,CACE8wE,MAAO,CACLC,OAAQ,CAAC,KACTjyE,KAAM,CACJ,CAAC,CAAE8iB,KAAMvE,EAAQle,MAAO6e,MAAO,mBAC/B,CAAExiB,KAAKs2E,eAAez0D,EAAQA,QAASozD,EAAWzpE,MAGtDkqE,OAAQ,iHAId,OAAOR,EAEP,OAAO12D,GAIHm2D,EAAAz0E,UAAAq2E,qBAAR,SAA6BC,EAAqBh4D,EAAgBhS,GAC5DgqE,GACFh4D,EAAUs2D,MAAMtwE,KAAK,CACnB4hB,KAAM,EACD,EAAS5Z,EAAKjB,SAAS5H,MAAQ,mBAChC,EAAU6I,EAAKjB,SAAS5H,MAAM3C,QAAQ,KAAO,EAAI,GAAK,IAAO,IAAE,IAEjE,CAAEolB,KAAM,GAAGowD,EAAkBC,MAAM,IAClCj0D,MAAO,aAMhBmyD,EAAAz0E,UAAAi2E,qBAAA,SAAqBt0D,WACbrD,EAAoC,GAC1Cxe,KAAK60E,kBAAkBr2D,UAAUs2D,MAAQ,OAEzC,IAAmB,IAAA4B,EAAA34B,SAAAl8B,GAAO80D,EAAAD,EAAA1zE,QAAA2zE,EAAAxzE,KAAAwzE,EAAAD,EAAA1zE,OAAE,CAAvB,IAAMwJ,EAAImqE,EAAA7zE,MACuB,kBAAhC0J,EAAKjB,SAAS2J,gBAChBlV,KAAKs0E,iBAAmBt0E,KAAKqR,YAAYA,YAAY7E,EAAKjB,SAASwT,YACxC,KAAvBvS,EAAKnF,QAAQvE,OACX9C,KAAKs0E,kBACP91D,EAAUha,KAAKxE,KAAKs0E,iBAAiBjgB,qBAAqB7nD,EAAKnF,QAAQvE,2GAK/E,OAAO0b,GAITm2D,EAAAz0E,UAAAo2E,eAAA,SAAez0D,EAAcozD,EAAkBzpE,WACvCgT,EAAY,CAChBs2D,MAAO,IAGL0B,EAAiB,cAEVhqE,WACT,OAAQA,EAAKjB,SAAS2J,eACpB,IAAK,QACC1I,EAAKwvD,cACPx9C,EAAUs2D,MAAMtwE,KAAKuK,EAAKunE,eAAe9pE,EAAKwvD,aAAciZ,EAAWzpE,IAEzE,MAEF,IAAK,YACH,GAAIgB,EAAKC,SAAU,CACjB,IAAMuvD,EAAe,GACf94D,EAAS1D,OAAOkS,KAAKlF,EAAKC,UAAU6L,KAAI,SAAChX,GAAQ,OAAAkL,EAAKC,SAASnL,MAEjE4B,IACF84D,EAAax3D,KAAKtB,GAClBsb,EAAUs2D,MAAMtwE,KAAKuK,EAAKunE,eAAeta,EAAa,GAAIiZ,EAAWzpE,KAGzE,MAEF,IAAK,YACCgB,EAAKwvD,cACPx9C,EAAUs2D,MAAMtwE,KAAKuK,EAAKunE,eAAe9pE,EAAKwvD,aAAciZ,EAAWzpE,IAEzE,MAEF,IAAK,gBACHuD,EAAKulE,iBAAmBvlE,EAAKsC,YAAYA,YAAY7E,EAAKjB,SAASwT,gBACnE,IAAkB,IAAA63D,GAAAC,OAAA,EAAA94B,SAAAk3B,IAAS6B,EAAAF,EAAA5zE,QAAA8zE,EAAA3zE,KAAA2zE,EAAAF,EAAA5zE,OAAE,CAAxB,IAAMuwE,EAAGuD,EAAAh0E,MACRywE,EAAIzwE,QAAU0J,EAAKnF,QAAQvE,OAC7BiM,EAAKwnE,qBAAqBhD,EAAI5vE,MAAO6a,EAAWhS,qGAGpD,MAEF,QACE,IAAM0mE,EAAS1mE,EAAKnF,QAAQvE,MACxBowE,IACFsD,EAAiBznE,EAAKgoE,aAAa7D,EAAQ1nE,GAC3CuD,EAAKwnE,qBAAqBC,EAAgBh4D,EAAWhS,iBAvC7D,IAAmB,IAAAwqE,EAAAj5B,SAAAl8B,GAAOo1D,EAAAD,EAAAh0E,QAAAi0E,EAAA9zE,KAAA8zE,EAAAD,EAAAh0E,OAAA,GAAXi0E,EAAAn0E,yGA4Cf,OAAO0b,GAGTm2D,EAAAz0E,UAAA62E,aAAA,SAAa7D,EAAa1nE,EAAY0rE,GAAtC,IAAA9uE,EAAApI,KACE,GAAe,KAAXkzE,EAAe,CACjB,GAAIlzE,KAAKm3E,OAAOjE,GAAS,CACvB,IAAMnpE,EAAM/J,KAAKk0E,uBAAuBlB,+BAA+BE,EAAQ1nE,EAAK4X,QACpF,OAAK8zD,EAOIntE,EANHA,EACKA,EAAI+yC,cAEJo2B,EAKN,GAAI5tD,OAAAA,QAAU4tD,GAAS,CAC5B,IAAMkE,EAAM,GAIZ,OAHAz+D,OAAAA,QAAUu6D,GAAQ,SAAAmE,GAChBD,EAAI5yE,KAAK4D,EAAK2uE,aAAaM,EAAM7rE,GAAM,OAElC4rE,EAAI9gE,WACN,GAAItW,KAAKwzE,OAAON,GACrB,OAGSlzE,KAAKk0E,uBAAuBT,YAAYP,GAE5C,GAAsB,iBAAXA,EAAqB,CACrC,IAAM1gE,EAAS,GACTtP,EAAS1D,OAAOkS,KAAKwhE,GAAQ56D,KAAI,SAAChX,GAAQ,MAAA,CAACA,EAAK4xE,EAAO5xE,OAG7D,OADAkR,EAAOhO,KAAKtB,GACLsP,EAER,OAAO0gE,IAKZyB,EAAAz0E,UAAAo3E,sBAAA,SAAsB9rE,GAAtB,IAAApD,EAAApI,KACQu3E,EAAiB,IAAIhwB,KAAAA,gBAAqB,IAC1CiwB,EAAgBx3E,KAAK+0E,SAAU/0E,KAAK40E,gBAAgBpM,SAASh9D,EAAKoC,UAAYpC,GAAM,GA0E1F,OAxEAisE,KAAAA,cAAcD,GAAelvE,WAAU,SAAA2sE,GACrC,GAAIA,EAAW,CACb,IAAMyC,EAAgB,CACpBC,SAAU,KACVzC,QAAS9sE,EAAK2sE,SAAS3sE,EAAKwsE,gBAAgBpM,SAASh9D,EAAKoC,UAAWpC,GAAM,EAAOypE,GAClF2C,OAAQ,CACN9c,QAAS,CACP+c,SAAU,GAEZC,OAAQ,CACND,SAAU,EACVpB,MAAM,EACNd,OAAQ,CAAC,GAAI,GAAI,GAAI,IAEvBoC,WAAY,CACVpC,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpBqC,YAAa,CACXp4B,MAAO,WAETq4B,aAAc,CACZr4B,MAAO,MACPi4B,SAAU,EACVpB,MAAM,EACNd,OAAQ,CAAC,GAAI,EAAG,EAAG,IAErBuC,OAAQ,CACNC,UAAW,SACXN,SAAU,EACVpB,MAAM,GAER2B,OAAQ,CACNP,SAAU,EACVpB,MAAM,EACNd,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpB0C,WAAY,CACVz4B,MAAO,UACPi4B,SAAU,GAEZS,aAAc,CACZT,SAAU,GACVlC,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpB4C,YAAa,CACXC,UAAW,UACXtyB,MAAO,CAAC,QACRuyB,YAAa,OACbZ,SAAU,EACVpB,MAAM,EACNd,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpB+C,eAAgB,CACdF,UAAW,UACXtyB,MAAO,CAAC,QACR2xB,SAAU,EACVj4B,MAAO,QACP+1B,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpBgD,UAAW,CACTlC,MAAM,EACN72B,MAAO,YAGXg5B,aAAc,CACZf,SAAU,IAGdN,EAAev0E,KAAK00E,OAIjBH,GAGT5C,EAAAz0E,UAAA24E,WAAA,SAAWrtE,GAAX,IAEM8vD,EAFNlzD,EAAApI,KACQ84E,EAAMC,QAEZD,EAAIE,IAAMC,QAAAA,IAENztE,EAAK4F,qBAAqBC,YAAY6N,eACxCo8C,EAAU9vD,EAAK4F,qBAAqBC,YAAY6N,aAA0B,aAG5Elf,KAAKs3E,sBAAsB9rE,GAAMlD,WAAU,SAAAovE,GACzC,IAAM5iB,OAAAA,QAAU4iB,GAAiB,CAC/B,QAAuB,IAAZpc,EAAyB,CAClC,IAAMwc,EAAS,GAEXxc,EAAQx1C,MACVgyD,EAAOtzE,KAAK,CACV4hB,KAAM,CACJ,CAAEA,KAAM,SAAU5D,MAAO,eACzB,CAAE4D,KAAM,GAAGhe,EAAK8wE,SAAS5d,EAAQx1C,QAEnCtD,MAAO,eAIP84C,EAAQ6d,KACVrB,EAAOtzE,KAAK,CACV4hB,KAAM,CACJ,CAAEA,KAAM,OAAQ5D,MAAO,eACvB,CAAE4D,KAAM,GAAGk1C,EAAQ6d,MAErB32D,MAAO,eAIP84C,EAAQ8d,WACVtB,EAAOtzE,KAAK,CACV4hB,KAAM,CACJ,CAAEA,KAAM,QAAS5D,MAAO,eACxB,CAAE4D,KAAShW,SAAOkrD,EAAQ8d,WAAWj/D,OAAO,KAAI,KAAKmhD,EAAQ+d,IAAG,SAElE72D,MAAO,eAIP84C,EAAQge,KACVxB,EAAOtzE,KAAK,CACV4hB,KAAM,CACJ,CAAEA,KAAM,QAAS5D,MAAO,eACxB,CAAE4D,KAAM,GAAGk1C,EAAQge,MAErB92D,MAAO,eAIP84C,EAAQie,KACVzB,EAAOtzE,KAAK,CACV4hB,KAAM,CACJ,CAAEA,KAAM,YAAa5D,MAAO,eAC5B,CAAE4D,KAAM,GAAGk1C,EAAQie,MAErB/2D,MAAO,eAIXk1D,EAAcU,OAAS,CACrB51D,MAAO,SACP8yD,MAAO,CACLhyE,KAAM,CAAEw0E,IAEVpC,OAAQ,aAIZgC,EAAcQ,OAAS,SAACsB,EAAaC,GACnC,MAAQ,CACNj3D,MAAO,SACP+yD,OAAQ,CAAC,IAAK,QACdD,MAAO,CACLhyE,KAAM,CACJ,CACE,CACE8iB,KAAM,8IACgE5D,MAAO,gBAC5E,IAEL,CACE,CAAE4D,KAAM,iBAAgB,IAAI/P,MAAOqjE,cAAiBl3D,MAAO,aAC3D,CAAE4D,KAASozD,EAAYljE,WAAU,OAAOmjE,EAAaj3D,MAAO,iBAIlEkzD,OAAQ,cAIZ,IAAMiE,EAAM3oE,OAAO+zC,KAAK,GAAI,UAC5B+zB,EAAIc,UAAUlC,GAAe3yB,KAAK,GAAI40B,OAEvC,SAAC30E,GACF2M,QAAQ0N,IAAI,UAAWra,OAI3B2vE,EAAAz0E,UAAAszE,OAAA,SAAOzpE,GACL,OAAOqG,SAAOrG,EAAKqG,SAAOypE,UAAU,GAAMC,WAG5CnF,EAAAz0E,UAAAi3E,OAAA,SAAOr0E,GACL,OAAyB,KAAjBA,EAAMnC,SAAyC,IAAxBmC,EAAM9B,QAAQ,OAAuC,IAAxB8B,EAAM9B,QAAQ,MAG5E2zE,EAAAz0E,UAAAg5E,SAAA,SAASa,GACP,OAAOA,EAAIhhE,QAAQ,UAAU,SAAAxY,GAAK,OAAAA,EAAEy5E,OAAO,GAAGl9B,cAAgBv8C,EAAE05E,OAAO,GAAGC,2DAzZ1CnH,8BACPrM,uBACJznD,wNAfZ01D,EAAyBxzE,WAAA,CAJrC2F,KAAAA,WAAW,CACVqzE,WAAY,yCAgBsBpH,uBACPrM,gBACJznD,eAfZ01D,GAAb,0CCCI,SAAAyF,EACYC,EACAC,GADAt6E,KAAAq6E,WAAAA,EACAr6E,KAAAs6E,0BAAAA,EAQhB,OAjBa96E,OAAAqC,eAAWu4E,EAAAl6E,UAAA,OAAI,KAAf,SAAgBsL,GACrBxL,KAAKu6E,MAAQ/uE,mCAERhM,OAAAqC,eAAWu4E,EAAAl6E,UAAA,YAAS,KAApB,SAAqBk0E,GAC1Bp0E,KAAKw6E,KAAOpG,mCAOhBgG,EAAAl6E,UAAA2f,SAAA,aAGAu6D,EAAAl6E,UAAA24E,WAAA,WACI74E,KAAKs6E,0BAA0BzB,WAAW74E,KAAKu6E,iDAP3B5L,wBACegG,6BAT9B9xD,WAAAA,CAARC,KAAAA,4GAGQD,WAAAA,CAARC,KAAAA,iHAPQs3D,EAA2Bj5E,WAAA,CALvC4hB,KAAAA,UAAU,CACPC,SAAU,qBACVC,SAAA,2YAewB0rD,iBACegG,6BAb9ByF,0CCYT,SAAAK,IAJOz6E,KAAA06E,WAAkB,GAiD3B,OA3DWl7E,OAAAqC,eAAW44E,EAAAv6E,UAAA,SAAM,KAAjB,SAAkBkjB,GACzBpjB,KAAKm0E,QAAU/wD,mCAER5jB,OAAAqC,eAAW44E,EAAAv6E,UAAA,QAAK,KAAhB,SAAiB4C,GACxB9C,KAAKyiD,OAAS3/C,mCAEPtD,OAAAqC,eAAW44E,EAAAv6E,UAAA,aAAU,KAArB,SAAsB6e,GAC7B/e,KAAKupD,YAAcxqC,mCASrB07D,EAAAv6E,UAAA2f,SAAA,WACE7f,KAAKklD,WAAWllD,KAAKyiD,SAEhBg4B,EAAAv6E,UAAAi3E,OAAP,SAAcr0E,GACZ,OAAqB,KAAjBA,EAAMnC,SAAyC,IAAxBmC,EAAM9B,QAAQ,OAAuC,IAAxB8B,EAAM9B,QAAQ,MAQjEy5E,EAAAv6E,UAAAglD,WAAP,SAAkB9gD,EAAQ8yE,GAA1B,IAAA9uE,EAAApI,KACE,GAAIoE,IAAMpE,KAAK06E,WACX,GAAI16E,KAAKm3E,OAAO/yE,GAAI,CAClB,GAAK8yE,EAII,OAAOl3E,KAAKupD,YAAYypB,+BAA+B5uE,EAAGpE,KAAKm0E,SAHtE,IAAMpqE,EACN/J,KAAKupD,YAAYypB,+BAA+B5uE,EAAGpE,KAAKm0E,SAC7Cn0E,KAAK06E,WAAZ3wE,EAAyBA,EAAI+yC,cAA0C14C,OAExE,GAAIkhB,OAAAA,QAAUlhB,GAAI,CACvB,IAAMgzE,EAAM,GACZz+D,OAAAA,QAAUvU,GAAG,SAACu2E,GACZvD,EAAI5yE,KAAK4D,EAAK88C,WAAWy1B,GAAI,OAE/B36E,KAAK06E,WAAatD,OACb,GAAIp3E,KAAKwzE,OAAOpvE,GAAI,CACvB,GAAK8yE,EACD,OAAQl3E,KAAKupD,YAAYkqB,YAAYrvE,GADpBpE,KAAK06E,WAAa16E,KAAKupD,YAAYkqB,YAAYrvE,OAGjE,CACH,GAAK8yE,EACH,OAAO9yE,EADYpE,KAAK06E,WAAat2E,IAQ1Cq2E,EAAAv6E,UAAAszE,OAAP,SAAcuG,GACZ,OAAO/5E,KAAKupD,YAAYiqB,OAAOuG,KAASa,OAAAA,SAAWb,IAxD5Cl3D,WAAAA,CAARC,KAAAA,8GAGQD,WAAAA,CAARC,KAAAA,6GAGQD,WAAAA,CAARC,KAAAA,kHAPQ23D,EAAwBt5E,WAAA,CALpC4hB,KAAAA,UAAU,CACPC,SAAU,mBAEVC,SAAA,8MAESw3D,MCFPI,KAAO,qBAoBbC,qBAAA,WAiBI,SAAAA,EAAoBC,GAAA/6E,KAAA+6E,iBAAAA,EAfb/6E,KAAAmpD,SAAW,KAEXnpD,KAAAg7E,cAAe,EAWdh7E,KAAAi7E,kBAAgCJ,KAChC76E,KAAAk7E,iBAAqCL,WAiEjD,SAjFaC,EAOTt7E,OAAAqC,eAAWi5E,EAAA56E,UAAA,aAAU,KAArB,WACI,OAAOF,KAAKupD,iBAEhB,SAAsBnlD,GAClBpE,KAAKupD,YAAcnlD,mCAOvB02E,EAAA56E,UAAA2f,SAAA,aAEArgB,OAAAqC,eAAIi5E,EAAA56E,UAAA,QAAK,KAAT,WACE,OAAOF,KAAKmpD,cAId,SAAU/kD,GACJA,IAAMpE,KAAKmpD,WACbnpD,KAAKmpD,SAAW/kD,oCAKb02E,EAAA56E,UAAAglD,WAAP,SAAkB9gD,GACZA,IAAMpE,KAAKmpD,WACXnpD,KAAKmpD,SAAW/kD,EACjBpE,KAAKwpD,kBAGHsxB,EAAA56E,UAAAspD,cAAP,YAEwC,IAA9BxpD,KAAKmpD,SAASmB,OADX,WAELtqD,KAAKg7E,cAAe,IAKrBF,EAAA56E,UAAAilD,iBAAP,SAAwBC,GACtBplD,KAAKk7E,iBAAmB91B,GAInB01B,EAAA56E,UAAAmlD,kBAAP,SAAyBD,GACvBplD,KAAKi7E,kBAAoB71B,GAGpB01B,EAAA56E,UAAAi7E,OAAP,WACEn7E,KAAKi7E,qBAGAH,EAAA56E,UAAAgjD,SAAP,SAAgB7gC,KAiBXy4D,EAAA56E,UAAAk7E,OAAP,WACIp7E,KAAK+e,WAAWqrC,UAAUpqD,KAAKmpD,SAAU,OAAO7gD,WAAU,SAACuhD,GACzD74C,OAAO+zC,KAAK8E,EAAKQ,sCAAwC,uDA7DvB0oB,0BAhB7BlwD,WAAAA,CAARC,KAAAA,uEAMDD,WAAAA,CADCC,KAAAA,kHANQg4D,EAAoBO,EAAAl6E,WAAA,CAlBhC4hB,KAAAA,UAAU,CACPC,SAAU,eAEVC,SAAU,iUAOVujC,UAAW,CACT,CACErF,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAA+5B,KAC9B75B,OAAO,YAZF,sCAiC6BuxB,0BAjB7B+H,GAAb,GCrBMD,OAAO,yBAkBbS,sBAAA,WAeI,SAAAA,IAbOt7E,KAAA06E,WAAa,KAWZ16E,KAAAi7E,kBAAgCJ,OAChC76E,KAAAk7E,iBAAqCL,aA2C/C,SAzDWS,EAKT97E,OAAAqC,eAAWy5E,EAAAp7E,UAAA,aAAU,KAArB,WACI,OAAOF,KAAKupD,iBAEhB,SAAsBnlD,GAClBpE,KAAKupD,YAAcnlD,mCAQvB5E,OAAAqC,eAAIy5E,EAAAp7E,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK06E,gBAId,SAAUt2E,GACJA,IAAMpE,KAAK06E,aACb16E,KAAK06E,WAAat2E,oCAKfk3E,EAAAp7E,UAAAglD,WAAP,SAAkB9gD,GAAlB,IAAAgE,EAAApI,KACMoE,IAAMpE,KAAK06E,aACT16E,KAAKupD,YACPvpD,KAAKupD,YAAY8K,qBAAqBjwD,GAAGkE,WAAU,SAACirE,GAClDnrE,EAAKsyE,WAAanH,EAAI5vE,SAGxB3D,KAAK06E,WAAat2E,IAMjBk3E,EAAAp7E,UAAAilD,iBAAP,SAAwBC,GACtBplD,KAAKk7E,iBAAmB91B,GAInBk2B,EAAAp7E,UAAAmlD,kBAAP,SAAyBD,GACvBplD,KAAKi7E,kBAAoB71B,GAGpBk2B,EAAAp7E,UAAAi7E,OAAP,WACEn7E,KAAKi7E,qBAGAK,EAAAp7E,UAAAgjD,SAAP,SAAgB7gC,KAtDPQ,WAAAA,CAARC,KAAAA,uEAIDD,WAAAA,CADCC,KAAAA,kHAJQw4D,EAAqBC,EAAAp6E,WAAA,CAhBjC4hB,KAAAA,UAAU,CACPC,SAAU,gBAEVC,SAAU,uEAKVujC,UAAW,CACT,CACErF,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAAi6B,KAC9B/5B,OAAO,0CAIF85B,GAAb,oCCYA,SAAAE,KAAoC,OAAvBA,EAAqBr6E,WAAA,CAxBjCulD,KAAAA,SAAS,CACNC,aAAc,CACVstB,yBACAmG,4BACAK,yBACAK,qBACAQ,uBAEJ10B,QAAS,CACLE,MAAAA,YACAqM,MAAAA,oBACAtM,OAAAA,aAEAkC,cAEJvC,UAAW,CACPusB,uBACA4B,2BAEJhwE,QAAS,CACLy1E,gCAIKoB,0CC9Bb,SAAAC,IAmBSz7E,KAAAyiD,OAAqB,GAyDpBziD,KAAAkjD,SAAW,SAAC0tB,KACZ5wE,KAAAmjD,UAAY,mBAEtB,SAhEas4B,EAMJA,EAAAv7E,UAAA2f,SAAP,WAAA,IAAAzX,EAAApI,KACEA,KAAK8U,QAAU9U,KAAK8U,QAAQwD,KAAI,SAACmN,GAI/B,OAH6C,IAAzCrd,EAAKye,SAAS7lB,QAAQykB,EAAO3iB,QAC/BtD,OAAOa,OAAOolB,EAAQ,CAACi2D,SAAS,IAE3Bj2D,MAIJg2D,EAAAv7E,UAAA0+C,gBAAP,aAEO68B,EAAAv7E,UAAAglD,WAAP,SAAkBpiD,GAChB9C,KAAK8C,MAAQA,GAGR24E,EAAAv7E,UAAAilD,iBAAP,SAAwBC,GACtBplD,KAAKkjD,SAAWkC,GAGXq2B,EAAAv7E,UAAAmlD,kBAAP,SAAyBD,GACvBplD,KAAKmjD,UAAYiC,GAGnB5lD,OAAAqC,eAAI45E,EAAAv7E,UAAA,QAAK,KAAT,WACE,OAA2B,IAAvBF,KAAKyiD,OAAO9hD,OACP,GAEAX,KAAKyiD,QAAUziD,KAAKyiD,OAAO,QAItC,SAAUr+C,GACR,GAAI,MAAOA,GAAyC,KAANA,EAC5CA,EAAI,QACC,GAAiB,iBAANA,EAChBA,EAAI,CAACA,QACA,IAAKzE,MAAMqS,QAAQ5N,GACxB,MAAM,IAAIE,UAAU,wEAIjBm3E,EAAAv7E,UAAAy7E,UAAP,SAAiBl2D,EAAQpD,GAAzB,IAAAja,EAAApI,KACMqiB,EAAMhhB,OAAOq6E,QACf17E,KAAKyiD,OAAOj+C,KAAKihB,EAAO3iB,OAExB9C,KAAK8U,QAAQnL,SAAQ,SAAC9E,GAChBA,EAAE/B,QAAU2iB,EAAO3iB,OACrBsF,EAAKq6C,OAAOj5C,OAAO3E,EAAG,MAK5B7E,KAAKkjD,SAASljD,KAAK8C,QAxDZ+f,WAAAA,CAARC,KAAAA,iCAAwBnjB,sCAChBkjB,WAAAA,CAARC,KAAAA,iCAAyBnjB,uCAHf87E,EAAwBG,EAAAz6E,WAAA,CAfpC4hB,KAAAA,UAAU,CACTC,SAAU,WACVC,SAAA,6RACAujC,UAAW,CACT,CACErF,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,YAAW,WAAM,OAAAs6B,KAC9Bp6B,OAAO,YAEF,2EAMEi6B,gCCNb,SAAAI,KAA8B,OAAjBA,EAAc16E,WAAA,CAT1BulD,KAAAA,SAAS,CACNC,aAAc,CACV80B,0BAEJ92E,QAAS,CACL82E,0BAEJ70B,QAAS,CAACC,OAAAA,aAAcC,MAAAA,gBAEf+0B,iCC8Eb,SAAAC,KAEA,OAFaA,EAAe36E,WAAA,CAnD3BulD,KAAAA,SAAS,CACNE,QAAS,CAACC,OAAAA,aACNsM,MAAAA,oBACA4oB,SAAAA,eAEAt1B,aACAwK,qBACAsgB,mBAEA9mB,uBACA+wB,sBACAK,eACAG,SAAAA,cACAC,SAAAA,cACAC,SAAAA,cACAhpB,wBACAnK,cAEJpC,aAAc,CACVpnC,sBACAk0C,qBACA+d,8BACA9rD,yBACAhB,uBACAy3D,YAAAA,aAEJ31B,UAAW,CACP41B,MAAAA,YACA5+D,mBACAzW,kBACAuU,kBACAqB,uBACAU,cACA/M,iBACAmH,mBACAuN,6BACAwvC,mBACAkN,YACA3E,gBACAzhD,kBACA5N,wBACAq1D,iBACA2D,gBACAiI,iBACAuB,qBACA7D,kBACA1lE,kBAEJhC,QAAS,CAAC4a,sBAAuBk0C,qBAC7B/uC,uBAAwBusC,qBAAsBuqB,sBAAwBtoB,4BAEjE4oB,WCtFX,SAAYx6E,EAAawB,GACvB9C,KAAKsB,IAAMA,EACXtB,KAAK8C,MAAQA,GCTLu5E,cAAAA,cAAAA,QAAAA,gBAAAA,QAAAA,cAAa,IACrBA,cAAAA,cAAA,KAAA,GAAA,OACAA,cAAAA,cAAA,KAAA,GAAA,OACAA,cAAAA,cAAA,QAAA,GAAA,UACAA,cAAAA,cAAA,OAAA,GAAA,SACAA,cAAAA,cAAA,SAAA,GAAA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject ,  Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","export enum AfeControlType {\n    AfeFormControl,\n    AfeFormArray,\n    AfeFormGroup,\n    None\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nimport * as _ from 'lodash';\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  calcBMIForAgeZscore(bmiForAgeRef, height, weight) {\n   let bmi;\n   const maxAgeInDays = 1856;\n    if (height && weight) {\n      bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    const refSectionObject = _.first(bmiForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (bmi < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= bmi) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M' || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  bmi && refSectionObject ?  formattedSDValue : null;\n  }\n  calcWeightForHeightZscore(weightForHeightRef, height, weight) {\n    let refSection ;\n    let formattedSDValue;\n    if (height && weight) {\n      height = parseFloat(height).toFixed(1);\n    }\n    const standardHeightMin = 45;\n    const standardMaxHeight = 110;\n    if ( height < standardHeightMin || height > standardMaxHeight) {\n      formattedSDValue = -4;\n    } else {\n        refSection = _.filter(weightForHeightRef, (refObject) => {\n        return parseFloat(refObject['Length']).toFixed(1) === height;\n      });\n    }\n\n    const refSectionObject = _.first(refSection);\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (weight < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= weight) {\n          minReferencePoint.push(value);\n          }\n          });\n\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight  ?  formattedSDValue : null;\n  }\n\n  calcHeightForAgeZscore(heightForAgeRef, height, weight) {\n\n    const refSectionObject = _.first(heightForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (height < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= height) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight && refSectionObject ?  formattedSDValue : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      calcBMIForAgeZscore: helper.calcBMIForAgeZscore,\n      calcWeightForHeightZscore: helper.calcWeightForHeightZscore,\n      calcHeightForAgeZscore: helper.calcHeightForAgeZscore,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject, OnChanges, SimpleChanges\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode, GroupNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\n// import { concat, of, Observable, Subject, BehaviorSubject } from 'rxjs';\n// import * as _ from 'lodash';\n\n// import { debounceTime, distinctUntilChanged, tap, switchMap, catchError, map } from 'rxjs/operators';\n// import { QuestionBase } from '../question-models';\n\n@Component({\n  selector: 'form-renderer',\n  templateUrl: 'form-renderer.component.html',\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  // items$: Observable<any[]>;\n  // itemsLoading = false;\n  // itemsInput$ = new Subject<string>();\n\n  constructor(\n    private validationFactory: ValidationFactory,\n    private dataSources: DataSources,\n    private formErrorsService: FormErrorsService,\n    @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n  }\n\n\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n      this.node.question.renderingType === 'remote-select') {\n      // let selectQuestion = this.node.form.searchNodeByQuestionId(this.node.question.key)[0];\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n     /*\n      let defaltValues = of([]);\n      if (this.dataSource.resolveSelectedValue(selectQuestion.control.value)) {\n        defaltValues = this.dataSource.resolveSelectedValue(selectQuestion.control.value).pipe(\n          catchError(() => of([])), // empty list on error\n        );\n      }\n      this.items$ = concat(\n        defaltValues,\n        this.itemsInput$.pipe(\n          debounceTime(200),\n          distinctUntilChanged(),\n          tap(() => this.itemsLoading = true),\n          switchMap(term => this.dataSource.searchOptions(term).pipe(\n            catchError(() => of([])), // empty list on error\n            tap(() => {\n              this.itemsLoading = false\n            })\n          ))\n        )\n      );\n      */\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      // console.log('Key', this.node.question);\n      // console.log('Data source', this.dataSource);\n    }\n\n  }\n\n  checkSection(node: NodeBase) {\n    if (node.question.renderingType === 'section') {\n      let groupChildrenHidden = false;\n      let allSectionControlsHidden = Object.keys(node.children).every((k) => {\n        let innerNode = node.children[k];\n        if (innerNode instanceof GroupNode) {\n          groupChildrenHidden = Object.keys(innerNode.children).every((i) => innerNode.children[i].control.hidden)\n        }\n        return node.children[k].control.hidden || groupChildrenHidden;\n      });\n      return !allSectionControlsHidden;\n    }\n    return true;\n  }\n\n  public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public tabSelected($event) {\n    this.activeTab = $event;\n    this.setPreviousTab();\n  }\n  public setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n  public hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          if (element !== null && element.focus) {\n            element.focus();\n            element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          }\n        }, 100);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    // console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    // console.log('Event', event);\n    // console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n      e.style.display = 'none';\n    } else {\n      e.style.display = 'block';\n    }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n  private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    templateUrl: 'error-renderer.component.html',\n    styleUrls: ['./error-renderer.component.css']\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select'\n          || this._node.question.renderingType === 'single-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    templateUrl: 'select-dropdown.component.html',\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput', {static: false}) filterInput: any;\r\n    @ViewChild('optionsList', {static: false}) optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    templateUrl: './select.component.html',\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection', {static: false}) selectionSpan: any;\r\n    @ViewChild('dropdown', {static: false}) dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput', {static: false}) filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of ,  Subscription ,  Observable ,  BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2, ChangeDetectorRef } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport { SecurePipe } from './secure.pipe';\n@Component({\n    selector: 'app-file-upload',\n    templateUrl: 'file-upload.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => FileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class FileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    fileUuid = null;\n    pdfUploaded = false;\n    formEntryMode = true;\n    pdfUrl: string;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (this.fileUuid) {\n            this.checkFileType();\n        }\n\n    }\n    public onFileChange(fileList) {\n        for (const file of fileList) {\n            this.upload(file);\n        }\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                this.fileUuid = result.image;\n                this.checkFileType();\n                this.propagateChange(this.fileUuid);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.fileUuid) {\n            this.fileUuid = value;\n            this.checkFileType();\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.fileUuid = null;\n        this.pdfUploaded = false;\n        this.pdfUrl = null;\n        this.propagateChange(this.fileUuid);\n    }\n\n    public getPdfUrl(fileUuid: string) {\n        this.dataSource.fetchFile(fileUuid, 'pdf').subscribe((file) => {\n            this.pdfUploaded = true;\n            this.pdfUrl = file.changingThisBreaksApplicationSecurity;\n        });\n    }\n    public checkFileType() {\n        const re = /pdf/gi;\n        if (this.fileUuid.search(re) !== -1) {\n            this.getPdfUrl(this.fileUuid);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgxFileUploaderModule } from 'ngx-file-uploader';\n\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { FileUploadComponent } from './file-upload.component';\nimport { WebcamModule } from 'ngx-webcam';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, SharedModule, WebcamModule, NgxFileUploaderModule],\n    exports: [FileUploadComponent],\n    declarations: [FileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.css'],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    templateUrl: './time-picker.component.html',\n    styleUrls: ['./time-picker.component.css'],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    templateUrl: './date-time-picker.component.html',\n    styleUrls: ['./date-time-picker.component.css'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","import { Moment } from 'moment/moment';\n\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    templateUrl: './ngx-date-time-picker.component.html',\n    styleUrls: ['./ngx-date-time-picker.component.css'],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format();\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    public value;\n    public showTimePicker = false;\n    @Input() weeks: number[] = [0, 2, 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n\n    public writeValue(value) {\n        this.value = value;\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n\n    }\n\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public onDateSelect($event) {\n\n        const setDate = moment($event.value);\n        const setTime = this.selectedTime;\n        const dateString = this.setDateTime(setDate, setTime);\n\n        const selectedDate = $event.value;\n        this.value = dateString;\n\n    }\n\n    public toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n\n\n    public setCurrentTime() {\n\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm:ss');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        const dateToUse = moment().format();\n        const nextWeekDate = moment(dateToUse).add($event.value, 'weeks');\n        const nextWeekTime = dateToUse;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public selectionChange($event) {\n        console.log('Week selected', $event);\n    }\n\n\n    public getWeekPickerCssClass() {\n        if (this.showTime) {\n            return 'col-sm-2 form-group';\n        }\n        return 'col-sm-3 form-group';\n    }\n\n    public getDatePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n\n        if (this.showTime === true) {\n            return 'col-sm-8 form-group';\n        }\n        return 'col-sm-12 form-group';\n    }\n\n    public getTimePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n        return 'col-sm-4 form-group';\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        let newTime;\n        if (this.showTime) {\n            newTime = moment(setTime).format('HH:mm:ss');\n        } else {\n            newTime = '00:00:00';\n        }\n        const newDateTime = moment(newDate + '' + newTime, 'DD-MM-YYYY HH:mm:ss');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = dateTimeString;\n        this.value = dateTimeString;\n        this.onChange(this.value);\n\n        return dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\n// import { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        DateTimePickerModule,\n        // AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `<ng-select\n                   (searchInputText)=\"getChangingText($event)\"\n                    (ngModelChange)=\"onValueChange($event)\"\n                    [options]=\"question_options\"\n                    [multiple]=\"multiple\" >\n            </ng-select>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        // console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        // console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select'  || 'single-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any, additionalScopevalues: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    if (additionalScopevalues) {\n      for (const o in additionalScopevalues) {\n        if (additionalScopevalues[o]) {\n          deps[o] = additionalScopevalues[o];\n        }\n      }\n    }\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n  public evaluatePrecondition(expr: string, dataSources: any, historicalValue: any): any {\n    const additionalScope = {\n      histValue: historicalValue\n    };\n\n    return this.evaluate(expr, dataSources, additionalScope);\n  }\n\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'single-select':\n        return this.toSelectQuestion(schema);\n      case 'multi-select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'file':\n        return this.toFileUploadQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n      schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources, undefined);\n      question.historicalDataValue = origValue;\n      // console.info('historical value', origValue);\n      // console.info('historical data question :::', question);\n      // console.info('schema data question :::', schemaQuestion);\n\n      if (schemaQuestion.historicalPrepopulateCondition && origValue) {\n        const toPopulate = this.historicalHelperService.evaluatePrecondition(schemaQuestion.historicalPrepopulateCondition,\n          this.dataSources, origValue);\n\n        if (toPopulate) {\n          question.defaultValue = origValue.value;\n        }\n        return; // don't try to evaluate the other option\n      }\n\n      if (schemaQuestion.historicalPrepopulate && origValue) {\n        // sample schema options for this branch\n        // \"historicalPrepopulate\":true,\n        // \"allowedHistoricalValueAgeInDays\": 40000,\n        const valDate = moment(origValue.valueDate);\n        const differenceInDays = moment().diff(valDate, 'days');\n        if (Number.isInteger(schemaQuestion.allowedHistoricalValueAgeInDays)) {\n          if (differenceInDays <= schemaQuestion.allowedHistoricalValueAgeInDays) {\n            question.defaultValue = origValue.value;\n          }\n        } else {\n          question.defaultValue = origValue.value;\n        }\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox' ||\n                node.question.extras.questionOptions.rendering === 'multi-select') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n        console.log('valuePayload', valuePayload);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        } else {\n            // transform value to memoent value to avoid error\n            const formattedVal = moment(datetime).format();\n            const val = formattedVal.substring(0, 19).replace('T', ' ');\n            return this.isEmpty(val) ? undefined : val;\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox' ||\n            node.question.extras.questionOptions.rendering !== 'multi-select') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox' ||\n            obs.question.extras.questionOptions.rendering === 'multi-select') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page, label: o.children[key].question.label });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section, node: o.children[key], label: o.children[key].question.label });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        // console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            // console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        // console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            //Very weird work around for an issue with setting the value\n                            node.control.setValue(firstProvider.uuid);\n                            setTimeout(()=>{\n                                node.control.setValue(firstProvider.uuid);\n                            });\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    templateUrl: 'remote-select.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent, {static: false}) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  templateUrl: './appointments-overview.component.html',\n  styleUrls: ['./appointments-overview.component.css']\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        // console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const programTypes = ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838'];\n            const programTypeParams = programTypes.join();\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programType: programTypeParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\n\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\nimport { EncounterViewerService } from '../encounter-viewer.service';\n\n@Component({\n    selector: 'encounter-viewer',\n    templateUrl: './encounter-viewer.component.html',\n    styleUrls: ['./encounter-viewer.component.css'],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n    @Input() set form(form: any) {\n        this.rootNode = form.rootNode;\n        this._schema = form.schema;\n        console.log(this.getQuestionNodes(this.traverse(this.rootNode)));\n    }\n\n    constructor(\n        private encounterViewerService: EncounterViewerService,\n        private dataSources: DataSources) { }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            arrays.push(page.page);\n        }\n        return merged.concat.apply([], arrays);\n    }\n    public ngOnInit() {\n        if (this.rootNode) {\n\n        }\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n            this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n            this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else {\n            this.customDataSource = this.encounterViewerService;\n        }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            } else {\n                console.log('Console.log', o);\n            }\n\n        }\n        return questions;\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Form } from '../form-entry/form-factory/form';\nimport { ObsValueAdapter } from '../form-entry/value-adapters/obs.adapter';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { DataSources } from '../form-entry/data-sources/data-sources';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\nimport { combineLatest, BehaviorSubject ,  Observable } from 'rxjs';\n\nimport * as moment_ from 'moment';\nimport * as _ from 'lodash';\nimport * as pdfMake from 'pdfmake/build/pdfmake.js';\nimport 'pdfmake/build/vfs_fonts.js';\nimport * as pdfFonts from 'pdfmake/build/vfs_fonts';\n\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EncounterPdfViewerService {\n  private remoteDataSource: DataSource;\n  public error: boolean;\n  public errorMessage: string;\n  public showLoader: boolean;\n  public subscribedAnswers: any = {\n    questions: {\n      stack: []\n    },\n    answers: []\n  };\n\n  constructor(\n    private encounterViewerService: EncounterViewerService,\n    private obsValueAdapter: ObsValueAdapter,\n    private dataSources: DataSources\n  ) {}\n\n  getPages(pages: any, form: Form, remoteSelectsOnly?: boolean, remoteAns?: any): any[] {\n    const content = [];\n    let remoteQuestions = [];\n\n    for (const page of pages) {\n      if (remoteSelectsOnly) {\n        remoteQuestions = remoteQuestions.concat(this.getSections(page.page, form, false, remoteAns));\n      } else {\n        for (const question of form.rootNode.question.questions) {\n          if (page.label === form.rootNode.children[question.key].question.label &&\n            this.encounterViewerService.questionsAnswered(form.rootNode.children[question.key])) {\n            content.push({\n              style: 'tableExample',\n              table: {\n                widths: ['*'],\n                headerRows: 1,\n                keepWithHeaderRows: 1,\n                body: [\n                  [{ text: page.label, style: 'tableHeader' }],\n                  [\n                    {\n                      style: 'tableExample',\n                      table: {\n                        widths: ['*'],\n                        body: this.getSections(page.page, form, true, remoteAns)\n                      },\n                      layout: 'noBorders',\n                      margin: [5, 0, 0, 0]\n                    }\n                  ]\n                ]\n              },\n              layout: {\n                hLineWidth: function(i, node) {\n                  return (i === 0 || i === node.table.body.length) ? 0.5 : 0.5;\n                },\n                vLineWidth: function(i, node) {\n                  return (i === 0 || i === node.table.widths.length) ? 0.5 : 0.5;\n                },\n                hLineColor: function(i, node) {\n                  return (i === 0 || i === node.table.body.length) ? '#ddd' : '#ddd';\n                },\n                vLineColor: function(i, node) {\n                  return (i === 0 || i === node.table.body.length) ? '#ddd' : '#ddd';\n                }\n              }\n            });\n          }\n        }\n      }\n    }\n    return remoteSelectsOnly ? remoteQuestions : content;\n  }\n\n  getSections(sections: any, form: Form, resolve: any, remoteAns: any): any[] {\n    const content = [];\n    const answeredSections = [];\n    let questions: Array<Observable<any>> = [];\n\n    sections.map(s => {\n      if (this.encounterViewerService.questionsAnswered(s.node)) {\n        answeredSections.push(s);\n      }\n    });\n\n    for (const section of answeredSections) {\n      questions = questions.concat(this.getRemoteSectionData(section.section));\n    }\n\n    if (resolve && remoteAns) {\n      for (const section of answeredSections) {\n        content.push([\n          {\n            table: {\n              widths: ['*'],\n              body: [\n                [{ text: section.label, style: 'tableSubheader' }],\n                [ this.getSectionData(section.section, remoteAns, form) ]\n              ]\n            },\n            layout: 'noBorders'\n          }\n        ]);\n      }\n      return content;\n    } else {\n      return questions;\n    }\n  }\n\n  private appendResolvedAnswer(resolvedAnswer: any, questions: any, node?: any) {\n    if (resolvedAnswer) {\n      questions.stack.push({\n        text: [\n          `${(node) ? node.question.label : 'Question label' }${\n            (node) ? (node.question.label.indexOf(':') > 1 ? '' : ':') : ''\n          } `,\n          { text: `${resolvedAnswer}`, bold: true }\n        ], style: 'answers'\n      });\n    }\n  }\n\n  // get remote selects only\n  getRemoteSectionData(section: any): any {\n    const questions: Array<Observable<any>> = [];\n    this.subscribedAnswers.questions.stack = [];\n\n    for (const node of section) {\n      if (node.question.renderingType === 'remote-select') {\n        this.remoteDataSource = this.dataSources.dataSources[node.question.dataSource];\n        if (node.control.value !== '') {\n          if (this.remoteDataSource) {\n            questions.push(this.remoteDataSource.resolveSelectedValue(node.control.value));\n          }\n        }\n      }\n    }\n    return questions;\n  }\n\n  // merge remote selects\n  getSectionData(section: any, remoteAns: any[], form: Form): any {\n    const questions = {\n      stack: []\n    };\n\n    let resolvedAnswer = '';\n\n    for (const node of section) {\n      switch (node.question.renderingType) {\n        case 'group':\n          if (node.groupMembers) {\n            questions.stack.push(this.getSectionData(node.groupMembers, remoteAns, form));\n          }\n          break;\n\n        case 'field-set':\n          if (node.children) {\n            const groupMembers = [];\n            const result = Object.keys(node.children).map((key) => node.children[key]);\n\n            if (result) {\n              groupMembers.push(result);\n              questions.stack.push(this.getSectionData(groupMembers[0], remoteAns, form));\n            }\n          }\n          break;\n\n        case 'repeating':\n          if (node.groupMembers) {\n            questions.stack.push(this.getSectionData(node.groupMembers, remoteAns, form));\n          }\n          break;\n\n        case 'remote-select':\n          this.remoteDataSource = this.dataSources.dataSources[node.question.dataSource];\n          for (const ans of remoteAns) {\n            if (ans.value === node.control.value) {\n              this.appendResolvedAnswer(ans.label, questions, node);\n            }\n          }\n          break;\n\n        default:\n          const answer = node.control.value;\n          if (answer) {\n            resolvedAnswer = this.resolveValue(answer, form);\n            this.appendResolvedAnswer(resolvedAnswer, questions, node);\n          }\n      }\n    }\n\n    return questions;\n  }\n\n  resolveValue(answer: any, form: Form, arrayElement?: boolean): any {\n    if (answer !== '') {\n      if (this.isUuid(answer)) {\n        const val = this.encounterViewerService.resolveSelectedValueFromSchema(answer, form.schema);\n        if (!arrayElement) {\n          if (val) {\n            return val.toUpperCase();\n          } else {\n            return answer;\n          }\n        } else {\n          return val;\n        }\n      } else if (_.isArray(answer)) {\n        const arr = [];\n        _.forEach(answer, elem => {\n          arr.push(this.resolveValue(elem, form, true));\n        });\n        return arr.toString();\n      } else if (this.isDate(answer)) {\n        if (!arrayElement) {\n          return this.encounterViewerService.convertTime(answer);\n        } else {\n          return this.encounterViewerService.convertTime(answer);\n        }\n      } else if (typeof answer === 'object') {\n        const values = [];\n        const result = Object.keys(answer).map((key) => [key, answer[key]]);\n\n        values.push(result);\n        return values;\n      } else {\n       return answer;\n      }\n    }\n  }\n\n  generatePdfDefinition(form: Form): any {\n    const docDefinition$ = new BehaviorSubject<any>({});\n    const remoteSelects = this.getPages((this.obsValueAdapter.traverse(form.rootNode)), form, true);\n\n    combineLatest(remoteSelects).subscribe(remoteAns => {\n      if (remoteAns) {\n        const docDefinition = {\n          pageSize: 'A4',\n          content: this.getPages(this.obsValueAdapter.traverse(form.rootNode), form, false, remoteAns),\n          styles: {\n            answers: {\n              fontSize: 8\n            },\n            banner: {\n              fontSize: 9,\n              bold: true,\n              margin: [50, 15, 30, 0]\n            },\n            bannerItem: {\n              margin: [2, 2, 2, 2]\n            },\n            bannerLabel: {\n              color: '#2f4f4f'\n            },\n            confidential: {\n              color: 'red',\n              fontSize: 8,\n              bold: true,\n              margin: [60, 0, 0, 0]\n            },\n            footer: {\n              alignment: 'center',\n              fontSize: 8,\n              bold: true\n            },\n            header: {\n              fontSize: 9,\n              bold: true,\n              margin: [5, 5, 5, 5]\n            },\n            pageNumber: {\n              color: '#2f4f4f',\n              fontSize: 6\n            },\n            tableExample: {\n              fontSize: 10,\n              margin: [5, 0, 0, 5]\n            },\n            tableHeader: {\n              fillColor: '#f5f5f5',\n              width: ['100%'],\n              borderColor: '#333',\n              fontSize: 9,\n              bold: true,\n              margin: [5, 0, 5, 0]\n            },\n            tableSubheader: {\n              fillColor: '#337ab7',\n              width: ['100%'],\n              fontSize: 9,\n              color: 'white',\n              margin: [5, 0, 5, 0]\n            },\n            timestamp: {\n              bold: true,\n              color: '#2f4f4f'\n            }\n          },\n          defaultStyle: {\n            fontSize: 7\n          }\n        };\n        docDefinition$.next(docDefinition);\n      }\n    });\n\n    return docDefinition$;\n  }\n\n  displayPdf(form) {\n    const pdf = pdfMake;\n    let patient;\n    pdf.vfs = pdfMake.vfs;\n\n    if (form.dataSourcesContainer.dataSources._dataSources) {\n      patient = form.dataSourcesContainer.dataSources._dataSources['patientInfo'];\n    }\n\n    this.generatePdfDefinition(form).subscribe(docDefinition => {\n      if (!(_.isEmpty(docDefinition))) {\n        if (typeof patient !== 'undefined') {\n          const banner = [];\n\n          if (patient.name) {\n            banner.push({\n              text: [\n                { text: 'Name: ', style: 'bannerLabel' },\n                { text: `${this.titleize(patient.name)}` }\n              ],\n              style: 'bannerItem'\n            });\n          }\n\n          if (patient.nid) {\n            banner.push({\n              text: [\n                { text: 'ID: ', style: 'bannerLabel' },\n                { text: `${patient.nid}` }\n              ],\n              style: 'bannerItem'\n            });\n          }\n\n          if (patient.birthdate) {\n            banner.push({\n              text: [\n                { text: 'DOB: ', style: 'bannerLabel' },\n                { text: `${moment(patient.birthdate).format('l')} (${patient.age} yo)` }\n              ],\n              style: 'bannerItem'\n            });\n          }\n\n          if (patient.mui) {\n            banner.push({\n              text: [\n                { text: 'MUI: ', style: 'bannerLabel' },\n                { text: `${patient.mui}` }\n              ],\n              style: 'bannerItem'\n            });\n          }\n\n          if (patient.mhn) {\n            banner.push({\n              text: [\n                { text: 'MTRH No: ', style: 'bannerLabel' },\n                { text: `${patient.mhn}` }\n              ],\n              style: 'bannerItem'\n            });\n          }\n\n          docDefinition.header = {\n            style: 'banner',\n            table: {\n              body: [ banner ]\n            },\n            layout: 'noBorders'\n          };\n        }\n\n        docDefinition.footer = (currentPage, pageCount) => {\n          return \t{\n            style: 'footer',\n            widths: ['*', 'auto'],\n            table: {\n              body: [\n                [\n                  {\n                    text: 'Note: Confidentiality is one of the core duties of all medical practitioners. '\n                      + 'Patients\\' personal health information should be kept private.', style: 'confidential'\n                  }, ''\n                ],\n                [\n                  { text: `Generated on ${new Date().toUTCString()}`, style: 'timestamp' },\n                  { text: `${currentPage.toString()} of ${pageCount}`, style: 'pageNumber' }\n                ],\n              ]\n            },\n            layout: 'noBorders'\n          };\n        };\n\n        const win = window.open('', '_blank');\n        pdf.createPdf(docDefinition).open({}, win);\n      }\n    }, (error) => {\n      console.log('Error: ', error);\n    });\n  }\n\n  isDate(val: any) {\n    return moment(val, moment.ISO_8601, true).isValid();\n  }\n\n  isUuid(value: string) {\n    return (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1);\n  }\n\n  titleize(str) {\n    return str.replace(/\\w\\S*/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n\nimport { EncounterPdfViewerService } from '../encounter-pdf-viewer.service';\n\n@Component({\n    selector: 'encounter-renderer',\n    templateUrl: './encounter-container.component.html',\n    styleUrls: ['./encounter-container.component.css']\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(\n        private encAdapter: EncounterAdapter,\n        private encounterPdfViewerService: EncounterPdfViewerService) { }\n\n    ngOnInit() {\n    }\n\n    displayPdf() {\n        this.encounterPdfViewerService.displayPdf(this.$form);\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styleUrls: ['./question-control.component.css'],\n    templateUrl: './question-control.component.html',\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"fileUuid\">\n              <img *ngIf=\"!resultsIsPdf\" class=\"img-responsive\"\n                [src]=\"fileUuid | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>\n                <a *ngIf=\"resultsIsPdf\" (click)=\"getUrl()\" style=\"cursor: pointer\"><u>Open PDF</u></a>\n                `,\n\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor, OnInit {\n    @Input() public source: any;\n    public fileUuid = null;\n    public pdfUrl: any;\n    public resultsIsPdf = false;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    ngOnInit() {  }\n    // get accessor\n    get value(): any {\n      return this.fileUuid;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.fileUuid) {\n        this.fileUuid = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.fileUuid) {\n          this.fileUuid = v;\n         this.checkFileType();\n      }\n    }\n    public checkFileType() {\n      const re = /pdf/gi;\n          if (this.fileUuid.search(re) !== -1) {\n            this.resultsIsPdf = true;\n          }\n  }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  public getUrl() {\n      this.dataSource.fetchFile(this.fileUuid, 'pdf').subscribe((file) => {\n        window.open(file.changingThisBreaksApplicationSecurity , '_blank');\n      });\n  }\n}\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { EncounterPdfViewerService } from './encounter-pdf-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\n// import { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        // HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n        EncounterPdfViewerService\n    ],\n    exports: [\n        EncounterContainerComponent\n        // HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxControlComponent),\n      multi: true,\n    }],\n  styles: [`\n    .no-border {\n      border: 0;\n      box-shadow: none;\n    }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options: Array<any>;\n  @Input() public selected: Array<any>;\n  public _value: Array<any> = [];\n\n  public ngOnInit() {\n    this.options = this.options.map((option) => {\n      if (this.selected.indexOf(option.value) !== -1) {\n        Object.assign(option, {checked: true});\n      }\n      return option;\n    });\n  }\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n      return '';\n    } else {\n      return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n      v = [];\n    } else if (typeof v === 'string') {\n      v = [v];\n    } else if (!Array.isArray(v)) {\n      throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = (change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\n// import { NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\nimport { SelectModule } from '../components/select/select.module';\n// import { NgSelectModule } from '@ng-select/ng-select';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\nimport { SharedModule } from '../shared.module';\nimport { TimeAgoPipe } from 'time-ago-pipe';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        // NgSelectModule,\n        SelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        // NoopAnimationsModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule,\n        SharedModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent,\n        TimeAgoPipe\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","export enum RenderingType {\n    Form,\n    Page,\n    Section,\n    Select,\n    DropDown\n}\n"]}